<?xml version="1.0" encoding="UTF-8"?>
<registry>
    <comment>
        Copyright (C) 2025 Dylan Perks and Contributors

        This file, al.xml, is the OpenAL API Registry. The canonical version of the registry, together with
        documentation and Python generator scripts used to generate C header files for OpenAL, can always be found in
        the OpenAL Soft repository at https://github.com/kcat/openal-soft.

        This file is based upon the following documents and reproduces the same copyright notice:
        - OpenAL Specification and Reference v1.0 Draft Edition (Published June 2000)
          Copyright (C) 1999-2000 by Loki Software
        - OpenAL Specification and Reference v1.1 (Published June 2005)
          Copyright (C) 2005 by authors

        In addition, this file is based on OpenAL Soft, and makes use of only numerical parameters, data structure
        layouts and accessors, and small macros and small inline functions (ten lines or less in length) in accordance
        with the Lesser General Public License v2.0. Usage of this file alone is unencumbered by LGPL and does not
        attract the copyleft provisions thereof.
        
        Permission is granted to make and distribute verbatim copies of this file provided the copyright notice and this
        permission notice are preserved on all copies.

        Permission is granted to copy and distribute translations of this file into another language, under the above
        conditions for modified versions, except that this permission notice may be stated in a translation approved by
        the copyright owners.
    </comment>

    <types namespace="AL">
        <type category="include" name="float.h"/>

        <type category="define">#define <name>OPENAL</name></type>
        <type category="define">#define <name>ALAPI</name>                                    AL_API</type>
        <type category="define">#define <name>ALAPIENTRY</name>                               AL_APIENTRY</type>
        <type category="define">#define <name>AL_INVALID</name>                               (-1)</type>
        <type category="define">#define <name>AL_ILLEGAL_ENUM</name>                          AL_INVALID_ENUM</type>
        <type category="define">#define <name>AL_ILLEGAL_COMMAND</name>                       AL_INVALID_OPERATION</type>

        <type category="basetype" comment="8-bit boolean">typedef char <name>ALboolean</name>;</type>
        <!-- NOTE: ALchar doesn't exist in AL_VERSION_1_0, but there's no good way to vary the signatures between the features. -->
        <type category="basetype" comment="character">typedef char <name>ALchar</name>;</type>
        <type category="basetype" comment="signed 8-bit integer">typedef signed char <name>ALbyte</name>;</type>
        <type category="basetype" comment="unsigned 8-bit integer">typedef unsigned char <name>ALubyte</name>;</type>
        <type category="basetype" comment="signed 16-bit integer">typedef short <name>ALshort</name>;</type>
        <type category="basetype" comment="unsigned 16-bit integer">typedef unsigned short <name>ALushort</name>;</type>
        <type category="basetype" comment="signed 32-bit integer">typedef int <name>ALint</name>;</type>
        <type category="basetype" comment="unsigned 32-bit integer">typedef unsigned int <name>ALuint</name>;</type>
        <type category="basetype" comment="non-negative 32-bit integer size">typedef int <name>ALsizei</name>;</type>
        <type category="basetype" comment="32-bit enumeration value">typedef int <name>ALenum</name>;</type>
        <type category="basetype" comment="32-bit IEEE-754 floating-point">typedef float <name>ALfloat</name>;</type>
        <type category="basetype" comment="64-bit IEEE-754 floating-point">typedef double <name>ALdouble</name>;</type>
        <type category="basetype" comment="void type (opaque pointers only)">typedef void <name>ALvoid</name>;</type>
        <type category="basetype">struct <name>_GUID</name>;</type>

        <!-- TODO We should probably add the preambles here, vk.xml has an example of what this could look like, but has
             the drawback that today it only has one define/typedef per <type> block i.e. so we can't have multiple
             defines in the same #if, meaning an #if would be duplicated for each typedef/define that is conditional on
             that same condition. It is my understanding that adding the preambles here would be a necessity to be fully
             "compliant" with the Khronos way of doing things i.e. a clear chain of header and inter-API dependencies
             can be determined from the XML alone. A good test of this if ever we do think we've reached that point is
             to see if the OpenCL/OpenGL tooling runs against our XML, as this probably should be an eventual goal. -->

        <!-- Defines for promotions. TODO Should we figure out a better way? -->
        <type category="define" comment="Capture extension">#define <name>ALC_EXT_CAPTURE</name> 1</type>
        <type category="define" comment="Enumerate All extension">#define <name>ALC_ENUMERATE_ALL_EXT</name> 1</type>

        <type category="basetype">typedef _alsoft_int64_t <name>ALint64SOFT</name>;</type>
        <type category="basetype">typedef _alsoft_uint64_t <name>ALuint64SOFT</name>;</type>

        <type category="define">#define <name>AL_EXT_FOLDBACK_NAME</name>                     "AL_EXT_FOLDBACK"</type>
        <type category="funcpointer">typedef void (AL_APIENTRY*<name>LPALFOLDBACKCALLBACK</name>)(<type>ALenum</type>,<type>ALsizei</type>) AL_API_NOEXCEPT17;</type>
        <type category="funcpointer">
typedef void (AL_APIENTRY*<name>ALEVENTPROCSOFT</name>)(<type>ALenum</type> eventType, <type>ALuint</type> object, <type>ALuint</type> param,
    <type>ALsizei</type> length, const <type>ALchar</type> *message, void *userParam) AL_API_NOEXCEPT17;
        </type>
        <type category="funcpointer">typedef <type>ALsizei</type> (AL_APIENTRY*<name>ALBUFFERCALLBACKTYPESOFT</name>)(<type>ALvoid</type> *userptr, <type>ALvoid</type> *sampledata, <type>ALsizei</type> numbytes) AL_API_NOEXCEPT17;</type>
        <type category="funcpointer">typedef void (AL_APIENTRY*<name>ALDEBUGPROCEXT</name>)(<type>ALenum</type> source, <type>ALenum</type> type, <type>ALuint</type> id, <type>ALenum</type> severity, <type>ALsizei</type> length, const <type>ALchar</type> *message, void *userParam) AL_API_NOEXCEPT17;</type>
    </types>

    <types namespace="ALC">
        <type category="define">#define <name>ALCAPI</name>                                   ALC_API</type>
        <type category="define">#define <name>ALCAPIENTRY</name>                              ALC_APIENTRY</type>
        <type category="define">#define <name>ALC_INVALID</name>                              0</type>
        <type category="define" comment="Supported ALC version?">#define <name>ALC_VERSION_0_1</name>                          1</type>

        <type category="basetype" comment="Opaque device handle">typedef struct ALCdevice <name>ALCdevice</name>;</type>
        <type category="basetype" comment="Opaque context handle">typedef struct ALCcontext <name>ALCcontext</name>;</type>
        <type category="basetype" comment="8-bit boolean">typedef char <name>ALCboolean</name>;</type>
        <!-- NOTE: ALchar doesn't exist in AL_VERSION_1_0, but there's no good way to vary the signatures between the features. -->
        <type category="basetype" comment="character">typedef char <name>ALCchar</name>;</type>
        <type category="basetype" comment="signed 8-bit integer">typedef signed char <name>ALCbyte</name>;</type>
        <type category="basetype" comment="unsigned 8-bit integer">typedef unsigned char <name>ALCubyte</name>;</type>
        <type category="basetype" comment="signed 16-bit integer">typedef short <name>ALCshort</name>;</type>
        <type category="basetype" comment="unsigned 16-bit integer">typedef unsigned short <name>ALCushort</name>;</type>
        <type category="basetype" comment="signed 32-bit integer">typedef int <name>ALCint</name>;</type>
        <type category="basetype" comment="unsigned 32-bit integer">typedef unsigned int <name>ALCuint</name>;</type>
        <type category="basetype" comment="non-negative 32-bit integer size">typedef int <name>ALCsizei</name>;</type>
        <type category="basetype" comment="32-bit enumeration value">typedef int <name>ALCenum</name>;</type>
        <type category="basetype" comment="32-bit IEEE-754 floating-point">typedef float <name>ALCfloat</name>;</type>
        <type category="basetype" comment="64-bit IEEE-754 floating-point">typedef double <name>ALCdouble</name>;</type>
        <type category="basetype" comment="void type (for opaque pointers only)">typedef void <name>ALCvoid</name>;</type>

        <type category="basetype">typedef _alsoft_int64_t <name>ALCint64SOFT</name>;</type>
        <type category="basetype">typedef _alsoft_uint64_t <name>ALCuint64SOFT</name>;</type>

        <type category="define">#define <name>ALC_EXT_EFX_NAME</name>                         "ALC_EXT_EFX"</type>
        <type category="funcpointer">
typedef void (ALC_APIENTRY*<name>ALCEVENTPROCTYPESOFT</name>)(<type>ALCenum</type> eventType, <type>ALCenum</type> deviceType,
    <type>ALCdevice</type> *device, <type>ALCsizei</type> length, const <type>ALCchar</type> *message, void *userParam) ALC_API_NOEXCEPT17;
        </type>
    </types>

    <enums namespace="AL" group="SpecialNumbers">
        <enum value="0" name="AL_NONE" group="DistanceModel" comment="No distance model or no buffer"/>
        <enum value="0" name="AL_FALSE" group="Boolean,SourceSpatializeSOFT,DirectChannelsSOFT" comment="Boolean False."/>
        <enum value="1" name="AL_TRUE" group="Boolean,SourceSpatializeSOFT" comment="Boolean True."/>
    </enums>

    <enums namespace="AL">
        <enum value="0x202" name="AL_SOURCE_RELATIVE" group="SourcePName,SourceBoolean" comment="Relative source.">
            <property on="source" type="ALboolean" group="Boolean" default="AL_FALSE"/>
            <comment>Specifies if the source uses relative coordinates.</comment>
        </enum>
        <enum value="0x1001" name="AL_CONE_INNER_ANGLE" group="SourcePName,SourceInteger,SourceFloat" comment="Inner cone angle, in degrees.">
            <property on="source" type="ALint,ALfloat" range="0..=360" default="360"/>
            <comment>
                The angle covered by the inner cone, the area within which the source will
                not be attenuated by direction.
            </comment>
        </enum>
        <enum value="0x1002" name="AL_CONE_OUTER_ANGLE" group="SourcePName,SourceInteger,SourceFloat" comment="Outer cone angle, in degrees.">
            <property on="source" type="ALint,ALfloat" range="0..=360" default="360"/>
            <comment>
                The angle covered by the outer cone, the area outside of which the source
                will be fully attenuated by direction.
            </comment>
        </enum>
        <enum value="0x1003" name="AL_PITCH" group="SourcePName,SourceFloat" comment="Source pitch.">
            <property on="source" type="ALfloat" range="0.5..=2.0" default="1.0"/>
            <comment>A multiplier for the sample rate of the source's buffer.</comment>
        </enum>
        <enum value="0x1004" name="AL_POSITION" group="SourcePName,ListenerPName,SourceFloat3,ListenerFloat3,SourceInteger3,ListenerFloat3" comment="Source or listener position.">
            <property on="source,listener" type="ALfloat[3],ALint[3]" default="0,0,0"/>
            <comment>
                The source or listener location in three dimensional space.

                OpenAL uses a right handed coordinate system, like OpenGL, where with a
                default view, X points right (thumb), Y points up (index finger), and Z
                points towards the viewer/camera (middle finger).

                To change from or to a left handed coordinate system, negate the Z
                component.
            </comment>
        </enum>
        <enum value="0x1005" name="AL_DIRECTION" group="SourcePName,ListenerPName,SourceFloat3,ListenerFloat3,SourceInteger3,ListenerInteger3" comment="Source direction.">
            <property on="source,listener" type="ALfloat[3],ALint[3]" default="0,0,0"/>
            <comment>
                Specifies the current direction in local space. A zero-length vector
                specifies an omni-directional source (cone is ignored).

                To change from or to a left handed coordinate system, negate the Z
                component.
            </comment>
        </enum>
        <enum value="0x1006" name="AL_VELOCITY" group="SourcePName,ListenerPName,SourceFloat3,ListenerFloat3,SourceInteger3,ListenerInteger3" comment="Source or listener velocity.">
            <property on="source,listener" type="ALfloat[3],ALint[3]" default="0,0,0"/>
            <comment>
                Specifies the current velocity, relative to the position.

                To change from or to a left handed coordinate system, negate the Z
                component.
            </comment>
        </enum>
        <enum value="0x1007" name="AL_LOOPING" group="SourcePName,SourceBoolean" comment="Source looping.">
            <property on="source" type="ALboolean" group="Boolean" default="AL_FALSE"/>
            <comment>Specifies whether source playback loops.</comment>
        </enum>
        <enum value="0x1009" name="AL_BUFFER" group="SourcePName,SourceInteger" comment="Source buffer.">
            <property on="source" type="ALuint" class="buffer" default="AL_NONE"/>
            <comment>Specifies the buffer to provide sound samples for a source.</comment>
        </enum>
        <enum value="0x100A" name="AL_GAIN" group="SourcePName,SourceFloat" comment="Source or listener gain.">
            <property on="source,listener" type="ALfloat" range="0.0.."/>
            <comment>
                For sources, an initial linear gain value (before attenuation is applied).
                For the listener, an output linear gain adjustment.

                A value of 1.0 means unattenuated. Each division by 2 equals an attenuation
                of about -6dB. Each multiplication by 2 equals an amplification of about
                +6dB.
            </comment>
        </enum>
        <enum value="0x100D" name="AL_MIN_GAIN" group="SourcePName,SourceFloat" comment="Minimum source gain.">
            <property on="source" type="ALfloat" range="0.0..=1.0"/>
            <comment>
                The minimum gain allowed for a source, after distance and cone attenuation
                are applied (if applicable).
            </comment>
        </enum>
        <enum value="0x100E" name="AL_MAX_GAIN" group="SourcePName,SourceFloat" comment="Maximum source gain.">
            <property on="source" type="ALfloat" range="0.0..=1.0"/>
            <comment>
                The maximum gain allowed for a source, after distance and cone attenuation
                are applied (if applicable).
            </comment>
        </enum>
        <enum value="0x100F" name="AL_ORIENTATION" group="ListenerPName,ListenerFloat" comment="Listener orientation.">
            <property on="listener" type="ALfloat[6]" default="0.0,0.0,-1.0,0.0,1.0,0.0"/>
            <comment>
                Effectively two three dimensional vectors. The first vector is the front (or
                "at") and the second is the top (or "up"). Both vectors are relative to the
                listener position.

                To change from or to a left handed coordinate system, negate the Z
                component of both vectors.
            </comment>
        </enum>
        <enum value="0x1010" name="AL_SOURCE_STATE" group="SourcePName,SourceInteger" comment="Source state (query only).">
            <property on="source" type="ALenum" group="SourceState"/>
        </enum>
        <enum value="0x1011" name="AL_INITIAL" group="SourceState"/>
        <enum value="0x1012" name="AL_PLAYING" group="SourceState"/>
        <enum value="0x1013" name="AL_PAUSED" group="SourceState"/>
        <enum value="0x1014" name="AL_STOPPED" group="SourceState"/>
        <enum value="0x1015" name="AL_BUFFERS_QUEUED" group="SourcePName,SourceInteger" comment="Source Buffer Queue size (query only).">
            <property on="source" type="ALint"/>
            <comment>
                The number of buffers queued using alSourceQueueBuffers, minus the buffers
                removed with alSourceUnqueueBuffers.
            </comment>
        </enum>
        <enum value="0x1016" name="AL_BUFFERS_PROCESSED" group="SourcePName,SourceInteger" comment="Source Buffer Queue processed count (query only).">
            <property on="source" type="ALint"/>
            <comment>
                The number of queued buffers that have been fully processed, and can be
                removed with alSourceUnqueueBuffers.

                Looping sources will never fully process buffers because they will be set to
                play again for when the source loops.
            </comment>
        </enum>
        <enum value="0x1020" name="AL_REFERENCE_DISTANCE" group="SourcePName,SourceFloat" comment="Source reference distance.">
            <property on="source" type="ALfloat" range="0.0.." default="1.0"/>
            <comment>
                The distance in units that no distance attenuation occurs.

                At 0.0, no distance attenuation occurs with non-linear attenuation models.
            </comment>
        </enum>
        <enum value="0x1021" name="AL_ROLLOFF_FACTOR" group="SourcePName,SourceFloat" comment="Source rolloff factor.">
            <property on="source" type="ALfloat" range="0.0.." default="1.0"/>
            <comment>
                Multiplier to exaggerate or diminish distance attenuation.

                At 0.0, no distance attenuation ever occurs.
            </comment>
        </enum>
        <enum value="0x1022" name="AL_CONE_OUTER_GAIN" group="ListenerPName,ListenerFloat" comment="Outer cone gain.">
            <property on="listener" type="ALfloat" range="0.0..=1.0" default="0.0"/>
            <comment>
                The gain attenuation applied when the listener is outside of the source's
                outer cone angle.
            </comment>
        </enum>
        <enum value="0x1023" name="AL_MAX_DISTANCE" group="SourcePName,SourceFloat" comment="Source maximum distance.">
            <property on="source" type="ALfloat" range="0.0.." default="FLT_MAX"/>
            <comment>
                The distance above which the source is not attenuated any further with a
                clamped distance model, or where attenuation reaches 0.0 gain for linear
                distance models with a default rolloff factor.
            </comment>
        </enum>
        <enum value="0x1024" name="AL_SEC_OFFSET" group="SourcePName,SourceInteger,SourceFloat" comment="Source buffer offset, in seconds.">
            <property on="source" type="ALint" range="0.."/>
        </enum>
        <enum value="0x1025" name="AL_SAMPLE_OFFSET" group="SourcePName,SourceInteger,SourceFloat" comment="Source buffer offset, in sample frames.">
            <property on="source" type="ALint" range="0.."/>
        </enum>
        <enum value="0x1026" name="AL_BYTE_OFFSET" group="SourcePName,SourceInteger,SourceFloat" comment="Source buffer offset, in bytes.">
            <property on="source" type="ALint" range="0.."/>
        </enum>
        <enum value="0x1027" name="AL_SOURCE_TYPE" group="SourcePName,SourceInteger" comment="Source type (query only).">
            <property on="source" type="ALenum" group="SourceType"/>
            <comment>
                A Source is Static if a Buffer has been attached using AL_BUFFER.
                
                A Source is Streaming if one or more Buffers have been attached using
                alSourceQueueBuffers.
                
                A Source is Undetermined when it has the NULL buffer attached using
                AL_BUFFER.
            </comment>
        </enum>
        <enum value="0x1028" name="AL_STATIC" group="SourceType"/>
        <enum value="0x1029" name="AL_STREAMING" group="SourceType"/>
        <enum value="0x1030" name="AL_UNDETERMINED" group="SourceType"/>

        <enum value="0x1100" name="AL_FORMAT_MONO8" group="Format" comment="Unsigned 8-bit mono buffer format."/>
        <enum value="0x1101" name="AL_FORMAT_MONO16" group="Format" comment="Signed 16-bit mono buffer format."/>
        <enum value="0x1102" name="AL_FORMAT_STEREO8" group="Format" comment="Unsigned 8-bit stereo buffer format."/>
        <enum value="0x1103" name="AL_FORMAT_STEREO16" group="Format" comment="Signed 16-bit stereo buffer format."/>

        <enum value="0x2001" name="AL_FREQUENCY" group="BufferPName,BufferInteger" comment="Buffer frequency/sample rate (query only).">
            <property on="buffer" type="ALint"/>
        </enum>
        <enum value="0x2002" name="AL_BITS" group="BufferPName,BufferInteger" comment="Buffer bits per sample (query only).">
            <property on="buffer" type="ALint"/>
        </enum>
        <enum value="0x2003" name="AL_CHANNELS" group="BufferPName,BufferInteger" comment="Buffer channel count (query only).">
            <property on="buffer" type="ALint"/>
        </enum>
        <enum value="0x2004" name="AL_SIZE" group="BufferPName,BufferInteger" comment="Buffer data size in bytes (query only).">
            <property on="buffer" type="ALint"/>
        </enum>

        <enum value="0x2010" name="AL_UNUSED" group="BufferState"/>
        <enum value="0x2011" name="AL_PENDING" group="BufferState"/>
        <enum value="0x2012" name="AL_PROCESSED" group="BufferState"/>

        <enum value="0" name="AL_NO_ERROR" group="ErrorCode" comment="No error."/>
        <enum value="0xA001" name="AL_INVALID_NAME" group="ErrorCode" comment="Invalid name (ID) passed to an AL call."/>
        <enum value="0xA002" name="AL_INVALID_ENUM" group="ErrorCode" comment="Invalid enumeration passed to AL call."/>
        <enum value="0xA003" name="AL_INVALID_VALUE" group="ErrorCode" comment="Invalid value passed to AL call."/>
        <enum value="0xA004" name="AL_INVALID_OPERATION" group="ErrorCode" comment="Illegal AL call."/>
        <enum value="0xA005" name="AL_OUT_OF_MEMORY" group="ErrorCode" comment="Not enough memory to execute the AL call."/>

        <enum value="0xB001" name="AL_VENDOR" group="GetPName,StringPName" comment="Context string: Vendor name.">
            <property on="context"/>
        </enum>
        <enum value="0xB002" name="AL_VERSION" group="GetPName,StringPName" comment="Context string: Version.">
            <property on="context"/>
        </enum>
        <enum value="0xB003" name="AL_RENDERER" group="GetPName,StringPName" comment="Context string: Renderer name.">
            <property on="context"/>
        </enum>
        <enum value="0xB004" name="AL_EXTENSIONS" group="GetPName,StringPName" comment="Context string: Space-separated extension list.">
            <property on="context"/>
        </enum>

        <enum value="0xC000" name="AL_DOPPLER_FACTOR" group="GetPName,FloatPName" comment="Doppler scale.">
            <property on="context" type="ALfloat" range="0.0.." default="1.0"/>
            <comment>Scale for source and listener velocities.</comment>
        </enum>
        <enum value="0xC001" name="AL_DOPPLER_VELOCITY" group="GetPName,FloatPName" comment="Doppler velocity (deprecated).">
            <property on="context" type="ALfloat"/>
            <comment>A multiplier applied to the Speed of Sound.</comment>
        </enum>
        <enum value="0xC003" name="AL_SPEED_OF_SOUND" group="GetPName,FloatPName" comment="Speed of Sound, in units per second.">
            <property on="context" type="ALfloat" range="0.0001.." default="343.3"/>
            <comment>
                The speed at which sound waves are assumed to travel, when calculating the
                doppler effect from source and listener velocities.
            </comment>
        </enum>
        <enum value="0xD000" name="AL_DISTANCE_MODEL" group="GetPName,IntegerPName" comment="Distance attenuation model.">
            <property on="context" type="ALenum" group="DistanceModel" default="AL_INVERSE_DISTANCE_CLAMPED"/>
            <comment>
                The model by which sources attenuate with distance.
    
                None     - No distance attenuation.
                Inverse  - Doubling the distance halves the source gain.
                Linear   - Linear gain scaling between the reference and max distances.
                Exponent - Exponential gain dropoff.
                
                Clamped variations work like the non-clamped counterparts, except the
                distance calculated is clamped between the reference and max distances.
            </comment>
        </enum>

        <enum value="0xD001" name="AL_INVERSE_DISTANCE" group="DistanceModel"/>
        <enum value="0xD002" name="AL_INVERSE_DISTANCE_CLAMPED" group="DistanceModel"/>
        <enum value="0xD003" name="AL_LINEAR_DISTANCE" group="DistanceModel"/>
        <enum value="0xD004" name="AL_LINEAR_DISTANCE_CLAMPED" group="DistanceModel"/>
        <enum value="0xD005" name="AL_EXPONENT_DISTANCE" group="DistanceModel"/>
        <enum value="0xD006" name="AL_EXPONENT_DISTANCE_CLAMPED" group="DistanceModel"/>
        <enum value="0x10000" name="AL_FORMAT_IMA_ADPCM_MONO16_EXT" group="Format"/>
        <enum value="0x10001" name="AL_FORMAT_IMA_ADPCM_STEREO16_EXT" group="Format"/>
        <enum value="0x10002" name="AL_FORMAT_WAVE_EXT" group="Format"/>
        <enum value="0x10003" name="AL_FORMAT_VORBIS_EXT" group="Format"/>
        <enum value="0x10004" name="AL_FORMAT_QUAD8_LOKI" group="Format"/>
        <enum value="0x10005" name="AL_FORMAT_QUAD16_LOKI" group="Format"/>
        <enum value="0x10010" name="AL_FORMAT_MONO_FLOAT32" group="Format"/>
        <enum value="0x10011" name="AL_FORMAT_STEREO_FLOAT32" group="Format"/>
        <enum value="0x10012" name="AL_FORMAT_MONO_DOUBLE_EXT" group="Format"/>
        <enum value="0x10013" name="AL_FORMAT_STEREO_DOUBLE_EXT" group="Format"/>
        <enum value="0x10014" name="AL_FORMAT_MONO_MULAW_EXT" group="Format"/>
        <enum value="0x10015" name="AL_FORMAT_STEREO_MULAW_EXT" group="Format"/>
        <enum value="0x10016" name="AL_FORMAT_MONO_ALAW_EXT" group="Format"/>
        <enum value="0x10017" name="AL_FORMAT_STEREO_ALAW_EXT" group="Format"/>
        <enum value="0x1204" name="AL_FORMAT_QUAD8" group="Format"/>
        <enum value="0x1205" name="AL_FORMAT_QUAD16" group="Format"/>
        <enum value="0x1206" name="AL_FORMAT_QUAD32" group="Format"/>
        <enum value="0x1207" name="AL_FORMAT_REAR8" group="Format"/>
        <enum value="0x1208" name="AL_FORMAT_REAR16" group="Format"/>
        <enum value="0x1209" name="AL_FORMAT_REAR32" group="Format"/>
        <enum value="0x120A" name="AL_FORMAT_51CHN8" group="Format"/>
        <enum value="0x120B" name="AL_FORMAT_51CHN16" group="Format"/>
        <enum value="0x120C" name="AL_FORMAT_51CHN32" group="Format"/>
        <enum value="0x120D" name="AL_FORMAT_61CHN8" group="Format"/>
        <enum value="0x120E" name="AL_FORMAT_61CHN16" group="Format"/>
        <enum value="0x120F" name="AL_FORMAT_61CHN32" group="Format"/>
        <enum value="0x1210" name="AL_FORMAT_71CHN8" group="Format"/>
        <enum value="0x1211" name="AL_FORMAT_71CHN16" group="Format"/>
        <enum value="0x1212" name="AL_FORMAT_71CHN32" group="Format"/>
        <enum value="0x10014" name="AL_FORMAT_MONO_MULAW" group="Format"/>
        <enum value="0x10015" name="AL_FORMAT_STEREO_MULAW" group="Format"/>
        <enum value="0x10021" name="AL_FORMAT_QUAD_MULAW" group="Format"/>
        <enum value="0x10022" name="AL_FORMAT_REAR_MULAW" group="Format"/>
        <enum value="0x10023" name="AL_FORMAT_51CHN_MULAW" group="Format"/>
        <enum value="0x10024" name="AL_FORMAT_61CHN_MULAW" group="Format"/>
        <enum value="0x10025" name="AL_FORMAT_71CHN_MULAW" group="Format"/>
        <enum value="0x1300" name="AL_FORMAT_MONO_IMA4" group="Format"/>
        <enum value="0x1301" name="AL_FORMAT_STEREO_IMA4" group="Format"/>
        <enum value="0x20004" name="AL_METERS_PER_UNIT" group="ListenerFloat,ListenerPName">
            <property on="listener" type="ALfloat" range="0.." default="1.0"/>
        </enum>
        <enum value="0x20005" name="AL_DIRECT_FILTER" group="SourceInteger,SourcePName">
            <property on="source" type="ALuint" class="filter" default="AL_FILTER_NULL"/>
        </enum>
        <enum value="0x20006" name="AL_AUXILIARY_SEND_FILTER" group="SourceInteger,SourcePName">
            <property on="source" type="ALuint" class="filter" default="AL_FILTER_NULL"/>
        </enum>
        <enum value="0x20007" name="AL_AIR_ABSORPTION_FACTOR" group="SourceInteger,SourcePName">
            <property on="source" type="ALuint" range="0..=10" default="0"/>
        </enum>
        <enum value="0x20008" name="AL_ROOM_ROLLOFF_FACTOR" group="SourceInteger,SourcePName">
            <property on="source" type="ALuint" range="0..=10" default="0"/>
        </enum>
        <enum value="0x20009" name="AL_CONE_OUTER_GAINHF" group="SourceFloat,SourcePName">
            <property on="source" type="ALfloat" range="0.0..=1.0" default="1.0"/>
        </enum>
        <enum value="0x2000A" name="AL_DIRECT_FILTER_GAINHF_AUTO" group="SourceBoolean,SourcePName">
            <property on="source" type="ALboolean" group="Boolean" default="AL_TRUE"/>
        </enum>
        <enum value="0x2000B" name="AL_AUXILIARY_SEND_FILTER_GAIN_AUTO" group="SourceBoolean,SourcePName">
            <property on="source" type="ALboolean" group="Boolean" default="AL_TRUE"/>
        </enum>
        <enum value="0x2000C" name="AL_AUXILIARY_SEND_FILTER_GAINHF_AUTO" group="SourceBoolean,SourcePName">
            <property on="source" type="ALboolean" group="Boolean" default="AL_TRUE"/>
        </enum>
        <enum value="0x0001" name="AL_REVERB_DENSITY" group="EffectReverb,EffectFloat,EffectPName">
            <property on="effect" type="ALfloat" range="0.0..=1.0" default="1.0"/>
        </enum>
        <enum value="0x0002" name="AL_REVERB_DIFFUSION" group="EffectReverb,EffectFloat,EffectPName">
            <property on="effect" type="ALfloat" range="0.0..=1.0" default="1.0"/>
        </enum>
        <enum value="0x0003" name="AL_REVERB_GAIN" group="EffectReverb,EffectFloat,EffectPName">
            <property on="effect" type="ALfloat" range="0.0..=1.0" default="0.32"/>
        </enum>
        <enum value="0x0004" name="AL_REVERB_GAINHF" group="EffectReverb,EffectFloat,EffectPName">
            <property on="effect" type="ALfloat" range="0.0..=1.0" default="0.89"/>
        </enum>
        <enum value="0x0005" name="AL_REVERB_DECAY_TIME" group="EffectReverb,EffectFloat,EffectPName">
            <property on="effect" type="ALfloat" range="0.1..=20" default="1.49"/>
        </enum>
        <enum value="0x0006" name="AL_REVERB_DECAY_HFRATIO" group="EffectReverb,EffectFloat,EffectPName">
            <property on="effect" type="ALfloat" range="0.1..=2.0" default="0.83"/>
        </enum>
        <enum value="0x0007" name="AL_REVERB_REFLECTIONS_GAIN" group="EffectReverb,EffectFloat,EffectPName">
            <property on="effect" type="ALfloat" range="0.0..=3.16" default="0.05"/>
        </enum>
        <enum value="0x0008" name="AL_REVERB_REFLECTIONS_DELAY" group="EffectReverb,EffectFloat,EffectPName">
            <property on="effect" type="ALfloat" range="0.0..=0.3" default="0.007"/>
        </enum>
        <enum value="0x0009" name="AL_REVERB_LATE_REVERB_GAIN" group="EffectReverb,EffectFloat,EffectPName">
            <property on="effect" type="ALfloat" range="0.0..=10.0" default="1.26"/>
        </enum>
        <enum value="0x000A" name="AL_REVERB_LATE_REVERB_DELAY" group="EffectReverb,EffectFloat,EffectPName">
            <property on="effect" type="ALfloat" range="0.0..=0.1" default="0.011"/>
        </enum>
        <enum value="0x000B" name="AL_REVERB_AIR_ABSORPTION_GAINHF" group="EffectReverb,EffectFloat,EffectPName">
            <property on="effect" type="ALfloat" range="0.892..=1.0" default="0.994"/>
        </enum>
        <enum value="0x000C" name="AL_REVERB_ROOM_ROLLOFF_FACTOR" group="EffectReverb,EffectFloat,EffectPName">
            <property on="effect" type="ALfloat" range="0.0..=10.0" default="0.0"/>
        </enum>
        <enum value="0x000D" name="AL_REVERB_DECAY_HFLIMIT" group="EffectReverb,EffectFloat,EffectPName">
            <property on="effect" type="ALboolean" group="Boolean" default="AL_TRUE"/>
        </enum>
        <enum value="0x0001" name="AL_EAXREVERB_DENSITY" group="EffectEAXReverb,EffectFloat,EffectPName">
            <property on="effect" type="ALfloat" range="0.0..=1.0" default="1.0"/>
        </enum>
        <enum value="0x0002" name="AL_EAXREVERB_DIFFUSION" group="EffectEAXReverb,EffectFloat,EffectPName">
            <property on="effect" type="ALfloat" range="0.0..=1.0" default="1.0"/>
        </enum>
        <enum value="0x0003" name="AL_EAXREVERB_GAIN" group="EffectEAXReverb,EffectFloat,EffectPName">
            <property on="effect" type="ALfloat" range="0.0..=1.0" default="0.32"/>
        </enum>
        <enum value="0x0004" name="AL_EAXREVERB_GAINHF" group="EffectEAXReverb,EffectFloat,EffectPName">
            <property on="effect" type="ALfloat" range="0.0..=1.0" default="0.89"/>
        </enum>
        <enum value="0x0005" name="AL_EAXREVERB_GAINLF" group="EffectEAXReverb,EffectFloat,EffectPName">
            <property on="effect" type="ALfloat" range="0.0..=1.0" default="0.0"/>
        </enum>
        <enum value="0x0006" name="AL_EAXREVERB_DECAY_TIME" group="EffectEAXReverb,EffectFloat,EffectPName">
            <property on="effect" type="ALfloat" range="0.1..=20" default="1.49"/>
        </enum>
        <enum value="0x0007" name="AL_EAXREVERB_DECAY_HFRATIO" group="EffectEAXReverb,EffectFloat,EffectPName">
            <property on="effect" type="ALfloat" range="0.1..=2.0" default="0.83"/>
        </enum>
        <enum value="0x0008" name="AL_EAXREVERB_DECAY_LFRATIO" group="EffectEAXReverb,EffectFloat,EffectPName">
            <property on="effect" type="ALfloat" range="0.1..=2.0" default="1.0"/>
        </enum>
        <enum value="0x0009" name="AL_EAXREVERB_REFLECTIONS_GAIN" group="EffectEAXReverb,EffectFloat,EffectPName">
            <property on="effect" type="ALfloat" range="0.0..=3.16" default="0.05"/>
        </enum>
        <enum value="0x000A" name="AL_EAXREVERB_REFLECTIONS_DELAY" group="EffectEAXReverb,EffectFloat,EffectPName">
            <property on="effect" type="ALfloat" range="0.0..=0.3" default="0.007"/>
        </enum>
        <enum value="0x000B" name="AL_EAXREVERB_REFLECTIONS_PAN" group="EffectEAXReverb,EffectFloat,EffectPName">
            <!-- TODO encode range of values for array? -->
            <property on="effect" type="ALfloat[3]" default="0.0,0.0,0.0"/>
        </enum>
        <enum value="0x000C" name="AL_EAXREVERB_LATE_REVERB_GAIN" group="EffectEAXReverb,EffectFloat,EffectPName">
            <property on="effect" type="ALfloat" range="0.0..=10.0" default="1.26"/>
        </enum>
        <enum value="0x000D" name="AL_EAXREVERB_LATE_REVERB_DELAY" group="EffectEAXReverb,EffectFloat,EffectPName">
            <property on="effect" type="ALfloat" range="0.0..=0.1" default="0.011"/>
        </enum>
        <enum value="0x000E" name="AL_EAXREVERB_LATE_REVERB_PAN" group="EffectEAXReverb,EffectFloat,EffectPName">
            <!-- TODO encode range of values for array? -->
            <property on="effect" type="ALfloat[3]" default="0.0,0.0,0.0"/>
        </enum>
        <enum value="0x000F" name="AL_EAXREVERB_ECHO_TIME" group="EffectEAXReverb,EffectFloat,EffectPName">
            <property on="effect" type="ALfloat" range="0.075..=0.25" default="0.25"/>
        </enum>
        <enum value="0x0010" name="AL_EAXREVERB_ECHO_DEPTH" group="EffectEAXReverb,EffectFloat,EffectPName">
            <property on="effect" type="ALfloat" range="0.0..=1.0" default="0.0"/>
        </enum>
        <enum value="0x0011" name="AL_EAXREVERB_MODULATION_TIME" group="EffectEAXReverb,EffectFloat,EffectPName">
            <property on="effect" type="ALfloat" range="0.04..=4.0" default="0.25"/>
        </enum>
        <enum value="0x0012" name="AL_EAXREVERB_MODULATION_DEPTH" group="EffectEAXReverb,EffectFloat,EffectPName">
            <property on="effect" type="ALfloat" range="0.0..=1.0" default="0.0"/>
        </enum>
        <enum value="0x0013" name="AL_EAXREVERB_AIR_ABSORPTION_GAINHF" group="EffectEAXReverb,EffectFloat,EffectPName">
            <property on="effect" type="ALfloat" range="0.892..=1.0" default="0.994"/>
        </enum>
        <enum value="0x0014" name="AL_EAXREVERB_HFREFERENCE" group="EffectEAXReverb,EffectFloat,EffectPName">
            <property on="effect" type="ALfloat" range="1000.0..=20000.0" default="5000.0"/>
        </enum>
        <enum value="0x0015" name="AL_EAXREVERB_LFREFERENCE" group="EffectEAXReverb,EffectFloat,EffectPName">
            <property on="effect" type="ALfloat" range="20.0..=1000.0" default="250.0"/>
        </enum>
        <enum value="0x0016" name="AL_EAXREVERB_ROOM_ROLLOFF_FACTOR" group="EffectEAXReverb,EffectFloat,EffectPName">
            <property on="effect" type="ALfloat" range="0.0..=10.0" default="0.0"/>
        </enum>
        <enum value="0x0017" name="AL_EAXREVERB_DECAY_HFLIMIT" group="EffectEAXReverb,EffectInteger,EffectPName">
            <property on="effect" type="ALboolean" group="Boolean" default="AL_TRUE"/>
        </enum>
        <enum value="0x0001" name="AL_CHORUS_WAVEFORM" group="EffectChorus,EffectInteger,EffectPName">
            <property on="effect" type="ALenum" group="ChorusWaveform" default="AL_CHORUS_WAVEFORM_TRIANGLE"/>
        </enum>
        <enum value="0x0002" name="AL_CHORUS_PHASE" group="EffectChorus,EffectInteger,EffectPName">
            <property on="effect" type="ALint" range="-180..=180" default="90"/>
        </enum>
        <enum value="0x0003" name="AL_CHORUS_RATE" group="EffectChorus,EffectFloat,EffectPName">
            <property on="effect" type="ALfloat" range="0.0..=10.0" default="1.1"/>
        </enum>
        <enum value="0x0004" name="AL_CHORUS_DEPTH" group="EffectChorus,EffectFloat,EffectPName">
            <property on="effect" type="ALfloat" range="0.0..=1.0" default="0.1"/>
        </enum>
        <enum value="0x0005" name="AL_CHORUS_FEEDBACK" group="EffectChorus,EffectFloat,EffectPName">
            <property on="effect" type="ALfloat" range="-1.0..=1.0" default="0.25"/>
        </enum>
        <enum value="0x0006" name="AL_CHORUS_DELAY" group="EffectChorus,EffectFloat,EffectPName">
            <property on="effect" type="ALfloat" range="0.0..=0.016" default="0.016"/>
        </enum>
        <enum value="0x0001" name="AL_DISTORTION_EDGE" group="EffectDistortion,EffectFloat,EffectPName">
            <property on="effect" type="ALfloat" range="0.0..=1.0" default="0.2"/>
        </enum>
        <enum value="0x0002" name="AL_DISTORTION_GAIN" group="EffectDistortion,EffectFloat,EffectPName">
            <property on="effect" type="ALfloat" range="0.01..=1.0" default="0.05"/>
        </enum>
        <enum value="0x0003" name="AL_DISTORTION_LOWPASS_CUTOFF" group="EffectDistortion,EffectFloat,EffectPName">
            <property on="effect" type="ALfloat" range="80.0..=24000" default="8000"/>
        </enum>
        <enum value="0x0004" name="AL_DISTORTION_EQCENTER" group="EffectDistortion,EffectFloat,EffectPName">
            <property on="effect" type="ALfloat" range="80.0..=24000" default="3600"/>
        </enum>
        <enum value="0x0005" name="AL_DISTORTION_EQBANDWIDTH" group="EffectDistortion,EffectFloat,EffectPName">
            <property on="effect" type="ALfloat" range="80.0..=24000" default="3600"/>
        </enum>
        <enum value="0x0001" name="AL_ECHO_DELAY" group="EffectEcho,EffectFloat,EffectPName">
            <property on="effect" type="ALfloat" range="0.0..=0.207" default="0.1"/>
        </enum>
        <enum value="0x0002" name="AL_ECHO_LRDELAY" group="EffectEcho,EffectFloat,EffectPName">
            <property on="effect" type="ALfloat" range="0.0..=0.404" default="0.1"/>
        </enum>
        <enum value="0x0003" name="AL_ECHO_DAMPING" group="EffectEcho,EffectFloat,EffectPName">
            <property on="effect" type="ALfloat" range="0.0..=0.99" default="0.5"/>
        </enum>
        <enum value="0x0004" name="AL_ECHO_FEEDBACK" group="EffectEcho,EffectFloat,EffectPName">
            <property on="effect" type="ALfloat" range="0.0..=1.0" default="0.5"/>
        </enum>
        <enum value="0x0005" name="AL_ECHO_SPREAD" group="EffectEcho,EffectFloat,EffectPName">
            <property on="effect" type="ALfloat" range="-1.0..=1.0" default="-1.0"/>
        </enum>
        <enum value="0x0001" name="AL_FLANGER_WAVEFORM" group="EffectFlanger,EffectFloat,EffectPName">
            <property on="effect" type="ALenum" group="FlangerWaveform" default="AL_FLANGER_WAVEFORM_TRIANGLE"/>
        </enum>
        <enum value="0x0002" name="AL_FLANGER_PHASE" group="EffectFlanger,EffectFloat,EffectPName">
            <property on="effect" type="ALfloat" range="-180..=180" default="0"/>
        </enum>
        <enum value="0x0003" name="AL_FLANGER_RATE" group="EffectFlanger,EffectFloat,EffectPName">
            <property on="effect" type="ALfloat" range="0.0..=10.0" default="0.27"/>
        </enum>
        <enum value="0x0004" name="AL_FLANGER_DEPTH" group="EffectFlanger,EffectFloat,EffectPName">
            <property on="effect" type="ALfloat" range="0.0..=1.0" default="1.0"/>
        </enum>
        <enum value="0x0005" name="AL_FLANGER_FEEDBACK" group="EffectFlanger,EffectFloat,EffectPName">
            <property on="effect" type="ALfloat" range="-1.0..=1.0" default="-0.5"/>
        </enum>
        <enum value="0x0006" name="AL_FLANGER_DELAY" group="EffectFlanger,EffectFloat,EffectPName">
            <property on="effect" type="ALfloat" range="0.0..=0.004" default="0.002"/>
        </enum>
        <enum value="0x0001" name="AL_FREQUENCY_SHIFTER_FREQUENCY" group="EffectFrequencyShifter,EffectFloat,EffectPName">
            <property on="effect" type="ALfloat" range="0.0..=24000.0" default="0.0"/>
        </enum>
        <enum value="0x0002" name="AL_FREQUENCY_SHIFTER_LEFT_DIRECTION" group="EffectFrequencyShifter,EffectInteger,EffectPName">
            <property on="effect" type="ALenum" group="FrequencyShifterDirection" default="AL_FREQUENCY_SHIFTER_DIRECTION_DOWN"/>
        </enum>
        <enum value="0x0003" name="AL_FREQUENCY_SHIFTER_RIGHT_DIRECTION" group="EffectFrequencyShifter,EffectInteger,EffectPName">
            <property on="effect" type="ALenum" group="FrequencyShifterDirection" default="AL_FREQUENCY_SHIFTER_DIRECTION_DOWN"/>
        </enum>
        <enum value="0x0001" name="AL_VOCAL_MORPHER_PHONEMEA" group="EffectVocalMorpher,EffectInteger,EffectPName">
            <property on="effect" type="ALenum" group="VocalMorpherPhoneme" default="AL_VOCAL_MOPRHER_PHONEME_A"/>
        </enum>
        <enum value="0x0002" name="AL_VOCAL_MORPHER_PHONEMEA_COARSE_TUNING" group="EffectVocalMorpher,EffectInteger,EffectPName">
            <property on="effect" type="ALenum" group="VocalMorpherPhoneme" default="AL_VOCAL_MOPRHER_PHONEME_A"/>
        </enum>
        <enum value="0x0003" name="AL_VOCAL_MORPHER_PHONEMEB" group="EffectVocalMorpher,EffectInteger,EffectPName">
            <property on="effect" type="ALenum" group="VocalMorpherPhoneme" default="AL_VOCAL_MOPRHER_PHONEME_ER"/>
        </enum>
        <enum value="0x0004" name="AL_VOCAL_MORPHER_PHONEMEB_COARSE_TUNING" group="EffectVocalMorpher,EffectInteger,EffectPName">
            <property on="effect" type="ALenum" group="VocalMorpherPhoneme" default="AL_VOCAL_MOPRHER_PHONEME_A"/>
        </enum>
        <enum value="0x0005" name="AL_VOCAL_MORPHER_WAVEFORM" group="EffectVocalMorpher,EffectInteger,EffectPName">
            <property on="effect" type="ALenum" group="VocalMorpherWaveform" default="AL_VOCAL_MORPHER_WAVEFORM_SINUSOID"/>
        </enum>
        <enum value="0x0006" name="AL_VOCAL_MORPHER_RATE" group="EffectVocalMorpher,EffectFloat,EffectPName">
            <property on="effect" type="ALfloat" range="0.0..=10.0" default="1.41"/>
        </enum>
        <enum value="0x0001" name="AL_PITCH_SHIFTER_COARSE_TUNE" group="EffectPitchShifter,EffectFloat,EffectPName">
            <property on="effect" type="ALfloat" range="-12..=12" default="12"/>
        </enum>
        <enum value="0x0002" name="AL_PITCH_SHIFTER_FINE_TUNE" group="EffectPitchShifter,EffectFloat,EffectPName">
            <property on="effect" type="ALfloat" range="-150..=50" default="0"/>
        </enum>
        <enum value="0x0001" name="AL_RING_MODULATOR_FREQUENCY" group="EffectRingModulator,EffectFloat,EffectPName">
            <property on="effect" type="ALfloat" range="0.0..=8000.0" default="440.0"/>
        </enum>
        <enum value="0x0002" name="AL_RING_MODULATOR_HIGHPASS_CUTOFF" group="EffectRingModulator,EffectFloat,EffectPName">
            <property on="effect" type="ALfloat" range="0.0..=24000.0" default="800.0"/>
        </enum>
        <enum value="0x0003" name="AL_RING_MODULATOR_WAVEFORM" group="EffectRingModulator,EffectInteger,EffectPName">
            <property on="effect" type="ALenum" group="RingModulatorWaveform" default="AL_RING_MODULATOR_SINUSOID"/>
        </enum>
        <enum value="0x0001" name="AL_AUTOWAH_ATTACK_TIME" group="EffectAutowah,EffectFloat,EffectPName">
            <property on="effect" type="ALfloat" range="0.0001..=1.0" default="0.06"/>
        </enum>
        <enum value="0x0002" name="AL_AUTOWAH_RELEASE_TIME" group="EffectAutowah,EffectFloat,EffectPName">
            <property on="effect" type="ALfloat" range="0.0001..=1.0" default="0.06"/>
        </enum>
        <enum value="0x0003" name="AL_AUTOWAH_RESONANCE" group="EffectAutowah,EffectFloat,EffectPName">
            <property on="effect" type="ALfloat" range="2.0..=1000.0" default="1000.0"/>
        </enum>
        <enum value="0x0004" name="AL_AUTOWAH_PEAK_GAIN" group="EffectAutowah,EffectFloat,EffectPName">
            <property on="effect" type="ALfloat" range="0.00003..=31621.0" default="11.22"/>
        </enum>
        <enum value="0x0001" name="AL_COMPRESSOR_ONOFF" group="EffectCompressor,EffectInteger,EffectPName">
            <property on="effect" type="ALboolean" group="Boolean" default="AL_TRUE"/>
        </enum>
        <enum value="0x0001" name="AL_EQUALIZER_LOW_GAIN" group="EffectEqualizer,EffectFloat,EffectPName">
            <property on="effect" type="ALfloat" range="0.126..=7.943" default="1.0"/>
        </enum>
        <enum value="0x0002" name="AL_EQUALIZER_LOW_CUTOFF" group="EffectEqualizer,EffectFloat,EffectPName">
            <property on="effect" type="ALfloat" range="50.0..=800.0" default="200.0"/>
        </enum>
        <enum value="0x0003" name="AL_EQUALIZER_MID1_GAIN" group="EffectEqualizer,EffectFloat,EffectPName">
            <property on="effect" type="ALfloat" range="0.126..=7.943" default="1.0"/>
        </enum>
        <enum value="0x0004" name="AL_EQUALIZER_MID1_CENTER" group="EffectEqualizer,EffectFloat,EffectPName">
            <property on="effect" type="ALfloat" range="200.0..=3000.0" default="500.0"/>
        </enum>
        <enum value="0x0005" name="AL_EQUALIZER_MID1_WIDTH" group="EffectEqualizer,EffectFloat,EffectPName">
            <property on="effect" type="ALfloat" range="0.01..=1.0" default="1.0"/>
        </enum>
        <enum value="0x0006" name="AL_EQUALIZER_MID2_GAIN" group="EffectEqualizer,EffectFloat,EffectPName">
            <property on="effect" type="ALfloat" range="0.126..=7.943" default="1.0"/>
        </enum>
        <enum value="0x0007" name="AL_EQUALIZER_MID2_CENTER" group="EffectEqualizer,EffectFloat,EffectPName">
            <property on="effect" type="ALfloat" range="1000.0..=8000.0" default="3000.0"/>
        </enum>
        <enum value="0x0008" name="AL_EQUALIZER_MID2_WIDTH" group="EffectEqualizer,EffectFloat,EffectPName">
            <property on="effect" type="ALfloat" range="0.01..=1.0" default="1.0"/>
        </enum>
        <enum value="0x0009" name="AL_EQUALIZER_HIGH_GAIN" group="EffectEqualizer,EffectFloat,EffectPName">
            <property on="effect" type="ALfloat" range="0.126..=7.943" default="1.0"/>
        </enum>
        <enum value="0x000A" name="AL_EQUALIZER_HIGH_CUTOFF" group="EffectEqualizer,EffectFloat,EffectPName">
            <property on="effect" type="ALfloat" range="4000.0..=16000.0" default="6000.0"/>
        </enum>
        <enum value="0x0000" name="AL_EFFECT_FIRST_PARAMETER"/>
        <enum value="0x8000" name="AL_EFFECT_LAST_PARAMETER"/>
        <enum value="0x8001" name="AL_EFFECT_TYPE" group="EffectInteger,EffectPName">
            <property on="effect" type="ALenum" group="EffectType" default="AL_EFFECT_NULL"/>
        </enum>
        <enum value="0x0000" name="AL_EFFECT_NULL" group="EffectType"/>
        <enum value="0x0001" name="AL_EFFECT_REVERB" group="EffectType"/>
        <enum value="0x0002" name="AL_EFFECT_CHORUS" group="EffectType"/>
        <enum value="0x0003" name="AL_EFFECT_DISTORTION" group="EffectType"/>
        <enum value="0x0004" name="AL_EFFECT_ECHO" group="EffectType"/>
        <enum value="0x0005" name="AL_EFFECT_FLANGER" group="EffectType"/>
        <enum value="0x0006" name="AL_EFFECT_FREQUENCY_SHIFTER" group="EffectType"/>
        <enum value="0x0007" name="AL_EFFECT_VOCAL_MORPHER" group="EffectType"/>
        <enum value="0x0008" name="AL_EFFECT_PITCH_SHIFTER" group="EffectType"/>
        <enum value="0x0009" name="AL_EFFECT_RING_MODULATOR" group="EffectType"/>
        <enum value="0x000A" name="AL_EFFECT_AUTOWAH" group="EffectType"/>
        <enum value="0x000B" name="AL_EFFECT_COMPRESSOR" group="EffectType"/>
        <enum value="0x000C" name="AL_EFFECT_EQUALIZER" group="EffectType"/>
        <enum value="0x8000" name="AL_EFFECT_EAXREVERB" group="EffectType"/>
        <enum value="0x0001" name="AL_EFFECTSLOT_EFFECT" group="AuxiliaryEffectSlotInteger,AuxiliaryEffectSlotPName">
            <property on="auxiliary effect slot" type="ALuint" class="effect" default="AL_EFFECT_NULL"/>
        </enum>
        <enum value="0x0002" name="AL_EFFECTSLOT_GAIN" group="AuxiliaryEffectSlotFloat,AuxiliaryEffectSlotPName">
            <property on="auxiliary effect slot" type="ALfloat" range="0.0..=1.0" default="1.0"/>
        </enum>
        <enum value="0x0003" name="AL_EFFECTSLOT_AUXILIARY_SEND_AUTO" group="AuxiliaryEffectSlotInteger,AuxiliaryEffectSlotPName">
            <property on="auxiliary effect slot" type="ALboolean" group="Boolean" default="AL_TRUE"/>
        </enum>
        <enum value="0x0000" name="AL_EFFECTSLOT_NULL"/>
        <enum value="0x0001" name="AL_LOWPASS_GAIN" group="FilterLowPass,FilterFloat,FilterPName">
            <property on="filter" type="ALfloat" range="0.0..=1.0" default="1.0"/>
        </enum>
        <enum value="0x0002" name="AL_LOWPASS_GAINHF" group="FilterLowPass,FilterFloat,FilterPName">
            <property on="filter" type="ALfloat" range="0.0..=1.0" default="1.0"/>
        </enum>
        <enum value="0x0001" name="AL_HIGHPASS_GAIN" group="FilterHighPass,FilterFloat,FilterPName">
            <property on="filter" type="ALfloat" range="0.0..=1.0" default="1.0"/>
        </enum>
        <enum value="0x0002" name="AL_HIGHPASS_GAINLF" group="FilterHighPass,FilterFloat,FilterPName">
            <property on="filter" type="ALfloat" range="0.0..=1.0" default="1.0"/>
        </enum>
        <enum value="0x0001" name="AL_BANDPASS_GAIN" group="EffectBandPass,FilterFloat,FilterPName">
            <property on="filter" type="ALfloat" range="0.0..=1.0" default="1.0"/>
        </enum>
        <enum value="0x0002" name="AL_BANDPASS_GAINLF" group="EffectBandPass,FilterFloat,FilterPName">
            <property on="filter" type="ALfloat" range="0.0..=1.0" default="1.0"/>
        </enum>
        <enum value="0x0003" name="AL_BANDPASS_GAINHF" group="EffectBandPass,FilterFloat,FilterPName">
            <property on="filter" type="ALfloat" range="0.0..=1.0" default="1.0"/>
        </enum>
        <enum value="0x0000" name="AL_FILTER_FIRST_PARAMETER"/>
        <enum value="0x8000" name="AL_FILTER_LAST_PARAMETER"/>
        <enum value="0x8001" name="AL_FILTER_TYPE" group="FilterInteger,FilterPName">
            <property on="filter" type="ALenum" group="FilterType" default="AL_FILTER_NULL"/>
        </enum>
        <enum value="0x0000" name="AL_FILTER_NULL" group="FilterType"/>
        <enum value="0x0001" name="AL_FILTER_LOWPASS" group="FilterType"/>
        <enum value="0x0002" name="AL_FILTER_HIGHPASS" group="FilterType"/>
        <enum value="0x0003" name="AL_FILTER_BANDPASS" group="FilterType"/>
        <enum value="(0.0f)" name="AL_LOWPASS_MIN_GAIN"/>
        <enum value="(1.0f)" name="AL_LOWPASS_MAX_GAIN"/>
        <enum value="(1.0f)" name="AL_LOWPASS_DEFAULT_GAIN"/>
        <enum value="(0.0f)" name="AL_LOWPASS_MIN_GAINHF"/>
        <enum value="(1.0f)" name="AL_LOWPASS_MAX_GAINHF"/>
        <enum value="(1.0f)" name="AL_LOWPASS_DEFAULT_GAINHF"/>
        <enum value="(0.0f)" name="AL_HIGHPASS_MIN_GAIN"/>
        <enum value="(1.0f)" name="AL_HIGHPASS_MAX_GAIN"/>
        <enum value="(1.0f)" name="AL_HIGHPASS_DEFAULT_GAIN"/>
        <enum value="(0.0f)" name="AL_HIGHPASS_MIN_GAINLF"/>
        <enum value="(1.0f)" name="AL_HIGHPASS_MAX_GAINLF"/>
        <enum value="(1.0f)" name="AL_HIGHPASS_DEFAULT_GAINLF"/>
        <enum value="(0.0f)" name="AL_BANDPASS_MIN_GAIN"/>
        <enum value="(1.0f)" name="AL_BANDPASS_MAX_GAIN"/>
        <enum value="(1.0f)" name="AL_BANDPASS_DEFAULT_GAIN"/>
        <enum value="(0.0f)" name="AL_BANDPASS_MIN_GAINHF"/>
        <enum value="(1.0f)" name="AL_BANDPASS_MAX_GAINHF"/>
        <enum value="(1.0f)" name="AL_BANDPASS_DEFAULT_GAINHF"/>
        <enum value="(0.0f)" name="AL_BANDPASS_MIN_GAINLF"/>
        <enum value="(1.0f)" name="AL_BANDPASS_MAX_GAINLF"/>
        <enum value="(1.0f)" name="AL_BANDPASS_DEFAULT_GAINLF"/>
        <enum value="(0.0f)" name="AL_REVERB_MIN_DENSITY"/>
        <enum value="(1.0f)" name="AL_REVERB_MAX_DENSITY"/>
        <enum value="(1.0f)" name="AL_REVERB_DEFAULT_DENSITY"/>
        <enum value="(0.0f)" name="AL_REVERB_MIN_DIFFUSION"/>
        <enum value="(1.0f)" name="AL_REVERB_MAX_DIFFUSION"/>
        <enum value="(1.0f)" name="AL_REVERB_DEFAULT_DIFFUSION"/>
        <enum value="(0.0f)" name="AL_REVERB_MIN_GAIN"/>
        <enum value="(1.0f)" name="AL_REVERB_MAX_GAIN"/>
        <enum value="(0.32f)" name="AL_REVERB_DEFAULT_GAIN"/>
        <enum value="(0.0f)" name="AL_REVERB_MIN_GAINHF"/>
        <enum value="(1.0f)" name="AL_REVERB_MAX_GAINHF"/>
        <enum value="(0.89f)" name="AL_REVERB_DEFAULT_GAINHF"/>
        <enum value="(0.1f)" name="AL_REVERB_MIN_DECAY_TIME"/>
        <enum value="(20.0f)" name="AL_REVERB_MAX_DECAY_TIME"/>
        <enum value="(1.49f)" name="AL_REVERB_DEFAULT_DECAY_TIME"/>
        <enum value="(0.1f)" name="AL_REVERB_MIN_DECAY_HFRATIO"/>
        <enum value="(2.0f)" name="AL_REVERB_MAX_DECAY_HFRATIO"/>
        <enum value="(0.83f)" name="AL_REVERB_DEFAULT_DECAY_HFRATIO"/>
        <enum value="(0.0f)" name="AL_REVERB_MIN_REFLECTIONS_GAIN"/>
        <enum value="(3.16f)" name="AL_REVERB_MAX_REFLECTIONS_GAIN"/>
        <enum value="(0.05f)" name="AL_REVERB_DEFAULT_REFLECTIONS_GAIN"/>
        <enum value="(0.0f)" name="AL_REVERB_MIN_REFLECTIONS_DELAY"/>
        <enum value="(0.3f)" name="AL_REVERB_MAX_REFLECTIONS_DELAY"/>
        <enum value="(0.007f)" name="AL_REVERB_DEFAULT_REFLECTIONS_DELAY"/>
        <enum value="(0.0f)" name="AL_REVERB_MIN_LATE_REVERB_GAIN"/>
        <enum value="(10.0f)" name="AL_REVERB_MAX_LATE_REVERB_GAIN"/>
        <enum value="(1.26f)" name="AL_REVERB_DEFAULT_LATE_REVERB_GAIN"/>
        <enum value="(0.0f)" name="AL_REVERB_MIN_LATE_REVERB_DELAY"/>
        <enum value="(0.1f)" name="AL_REVERB_MAX_LATE_REVERB_DELAY"/>
        <enum value="(0.011f)" name="AL_REVERB_DEFAULT_LATE_REVERB_DELAY"/>
        <enum value="(0.892f)" name="AL_REVERB_MIN_AIR_ABSORPTION_GAINHF"/>
        <enum value="(1.0f)" name="AL_REVERB_MAX_AIR_ABSORPTION_GAINHF"/>
        <enum value="(0.994f)" name="AL_REVERB_DEFAULT_AIR_ABSORPTION_GAINHF"/>
        <enum value="(0.0f)" name="AL_REVERB_MIN_ROOM_ROLLOFF_FACTOR"/>
        <enum value="(10.0f)" name="AL_REVERB_MAX_ROOM_ROLLOFF_FACTOR"/>
        <enum value="(0.0f)" name="AL_REVERB_DEFAULT_ROOM_ROLLOFF_FACTOR"/>
        <enum value="AL_FALSE" name="AL_REVERB_MIN_DECAY_HFLIMIT"/>
        <enum value="AL_TRUE" name="AL_REVERB_MAX_DECAY_HFLIMIT"/>
        <enum value="AL_TRUE" name="AL_REVERB_DEFAULT_DECAY_HFLIMIT"/>
        <enum value="(0.0f)" name="AL_EAXREVERB_MIN_DENSITY"/>
        <enum value="(1.0f)" name="AL_EAXREVERB_MAX_DENSITY"/>
        <enum value="(1.0f)" name="AL_EAXREVERB_DEFAULT_DENSITY"/>
        <enum value="(0.0f)" name="AL_EAXREVERB_MIN_DIFFUSION"/>
        <enum value="(1.0f)" name="AL_EAXREVERB_MAX_DIFFUSION"/>
        <enum value="(1.0f)" name="AL_EAXREVERB_DEFAULT_DIFFUSION"/>
        <enum value="(0.0f)" name="AL_EAXREVERB_MIN_GAIN"/>
        <enum value="(1.0f)" name="AL_EAXREVERB_MAX_GAIN"/>
        <enum value="(0.32f)" name="AL_EAXREVERB_DEFAULT_GAIN"/>
        <enum value="(0.0f)" name="AL_EAXREVERB_MIN_GAINHF"/>
        <enum value="(1.0f)" name="AL_EAXREVERB_MAX_GAINHF"/>
        <enum value="(0.89f)" name="AL_EAXREVERB_DEFAULT_GAINHF"/>
        <enum value="(0.0f)" name="AL_EAXREVERB_MIN_GAINLF"/>
        <enum value="(1.0f)" name="AL_EAXREVERB_MAX_GAINLF"/>
        <enum value="(1.0f)" name="AL_EAXREVERB_DEFAULT_GAINLF"/>
        <enum value="(0.1f)" name="AL_EAXREVERB_MIN_DECAY_TIME"/>
        <enum value="(20.0f)" name="AL_EAXREVERB_MAX_DECAY_TIME"/>
        <enum value="(1.49f)" name="AL_EAXREVERB_DEFAULT_DECAY_TIME"/>
        <enum value="(0.1f)" name="AL_EAXREVERB_MIN_DECAY_HFRATIO"/>
        <enum value="(2.0f)" name="AL_EAXREVERB_MAX_DECAY_HFRATIO"/>
        <enum value="(0.83f)" name="AL_EAXREVERB_DEFAULT_DECAY_HFRATIO"/>
        <enum value="(0.1f)" name="AL_EAXREVERB_MIN_DECAY_LFRATIO"/>
        <enum value="(2.0f)" name="AL_EAXREVERB_MAX_DECAY_LFRATIO"/>
        <enum value="(1.0f)" name="AL_EAXREVERB_DEFAULT_DECAY_LFRATIO"/>
        <enum value="(0.0f)" name="AL_EAXREVERB_MIN_REFLECTIONS_GAIN"/>
        <enum value="(3.16f)" name="AL_EAXREVERB_MAX_REFLECTIONS_GAIN"/>
        <enum value="(0.05f)" name="AL_EAXREVERB_DEFAULT_REFLECTIONS_GAIN"/>
        <enum value="(0.0f)" name="AL_EAXREVERB_MIN_REFLECTIONS_DELAY"/>
        <enum value="(0.3f)" name="AL_EAXREVERB_MAX_REFLECTIONS_DELAY"/>
        <enum value="(0.007f)" name="AL_EAXREVERB_DEFAULT_REFLECTIONS_DELAY"/>
        <enum value="(0.0f)" name="AL_EAXREVERB_DEFAULT_REFLECTIONS_PAN_XYZ"/>
        <enum value="(0.0f)" name="AL_EAXREVERB_MIN_LATE_REVERB_GAIN"/>
        <enum value="(10.0f)" name="AL_EAXREVERB_MAX_LATE_REVERB_GAIN"/>
        <enum value="(1.26f)" name="AL_EAXREVERB_DEFAULT_LATE_REVERB_GAIN"/>
        <enum value="(0.0f)" name="AL_EAXREVERB_MIN_LATE_REVERB_DELAY"/>
        <enum value="(0.1f)" name="AL_EAXREVERB_MAX_LATE_REVERB_DELAY"/>
        <enum value="(0.011f)" name="AL_EAXREVERB_DEFAULT_LATE_REVERB_DELAY"/>
        <enum value="(0.0f)" name="AL_EAXREVERB_DEFAULT_LATE_REVERB_PAN_XYZ"/>
        <enum value="(0.075f)" name="AL_EAXREVERB_MIN_ECHO_TIME"/>
        <enum value="(0.25f)" name="AL_EAXREVERB_MAX_ECHO_TIME"/>
        <enum value="(0.25f)" name="AL_EAXREVERB_DEFAULT_ECHO_TIME"/>
        <enum value="(0.0f)" name="AL_EAXREVERB_MIN_ECHO_DEPTH"/>
        <enum value="(1.0f)" name="AL_EAXREVERB_MAX_ECHO_DEPTH"/>
        <enum value="(0.0f)" name="AL_EAXREVERB_DEFAULT_ECHO_DEPTH"/>
        <enum value="(0.04f)" name="AL_EAXREVERB_MIN_MODULATION_TIME"/>
        <enum value="(4.0f)" name="AL_EAXREVERB_MAX_MODULATION_TIME"/>
        <enum value="(0.25f)" name="AL_EAXREVERB_DEFAULT_MODULATION_TIME"/>
        <enum value="(0.0f)" name="AL_EAXREVERB_MIN_MODULATION_DEPTH"/>
        <enum value="(1.0f)" name="AL_EAXREVERB_MAX_MODULATION_DEPTH"/>
        <enum value="(0.0f)" name="AL_EAXREVERB_DEFAULT_MODULATION_DEPTH"/>
        <enum value="(0.892f)" name="AL_EAXREVERB_MIN_AIR_ABSORPTION_GAINHF"/>
        <enum value="(1.0f)" name="AL_EAXREVERB_MAX_AIR_ABSORPTION_GAINHF"/>
        <enum value="(0.994f)" name="AL_EAXREVERB_DEFAULT_AIR_ABSORPTION_GAINHF"/>
        <enum value="(1000.0f)" name="AL_EAXREVERB_MIN_HFREFERENCE"/>
        <enum value="(20000.0f)" name="AL_EAXREVERB_MAX_HFREFERENCE"/>
        <enum value="(5000.0f)" name="AL_EAXREVERB_DEFAULT_HFREFERENCE"/>
        <enum value="(20.0f)" name="AL_EAXREVERB_MIN_LFREFERENCE"/>
        <enum value="(1000.0f)" name="AL_EAXREVERB_MAX_LFREFERENCE"/>
        <enum value="(250.0f)" name="AL_EAXREVERB_DEFAULT_LFREFERENCE"/>
        <enum value="(0.0f)" name="AL_EAXREVERB_MIN_ROOM_ROLLOFF_FACTOR"/>
        <enum value="(10.0f)" name="AL_EAXREVERB_MAX_ROOM_ROLLOFF_FACTOR"/>
        <enum value="(0.0f)" name="AL_EAXREVERB_DEFAULT_ROOM_ROLLOFF_FACTOR"/>
        <enum value="AL_FALSE" name="AL_EAXREVERB_MIN_DECAY_HFLIMIT"/>
        <enum value="AL_TRUE" name="AL_EAXREVERB_MAX_DECAY_HFLIMIT"/>
        <enum value="AL_TRUE" name="AL_EAXREVERB_DEFAULT_DECAY_HFLIMIT"/>
        <enum value="(0)" name="AL_CHORUS_WAVEFORM_SINUSOID" group="ChorusWaveform"/>
        <enum value="(1)" name="AL_CHORUS_WAVEFORM_TRIANGLE" group="ChorusWaveform"/>
        <enum value="(0)" name="AL_CHORUS_MIN_WAVEFORM"/>
        <enum value="(1)" name="AL_CHORUS_MAX_WAVEFORM"/>
        <enum value="(1)" name="AL_CHORUS_DEFAULT_WAVEFORM"/>
        <enum value="(-180)" name="AL_CHORUS_MIN_PHASE"/>
        <enum value="(180)" name="AL_CHORUS_MAX_PHASE"/>
        <enum value="(90)" name="AL_CHORUS_DEFAULT_PHASE"/>
        <enum value="(0.0f)" name="AL_CHORUS_MIN_RATE"/>
        <enum value="(10.0f)" name="AL_CHORUS_MAX_RATE"/>
        <enum value="(1.1f)" name="AL_CHORUS_DEFAULT_RATE"/>
        <enum value="(0.0f)" name="AL_CHORUS_MIN_DEPTH"/>
        <enum value="(1.0f)" name="AL_CHORUS_MAX_DEPTH"/>
        <enum value="(0.1f)" name="AL_CHORUS_DEFAULT_DEPTH"/>
        <enum value="(-1.0f)" name="AL_CHORUS_MIN_FEEDBACK"/>
        <enum value="(1.0f)" name="AL_CHORUS_MAX_FEEDBACK"/>
        <enum value="(0.25f)" name="AL_CHORUS_DEFAULT_FEEDBACK"/>
        <enum value="(0.0f)" name="AL_CHORUS_MIN_DELAY"/>
        <enum value="(0.016f)" name="AL_CHORUS_MAX_DELAY"/>
        <enum value="(0.016f)" name="AL_CHORUS_DEFAULT_DELAY"/>
        <enum value="(0.0f)" name="AL_DISTORTION_MIN_EDGE"/>
        <enum value="(1.0f)" name="AL_DISTORTION_MAX_EDGE"/>
        <enum value="(0.2f)" name="AL_DISTORTION_DEFAULT_EDGE"/>
        <enum value="(0.01f)" name="AL_DISTORTION_MIN_GAIN"/>
        <enum value="(1.0f)" name="AL_DISTORTION_MAX_GAIN"/>
        <enum value="(0.05f)" name="AL_DISTORTION_DEFAULT_GAIN"/>
        <enum value="(80.0f)" name="AL_DISTORTION_MIN_LOWPASS_CUTOFF"/>
        <enum value="(24000.0f)" name="AL_DISTORTION_MAX_LOWPASS_CUTOFF"/>
        <enum value="(8000.0f)" name="AL_DISTORTION_DEFAULT_LOWPASS_CUTOFF"/>
        <enum value="(80.0f)" name="AL_DISTORTION_MIN_EQCENTER"/>
        <enum value="(24000.0f)" name="AL_DISTORTION_MAX_EQCENTER"/>
        <enum value="(3600.0f)" name="AL_DISTORTION_DEFAULT_EQCENTER"/>
        <enum value="(80.0f)" name="AL_DISTORTION_MIN_EQBANDWIDTH"/>
        <enum value="(24000.0f)" name="AL_DISTORTION_MAX_EQBANDWIDTH"/>
        <enum value="(3600.0f)" name="AL_DISTORTION_DEFAULT_EQBANDWIDTH"/>
        <enum value="(0.0f)" name="AL_ECHO_MIN_DELAY"/>
        <enum value="(0.207f)" name="AL_ECHO_MAX_DELAY"/>
        <enum value="(0.1f)" name="AL_ECHO_DEFAULT_DELAY"/>
        <enum value="(0.0f)" name="AL_ECHO_MIN_LRDELAY"/>
        <enum value="(0.404f)" name="AL_ECHO_MAX_LRDELAY"/>
        <enum value="(0.1f)" name="AL_ECHO_DEFAULT_LRDELAY"/>
        <enum value="(0.0f)" name="AL_ECHO_MIN_DAMPING"/>
        <enum value="(0.99f)" name="AL_ECHO_MAX_DAMPING"/>
        <enum value="(0.5f)" name="AL_ECHO_DEFAULT_DAMPING"/>
        <enum value="(0.0f)" name="AL_ECHO_MIN_FEEDBACK"/>
        <enum value="(1.0f)" name="AL_ECHO_MAX_FEEDBACK"/>
        <enum value="(0.5f)" name="AL_ECHO_DEFAULT_FEEDBACK"/>
        <enum value="(-1.0f)" name="AL_ECHO_MIN_SPREAD"/>
        <enum value="(1.0f)" name="AL_ECHO_MAX_SPREAD"/>
        <enum value="(-1.0f)" name="AL_ECHO_DEFAULT_SPREAD"/>
        <enum value="(0)" name="AL_FLANGER_WAVEFORM_SINUSOID" group="FlangerWaveform"/>
        <enum value="(1)" name="AL_FLANGER_WAVEFORM_TRIANGLE" group="FlangerWaveform"/>
        <enum value="(0)" name="AL_FLANGER_MIN_WAVEFORM"/>
        <enum value="(1)" name="AL_FLANGER_MAX_WAVEFORM"/>
        <enum value="(1)" name="AL_FLANGER_DEFAULT_WAVEFORM"/>
        <enum value="(-180)" name="AL_FLANGER_MIN_PHASE"/>
        <enum value="(180)" name="AL_FLANGER_MAX_PHASE"/>
        <enum value="(0)" name="AL_FLANGER_DEFAULT_PHASE"/>
        <enum value="(0.0f)" name="AL_FLANGER_MIN_RATE"/>
        <enum value="(10.0f)" name="AL_FLANGER_MAX_RATE"/>
        <enum value="(0.27f)" name="AL_FLANGER_DEFAULT_RATE"/>
        <enum value="(0.0f)" name="AL_FLANGER_MIN_DEPTH"/>
        <enum value="(1.0f)" name="AL_FLANGER_MAX_DEPTH"/>
        <enum value="(1.0f)" name="AL_FLANGER_DEFAULT_DEPTH"/>
        <enum value="(-1.0f)" name="AL_FLANGER_MIN_FEEDBACK"/>
        <enum value="(1.0f)" name="AL_FLANGER_MAX_FEEDBACK"/>
        <enum value="(-0.5f)" name="AL_FLANGER_DEFAULT_FEEDBACK"/>
        <enum value="(0.0f)" name="AL_FLANGER_MIN_DELAY"/>
        <enum value="(0.004f)" name="AL_FLANGER_MAX_DELAY"/>
        <enum value="(0.002f)" name="AL_FLANGER_DEFAULT_DELAY"/>
        <enum value="(0.0f)" name="AL_FREQUENCY_SHIFTER_MIN_FREQUENCY"/>
        <enum value="(24000.0f)" name="AL_FREQUENCY_SHIFTER_MAX_FREQUENCY"/>
        <enum value="(0.0f)" name="AL_FREQUENCY_SHIFTER_DEFAULT_FREQUENCY"/>
        <enum value="(0)" name="AL_FREQUENCY_SHIFTER_MIN_LEFT_DIRECTION"/>
        <enum value="(2)" name="AL_FREQUENCY_SHIFTER_MAX_LEFT_DIRECTION"/>
        <enum value="(0)" name="AL_FREQUENCY_SHIFTER_DEFAULT_LEFT_DIRECTION"/>
        <enum value="(0)" name="AL_FREQUENCY_SHIFTER_DIRECTION_DOWN" group="FrequencyShifterDirection"/>
        <enum value="(1)" name="AL_FREQUENCY_SHIFTER_DIRECTION_UP" group="FrequencyShifterDirection"/>
        <enum value="(2)" name="AL_FREQUENCY_SHIFTER_DIRECTION_OFF" group="FrequencyShifterDirection"/>
        <enum value="(0)" name="AL_FREQUENCY_SHIFTER_MIN_RIGHT_DIRECTION"/>
        <enum value="(2)" name="AL_FREQUENCY_SHIFTER_MAX_RIGHT_DIRECTION"/>
        <enum value="(0)" name="AL_FREQUENCY_SHIFTER_DEFAULT_RIGHT_DIRECTION"/>
        <enum value="(0)" name="AL_VOCAL_MORPHER_MIN_PHONEMEA"/>
        <enum value="(29)" name="AL_VOCAL_MORPHER_MAX_PHONEMEA"/>
        <enum value="(0)" name="AL_VOCAL_MORPHER_DEFAULT_PHONEMEA"/>
        <enum value="(-24)" name="AL_VOCAL_MORPHER_MIN_PHONEMEA_COARSE_TUNING"/>
        <enum value="(24)" name="AL_VOCAL_MORPHER_MAX_PHONEMEA_COARSE_TUNING"/>
        <enum value="(0)" name="AL_VOCAL_MORPHER_DEFAULT_PHONEMEA_COARSE_TUNING"/>
        <enum value="(0)" name="AL_VOCAL_MORPHER_MIN_PHONEMEB"/>
        <enum value="(29)" name="AL_VOCAL_MORPHER_MAX_PHONEMEB"/>
        <enum value="(10)" name="AL_VOCAL_MORPHER_DEFAULT_PHONEMEB"/>
        <enum value="(-24)" name="AL_VOCAL_MORPHER_MIN_PHONEMEB_COARSE_TUNING"/>
        <enum value="(24)" name="AL_VOCAL_MORPHER_MAX_PHONEMEB_COARSE_TUNING"/>
        <enum value="(0)" name="AL_VOCAL_MORPHER_DEFAULT_PHONEMEB_COARSE_TUNING"/>
        <enum value="(0)" name="AL_VOCAL_MORPHER_PHONEME_A" group="VocalMorpherPhoneme"/>
        <enum value="(1)" name="AL_VOCAL_MORPHER_PHONEME_E" group="VocalMorpherPhoneme"/>
        <enum value="(2)" name="AL_VOCAL_MORPHER_PHONEME_I" group="VocalMorpherPhoneme"/>
        <enum value="(3)" name="AL_VOCAL_MORPHER_PHONEME_O" group="VocalMorpherPhoneme"/>
        <enum value="(4)" name="AL_VOCAL_MORPHER_PHONEME_U" group="VocalMorpherPhoneme"/>
        <enum value="(5)" name="AL_VOCAL_MORPHER_PHONEME_AA" group="VocalMorpherPhoneme"/>
        <enum value="(6)" name="AL_VOCAL_MORPHER_PHONEME_AE" group="VocalMorpherPhoneme"/>
        <enum value="(7)" name="AL_VOCAL_MORPHER_PHONEME_AH" group="VocalMorpherPhoneme"/>
        <enum value="(8)" name="AL_VOCAL_MORPHER_PHONEME_AO" group="VocalMorpherPhoneme"/>
        <enum value="(9)" name="AL_VOCAL_MORPHER_PHONEME_EH" group="VocalMorpherPhoneme"/>
        <enum value="(10)" name="AL_VOCAL_MORPHER_PHONEME_ER" group="VocalMorpherPhoneme"/>
        <enum value="(11)" name="AL_VOCAL_MORPHER_PHONEME_IH" group="VocalMorpherPhoneme"/>
        <enum value="(12)" name="AL_VOCAL_MORPHER_PHONEME_IY" group="VocalMorpherPhoneme"/>
        <enum value="(13)" name="AL_VOCAL_MORPHER_PHONEME_UH" group="VocalMorpherPhoneme"/>
        <enum value="(14)" name="AL_VOCAL_MORPHER_PHONEME_UW" group="VocalMorpherPhoneme"/>
        <enum value="(15)" name="AL_VOCAL_MORPHER_PHONEME_B" group="VocalMorpherPhoneme"/>
        <enum value="(16)" name="AL_VOCAL_MORPHER_PHONEME_D" group="VocalMorpherPhoneme"/>
        <enum value="(17)" name="AL_VOCAL_MORPHER_PHONEME_F" group="VocalMorpherPhoneme"/>
        <enum value="(18)" name="AL_VOCAL_MORPHER_PHONEME_G" group="VocalMorpherPhoneme"/>
        <enum value="(19)" name="AL_VOCAL_MORPHER_PHONEME_J" group="VocalMorpherPhoneme"/>
        <enum value="(20)" name="AL_VOCAL_MORPHER_PHONEME_K" group="VocalMorpherPhoneme"/>
        <enum value="(21)" name="AL_VOCAL_MORPHER_PHONEME_L" group="VocalMorpherPhoneme"/>
        <enum value="(22)" name="AL_VOCAL_MORPHER_PHONEME_M" group="VocalMorpherPhoneme"/>
        <enum value="(23)" name="AL_VOCAL_MORPHER_PHONEME_N" group="VocalMorpherPhoneme"/>
        <enum value="(24)" name="AL_VOCAL_MORPHER_PHONEME_P" group="VocalMorpherPhoneme"/>
        <enum value="(25)" name="AL_VOCAL_MORPHER_PHONEME_R" group="VocalMorpherPhoneme"/>
        <enum value="(26)" name="AL_VOCAL_MORPHER_PHONEME_S" group="VocalMorpherPhoneme"/>
        <enum value="(27)" name="AL_VOCAL_MORPHER_PHONEME_T" group="VocalMorpherPhoneme"/>
        <enum value="(28)" name="AL_VOCAL_MORPHER_PHONEME_V" group="VocalMorpherPhoneme"/>
        <enum value="(29)" name="AL_VOCAL_MORPHER_PHONEME_Z" group="VocalMorpherPhoneme"/>
        <enum value="(0)" name="AL_VOCAL_MORPHER_WAVEFORM_SINUSOID" group="VocalMorpherWaveform"/>
        <enum value="(1)" name="AL_VOCAL_MORPHER_WAVEFORM_TRIANGLE" group="VocalMorpherWaveform"/>
        <enum value="(2)" name="AL_VOCAL_MORPHER_WAVEFORM_SAWTOOTH" group="VocalMorpherWaveform"/>
        <enum value="(0)" name="AL_VOCAL_MORPHER_MIN_WAVEFORM"/>
        <enum value="(2)" name="AL_VOCAL_MORPHER_MAX_WAVEFORM"/>
        <enum value="(0)" name="AL_VOCAL_MORPHER_DEFAULT_WAVEFORM"/>
        <enum value="(0.0f)" name="AL_VOCAL_MORPHER_MIN_RATE"/>
        <enum value="(10.0f)" name="AL_VOCAL_MORPHER_MAX_RATE"/>
        <enum value="(1.41f)" name="AL_VOCAL_MORPHER_DEFAULT_RATE"/>
        <enum value="(-12)" name="AL_PITCH_SHIFTER_MIN_COARSE_TUNE"/>
        <enum value="(12)" name="AL_PITCH_SHIFTER_MAX_COARSE_TUNE"/>
        <enum value="(12)" name="AL_PITCH_SHIFTER_DEFAULT_COARSE_TUNE"/>
        <enum value="(-50)" name="AL_PITCH_SHIFTER_MIN_FINE_TUNE"/>
        <enum value="(50)" name="AL_PITCH_SHIFTER_MAX_FINE_TUNE"/>
        <enum value="(0)" name="AL_PITCH_SHIFTER_DEFAULT_FINE_TUNE"/>
        <enum value="(0.0f)" name="AL_RING_MODULATOR_MIN_FREQUENCY"/>
        <enum value="(8000.0f)" name="AL_RING_MODULATOR_MAX_FREQUENCY"/>
        <enum value="(440.0f)" name="AL_RING_MODULATOR_DEFAULT_FREQUENCY"/>
        <enum value="(0.0f)" name="AL_RING_MODULATOR_MIN_HIGHPASS_CUTOFF"/>
        <enum value="(24000.0f)" name="AL_RING_MODULATOR_MAX_HIGHPASS_CUTOFF"/>
        <enum value="(800.0f)" name="AL_RING_MODULATOR_DEFAULT_HIGHPASS_CUTOFF"/>
        <enum value="(0)" name="AL_RING_MODULATOR_SINUSOID" group="RingModulatorWaveform"/>
        <enum value="(1)" name="AL_RING_MODULATOR_SAWTOOTH" group="RingModulatorWaveform"/>
        <enum value="(2)" name="AL_RING_MODULATOR_SQUARE" group="RingModulatorWaveform"/>
        <enum value="(0)" name="AL_RING_MODULATOR_MIN_WAVEFORM"/>
        <enum value="(2)" name="AL_RING_MODULATOR_MAX_WAVEFORM"/>
        <enum value="(0)" name="AL_RING_MODULATOR_DEFAULT_WAVEFORM"/>
        <enum value="(0.0001f)" name="AL_AUTOWAH_MIN_ATTACK_TIME"/>
        <enum value="(1.0f)" name="AL_AUTOWAH_MAX_ATTACK_TIME"/>
        <enum value="(0.06f)" name="AL_AUTOWAH_DEFAULT_ATTACK_TIME"/>
        <enum value="(0.0001f)" name="AL_AUTOWAH_MIN_RELEASE_TIME"/>
        <enum value="(1.0f)" name="AL_AUTOWAH_MAX_RELEASE_TIME"/>
        <enum value="(0.06f)" name="AL_AUTOWAH_DEFAULT_RELEASE_TIME"/>
        <enum value="(2.0f)" name="AL_AUTOWAH_MIN_RESONANCE"/>
        <enum value="(1000.0f)" name="AL_AUTOWAH_MAX_RESONANCE"/>
        <enum value="(1000.0f)" name="AL_AUTOWAH_DEFAULT_RESONANCE"/>
        <enum value="(0.00003f)" name="AL_AUTOWAH_MIN_PEAK_GAIN"/>
        <enum value="(31621.0f)" name="AL_AUTOWAH_MAX_PEAK_GAIN"/>
        <enum value="(11.22f)" name="AL_AUTOWAH_DEFAULT_PEAK_GAIN"/>
        <enum value="(0)" name="AL_COMPRESSOR_MIN_ONOFF"/>
        <enum value="(1)" name="AL_COMPRESSOR_MAX_ONOFF"/>
        <enum value="(1)" name="AL_COMPRESSOR_DEFAULT_ONOFF"/>
        <enum value="(0.126f)" name="AL_EQUALIZER_MIN_LOW_GAIN"/>
        <enum value="(7.943f)" name="AL_EQUALIZER_MAX_LOW_GAIN"/>
        <enum value="(1.0f)" name="AL_EQUALIZER_DEFAULT_LOW_GAIN"/>
        <enum value="(50.0f)" name="AL_EQUALIZER_MIN_LOW_CUTOFF"/>
        <enum value="(800.0f)" name="AL_EQUALIZER_MAX_LOW_CUTOFF"/>
        <enum value="(200.0f)" name="AL_EQUALIZER_DEFAULT_LOW_CUTOFF"/>
        <enum value="(0.126f)" name="AL_EQUALIZER_MIN_MID1_GAIN"/>
        <enum value="(7.943f)" name="AL_EQUALIZER_MAX_MID1_GAIN"/>
        <enum value="(1.0f)" name="AL_EQUALIZER_DEFAULT_MID1_GAIN"/>
        <enum value="(200.0f)" name="AL_EQUALIZER_MIN_MID1_CENTER"/>
        <enum value="(3000.0f)" name="AL_EQUALIZER_MAX_MID1_CENTER"/>
        <enum value="(500.0f)" name="AL_EQUALIZER_DEFAULT_MID1_CENTER"/>
        <enum value="(0.01f)" name="AL_EQUALIZER_MIN_MID1_WIDTH"/>
        <enum value="(1.0f)" name="AL_EQUALIZER_MAX_MID1_WIDTH"/>
        <enum value="(1.0f)" name="AL_EQUALIZER_DEFAULT_MID1_WIDTH"/>
        <enum value="(0.126f)" name="AL_EQUALIZER_MIN_MID2_GAIN"/>
        <enum value="(7.943f)" name="AL_EQUALIZER_MAX_MID2_GAIN"/>
        <enum value="(1.0f)" name="AL_EQUALIZER_DEFAULT_MID2_GAIN"/>
        <enum value="(1000.0f)" name="AL_EQUALIZER_MIN_MID2_CENTER"/>
        <enum value="(8000.0f)" name="AL_EQUALIZER_MAX_MID2_CENTER"/>
        <enum value="(3000.0f)" name="AL_EQUALIZER_DEFAULT_MID2_CENTER"/>
        <enum value="(0.01f)" name="AL_EQUALIZER_MIN_MID2_WIDTH"/>
        <enum value="(1.0f)" name="AL_EQUALIZER_MAX_MID2_WIDTH"/>
        <enum value="(1.0f)" name="AL_EQUALIZER_DEFAULT_MID2_WIDTH"/>
        <enum value="(0.126f)" name="AL_EQUALIZER_MIN_HIGH_GAIN"/>
        <enum value="(7.943f)" name="AL_EQUALIZER_MAX_HIGH_GAIN"/>
        <enum value="(1.0f)" name="AL_EQUALIZER_DEFAULT_HIGH_GAIN"/>
        <enum value="(4000.0f)" name="AL_EQUALIZER_MIN_HIGH_CUTOFF"/>
        <enum value="(16000.0f)" name="AL_EQUALIZER_MAX_HIGH_CUTOFF"/>
        <enum value="(6000.0f)" name="AL_EQUALIZER_DEFAULT_HIGH_CUTOFF"/>
        <enum value="(0.0f)" name="AL_MIN_AIR_ABSORPTION_FACTOR"/>
        <enum value="(10.0f)" name="AL_MAX_AIR_ABSORPTION_FACTOR"/>
        <enum value="(0.0f)" name="AL_DEFAULT_AIR_ABSORPTION_FACTOR"/>
        <enum value="(0.0f)" name="AL_MIN_ROOM_ROLLOFF_FACTOR"/>
        <enum value="(10.0f)" name="AL_MAX_ROOM_ROLLOFF_FACTOR"/>
        <enum value="(0.0f)" name="AL_DEFAULT_ROOM_ROLLOFF_FACTOR"/>
        <enum value="(0.0f)" name="AL_MIN_CONE_OUTER_GAINHF"/>
        <enum value="(1.0f)" name="AL_MAX_CONE_OUTER_GAINHF"/>
        <enum value="(1.0f)" name="AL_DEFAULT_CONE_OUTER_GAINHF"/>
        <enum value="AL_FALSE" name="AL_MIN_DIRECT_FILTER_GAINHF_AUTO"/>
        <enum value="AL_TRUE" name="AL_MAX_DIRECT_FILTER_GAINHF_AUTO"/>
        <enum value="AL_TRUE" name="AL_DEFAULT_DIRECT_FILTER_GAINHF_AUTO"/>
        <enum value="AL_FALSE" name="AL_MIN_AUXILIARY_SEND_FILTER_GAIN_AUTO"/>
        <enum value="AL_TRUE" name="AL_MAX_AUXILIARY_SEND_FILTER_GAIN_AUTO"/>
        <enum value="AL_TRUE" name="AL_DEFAULT_AUXILIARY_SEND_FILTER_GAIN_AUTO"/>
        <enum value="AL_FALSE" name="AL_MIN_AUXILIARY_SEND_FILTER_GAINHF_AUTO"/>
        <enum value="AL_TRUE" name="AL_MAX_AUXILIARY_SEND_FILTER_GAINHF_AUTO"/>
        <enum value="AL_TRUE" name="AL_DEFAULT_AUXILIARY_SEND_FILTER_GAINHF_AUTO"/>
        <enum value="FLT_MIN" name="AL_MIN_METERS_PER_UNIT"/>
        <enum value="FLT_MAX" name="AL_MAX_METERS_PER_UNIT"/>
        <enum value="(1.0f)" name="AL_DEFAULT_METERS_PER_UNIT"/>
        <enum value="0x200" name="AL_SOURCE_DISTANCE_MODEL" group="EnableCap"/>
        <enum value="0x1031" name="AL_BYTE_RW_OFFSETS_SOFT" group="SourceFloat,SourcePName">
            <property on="source" type="ALfloat" range="0.0.."/>
        </enum>
        <enum value="0x1032" name="AL_SAMPLE_RW_OFFSETS_SOFT" group="SourceFloat,SourcePName">
            <property on="source" type="ALfloat" range="0.0.."/>
        </enum>
        <enum value="0x2015" name="AL_LOOP_POINTS_SOFT" group="BufferInteger,BufferPName">
            <!-- TODO array ranges-->
            <property on="buffer" type="ALint[2]" default="0,0"/>
        </enum>
        <enum value="0x4112" name="AL_FOLDBACK_EVENT_BLOCK" group="FoldbackEvent"/>
        <enum value="0x4111" name="AL_FOLDBACK_EVENT_START" group="FoldbackEvent"/>
        <enum value="0x4113" name="AL_FOLDBACK_EVENT_STOP" group="FoldbackEvent"/>
        <enum value="0x4101" name="AL_FOLDBACK_MODE_MONO" group="FoldbackMode"/>
        <enum value="0x4102" name="AL_FOLDBACK_MODE_STEREO" group="FoldbackMode"/>
        <enum value="0x0001" name="AL_DEDICATED_GAIN" group="EffectDedicatedGain,EffectFloat,EffectPName">
            <property on="effect" type="ALfloat" default="1"/>
        </enum>
        <enum value="0x9001" name="AL_EFFECT_DEDICATED_DIALOGUE" group="EffectType"/>
        <enum value="0x9000" name="AL_EFFECT_DEDICATED_LOW_FREQUENCY_EFFECT" group="EffectType"/>
        <enum value="0x1500" name="AL_MONO_SOFT" group="BufferChannelsSOFT"/>
        <enum value="0x1501" name="AL_STEREO_SOFT" group="BufferChannelsSOFT"/>
        <enum value="0x1502" name="AL_REAR_SOFT" group="BufferChannelsSOFT"/>
        <enum value="0x1503" name="AL_QUAD_SOFT" group="BufferChannelsSOFT"/>
        <enum value="0x1504" name="AL_5POINT1_SOFT" group="BufferChannelsSOFT"/>
        <enum value="0x1505" name="AL_6POINT1_SOFT" group="BufferChannelsSOFT"/>
        <enum value="0x1506" name="AL_7POINT1_SOFT" group="BufferChannelsSOFT"/>
        <enum value="0x1400" name="AL_BYTE_SOFT" group="SampleTypeSOFT"/>
        <enum value="0x1401" name="AL_UNSIGNED_BYTE_SOFT" group="SampleTypeSOFT"/>
        <enum value="0x1402" name="AL_SHORT_SOFT" group="SampleTypeSOFT"/>
        <enum value="0x1403" name="AL_UNSIGNED_SHORT_SOFT" group="SampleTypeSOFT"/>
        <enum value="0x1404" name="AL_INT_SOFT" group="SampleTypeSOFT"/>
        <enum value="0x1405" name="AL_UNSIGNED_INT_SOFT" group="SampleTypeSOFT"/>
        <enum value="0x1406" name="AL_FLOAT_SOFT" group="SampleTypeSOFT"/>
        <enum value="0x1407" name="AL_DOUBLE_SOFT" group="SampleTypeSOFT"/>
        <enum value="0x1408" name="AL_BYTE3_SOFT" group="SampleTypeSOFT"/>
        <enum value="0x1409" name="AL_UNSIGNED_BYTE3_SOFT" group="SampleTypeSOFT"/>
        <enum value="0x1100" name="AL_MONO8_SOFT" group="InternalFormatSOFT"/>
        <enum value="0x1101" name="AL_MONO16_SOFT" group="InternalFormatSOFT"/>
        <enum value="0x10010" name="AL_MONO32F_SOFT" group="InternalFormatSOFT"/>
        <enum value="0x1102" name="AL_STEREO8_SOFT" group="InternalFormatSOFT"/>
        <enum value="0x1103" name="AL_STEREO16_SOFT" group="InternalFormatSOFT"/>
        <enum value="0x10011" name="AL_STEREO32F_SOFT" group="InternalFormatSOFT"/>
        <enum value="0x1204" name="AL_QUAD8_SOFT" group="InternalFormatSOFT"/>
        <enum value="0x1205" name="AL_QUAD16_SOFT" group="InternalFormatSOFT"/>
        <enum value="0x1206" name="AL_QUAD32F_SOFT" group="InternalFormatSOFT"/>
        <enum value="0x1207" name="AL_REAR8_SOFT" group="InternalFormatSOFT"/>
        <enum value="0x1208" name="AL_REAR16_SOFT" group="InternalFormatSOFT"/>
        <enum value="0x1209" name="AL_REAR32F_SOFT" group="InternalFormatSOFT"/>
        <enum value="0x120A" name="AL_5POINT1_8_SOFT" group="InternalFormatSOFT"/>
        <enum value="0x120B" name="AL_5POINT1_16_SOFT" group="InternalFormatSOFT"/>
        <enum value="0x120C" name="AL_5POINT1_32F_SOFT" group="InternalFormatSOFT"/>
        <enum value="0x120D" name="AL_6POINT1_8_SOFT" group="InternalFormatSOFT"/>
        <enum value="0x120E" name="AL_6POINT1_16_SOFT" group="InternalFormatSOFT"/>
        <enum value="0x120F" name="AL_6POINT1_32F_SOFT" group="InternalFormatSOFT"/>
        <enum value="0x1210" name="AL_7POINT1_8_SOFT" group="InternalFormatSOFT"/>
        <enum value="0x1211" name="AL_7POINT1_16_SOFT" group="InternalFormatSOFT"/>
        <enum value="0x1212" name="AL_7POINT1_32F_SOFT" group="InternalFormatSOFT"/>
        <enum value="0x2008" name="AL_INTERNAL_FORMAT_SOFT" group="BufferInteger,BufferPName">
            <property on="buffer" type="ALenum" group="InternalFormatSOFT"/>
        </enum>
        <enum value="0x2009" name="AL_BYTE_LENGTH_SOFT" group="BufferInteger,BufferPName">
            <property on="buffer" type="ALint"/>
        </enum>
        <enum value="0x200A" name="AL_SAMPLE_LENGTH_SOFT" group="BufferInteger,BufferPName">
            <property on="buffer" type="ALint"/>
        </enum>
        <enum value="0x200B" name="AL_SEC_LENGTH_SOFT" group="BufferFloat,BufferPName">
            <property on="buffer" type="ALfloat"/>
        </enum>
        <enum value="0x1033" name="AL_DIRECT_CHANNELS_SOFT" group="SourceInteger,SourcePName">
            <property on="source" type="ALenum" group="DirectChannelsSOFT" default="AL_FALSE"/>
        </enum>
        <enum value="0x1030" name="AL_STEREO_ANGLES" group="SourceFloat,SourcePName">
            <property on="source" type="ALfloat"/>
        </enum>
        <enum value="0x1031" name="AL_SOURCE_RADIUS" group="SourceFloat,SourcePName">
            <property on="source" type="ALfloat"/>
        </enum>
        <enum value="0x1200" name="AL_SAMPLE_OFFSET_LATENCY_SOFT" group="SourceInteger,SourcePName">
            <property on="source" type="ALuint64SOFT[2]"/>
        </enum>
        <enum value="0x1201" name="AL_SEC_OFFSET_LATENCY_SOFT" group="SourceFloat,SourcePName">
            <property on="source" type="ALdouble[2]"/>
        </enum>
        <enum value="0x1100" name="ALC_DEFAULT_FILTER_ORDER" group="ContextInteger,ContextPName,ContextAttribute">
            <property on="context" type="ALint"/>
        </enum>
        <enum value="0xC002" name="AL_DEFERRED_UPDATES_SOFT" group="BooleanPName,GetPName"/>
        <enum value="0x200C" name="AL_UNPACK_BLOCK_ALIGNMENT_SOFT" group="BufferInteger,BufferPName">
            <property on="buffer" type="ALint" range="0.." default="0"/>
        </enum>
        <enum value="0x200D" name="AL_PACK_BLOCK_ALIGNMENT_SOFT" group="BufferInteger,BufferPName">
            <property on="buffer" type="ALint" range="0.." default="0"/>
        </enum>
        <enum value="0x1302" name="AL_FORMAT_MONO_MSADPCM_SOFT" group="Format"/>
        <enum value="0x1303" name="AL_FORMAT_STEREO_MSADPCM_SOFT" group="Format"/>
        <enum value="0x20021" name="AL_FORMAT_BFORMAT2D_8" group="Format"/>
        <enum value="0x20022" name="AL_FORMAT_BFORMAT2D_16" group="Format"/>
        <enum value="0x20023" name="AL_FORMAT_BFORMAT2D_FLOAT32" group="Format"/>
        <enum value="0x20031" name="AL_FORMAT_BFORMAT3D_8" group="Format"/>
        <enum value="0x20032" name="AL_FORMAT_BFORMAT3D_16" group="Format"/>
        <enum value="0x20033" name="AL_FORMAT_BFORMAT3D_FLOAT32" group="Format"/>
        <enum value="0x10031" name="AL_FORMAT_BFORMAT2D_MULAW" group="Format"/>
        <enum value="0x10032" name="AL_FORMAT_BFORMAT3D_MULAW" group="Format"/>
        <enum value="0x200E" name="AL_GAIN_LIMIT_SOFT" group="IntegerPName,GetPName"/>
        <enum value="0x1210" name="AL_NUM_RESAMPLERS_SOFT" group="IntegerPName,GetPName"/>
        <enum value="0x1211" name="AL_DEFAULT_RESAMPLER_SOFT" group="IntegerPName,GetPName"/>
        <enum value="0x1212" name="AL_SOURCE_RESAMPLER_SOFT" group="SourceInteger,SourcePName">
            <property on="source" type="ALint"/>
        </enum>
        <enum value="0x1213" name="AL_RESAMPLER_NAME_SOFT" group="StringPName,GetPName"/>
        <enum value="0x1214" name="AL_SOURCE_SPATIALIZE_SOFT" group="SourceInteger,SourcePName">
            <property on="source" type="ALenum" group="SourceSpatializeSOFT" default="AL_AUTO_SOFT"/>
        </enum>
        <enum value="0x0002" name="AL_AUTO_SOFT" group="SourceSpatializeSOFT"/>
        <enum value="0x1202" name="AL_SAMPLE_OFFSET_CLOCK_SOFT" group="SourceInteger,SourcePName">
            <property on="source" type="ALint64SOFT"/>
        </enum>
        <enum value="0x1203" name="AL_SEC_OFFSET_CLOCK_SOFT" group="SourceDouble,SourcePName">
            <property on="source" type="ALdouble"/>
        </enum>
        <enum value="0x0001" name="AL_DROP_UNMATCHED_SOFT" group="DirectChannelsSOFT"/>
        <enum value="0x0002" name="AL_REMIX_UNMATCHED_SOFT" group="DirectChannelsSOFT"/>
        <enum value="0x1997" name="AL_AMBISONIC_LAYOUT_SOFT" group="BufferInteger,BufferPName">
            <property on="buffer" type="ALenum" group="AmbisonicLayoutSOFT" default="AL_FUMA_SOFT"/>
        </enum>
        <enum value="0x1998" name="AL_AMBISONIC_SCALING_SOFT" group="BufferInteger,BufferPName">
            <property on="buffer" type="ALenum" group="AmbisonicScalingSOFT" default="AL_FUMA_SOFT"/>
        </enum>
        <enum value="0x0000" name="AL_FUMA_SOFT" group="AmbisonicLayoutSOFT,AmbisonicScalingSOFT"/>
        <enum value="0x0001" name="AL_ACN_SOFT" group="AmbisonicLayoutSOFT"/>
        <enum value="0x0001" name="AL_SN3D_SOFT" group="AmbisonicScalingSOFT"/>
        <enum value="0x0002" name="AL_N3D_SOFT" group="AmbisonicScalingSOFT"/>
        <enum value="0x199C" name="AL_EFFECTSLOT_TARGET_SOFT" group="AuxiliaryEffectSlotInteger,AuxiliaryEffectSlotPName">
            <property on="auxiliary effect slot" type="ALuint" class="auxiliary effect slot" default="AL_EFFECTSLOT_NULL"/>
        </enum>
        <enum value="0x19A2" name="AL_EVENT_CALLBACK_FUNCTION_SOFT" group="PointerPName,GetPName"/>
        <enum value="0x19A3" name="AL_EVENT_CALLBACK_USER_PARAM_SOFT" group="PointerPName,GetPName"/>
        <enum value="0x19A4" name="AL_EVENT_TYPE_BUFFER_COMPLETED_SOFT" group="EventTypeSOFT"/>
        <enum value="0x19A5" name="AL_EVENT_TYPE_SOURCE_STATE_CHANGED_SOFT" group="EventTypeSOFT"/>
        <enum value="0x19A6" name="AL_EVENT_TYPE_DISCONNECTED_SOFT" group="EventTypeSOFT"/>
        <enum value="0x19A0" name="AL_BUFFER_CALLBACK_FUNCTION_SOFT" group="BufferPointerSOFT,BufferPName">
            <property on="buffer" type="ALvoid*" default="NULL"/>
        </enum>
        <enum value="0x19A1" name="AL_BUFFER_CALLBACK_USER_PARAM_SOFT" group="BufferPointerSOFT,BufferPName">
            <property on="buffer" type="ALvoid*" default="NULL"/>
        </enum>
        <enum value="0x19A2" name="AL_FORMAT_UHJ2CHN8_SOFT" group="Format"/>
        <enum value="0x19A3" name="AL_FORMAT_UHJ2CHN16_SOFT" group="Format"/>
        <enum value="0x19A4" name="AL_FORMAT_UHJ2CHN_FLOAT32_SOFT" group="Format"/>
        <enum value="0x19A5" name="AL_FORMAT_UHJ3CHN8_SOFT" group="Format"/>
        <enum value="0x19A6" name="AL_FORMAT_UHJ3CHN16_SOFT" group="Format"/>
        <enum value="0x19A7" name="AL_FORMAT_UHJ3CHN_FLOAT32_SOFT" group="Format"/>
        <enum value="0x19A8" name="AL_FORMAT_UHJ4CHN8_SOFT" group="Format"/>
        <enum value="0x19A9" name="AL_FORMAT_UHJ4CHN16_SOFT" group="Format"/>
        <enum value="0x19AA" name="AL_FORMAT_UHJ4CHN_FLOAT32_SOFT" group="Format"/>
        <enum value="0x19B0" name="AL_STEREO_MODE_SOFT" group="SourceInteger,SourcePName">
            <property on="source" type="ALenum" group="StereoModeSOFT" default="AL_NORMAL_SOFT"/>
        </enum>
        <enum value="0x0000" name="AL_NORMAL_SOFT" group="StereoModeSOFT"/>
        <enum value="0x0001" name="AL_SUPER_STEREO_SOFT" group="StereoModeSOFT"/>
        <enum value="0x19B1" name="AL_SUPER_STEREO_WIDTH_SOFT" group="SourceFloat,SourcePName">
            <property on="source" type="ALfloat" range="0.0..=1.0"/>
        </enum>
        <enum value="0x19B3" name="AL_FORMAT_UHJ2CHN_MULAW_SOFT" group="Format"/>
        <enum value="0x19B4" name="AL_FORMAT_UHJ2CHN_ALAW_SOFT" group="Format"/>
        <enum value="0x19B5" name="AL_FORMAT_UHJ2CHN_IMA4_SOFT" group="Format"/>
        <enum value="0x19B6" name="AL_FORMAT_UHJ2CHN_MSADPCM_SOFT" group="Format"/>
        <enum value="0x19B7" name="AL_FORMAT_UHJ3CHN_MULAW_SOFT" group="Format"/>
        <enum value="0x19B8" name="AL_FORMAT_UHJ3CHN_ALAW_SOFT" group="Format"/>
        <enum value="0x19B9" name="AL_FORMAT_UHJ4CHN_MULAW_SOFT" group="Format"/>
        <enum value="0x19BA" name="AL_FORMAT_UHJ4CHN_ALAW_SOFT" group="Format"/>
        <enum value="0x0002" name="AL_DONT_CARE_EXT" group="DebugSourceEXT,DebugTypeEXT,DebugSeverityEXT"/>
        <enum value="0x19B2" name="AL_DEBUG_OUTPUT_EXT" group="EnableCap"/>
        <enum value="0x19B3" name="AL_DEBUG_CALLBACK_FUNCTION_EXT" group="PointerPName"/>
        <enum value="0x19B4" name="AL_DEBUG_CALLBACK_USER_PARAM_EXT" group="PointerPName"/>
        <enum value="0x19B5" name="AL_DEBUG_SOURCE_API_EXT" group="DebugSourceEXT"/>
        <enum value="0x19B6" name="AL_DEBUG_SOURCE_AUDIO_SYSTEM_EXT" group="DebugSourceEXT"/>
        <enum value="0x19B7" name="AL_DEBUG_SOURCE_THIRD_PARTY_EXT" group="DebugSourceEXT"/>
        <enum value="0x19B8" name="AL_DEBUG_SOURCE_APPLICATION_EXT" group="DebugSourceEXT"/>
        <enum value="0x19B9" name="AL_DEBUG_SOURCE_OTHER_EXT" group="DebugSourceEXT"/>
        <enum value="0x19BA" name="AL_DEBUG_TYPE_ERROR_EXT" group="DebugTypeEXT"/>
        <enum value="0x19BB" name="AL_DEBUG_TYPE_DEPRECATED_BEHAVIOR_EXT" group="DebugTypeEXT"/>
        <enum value="0x19BC" name="AL_DEBUG_TYPE_UNDEFINED_BEHAVIOR_EXT" group="DebugTypeEXT"/>
        <enum value="0x19BD" name="AL_DEBUG_TYPE_PORTABILITY_EXT" group="DebugTypeEXT"/>
        <enum value="0x19BE" name="AL_DEBUG_TYPE_PERFORMANCE_EXT" group="DebugTypeEXT"/>
        <enum value="0x19BF" name="AL_DEBUG_TYPE_MARKER_EXT" group="DebugTypeEXT"/>
        <enum value="0x19C0" name="AL_DEBUG_TYPE_PUSH_GROUP_EXT" group="DebugTypeEXT"/>
        <enum value="0x19C1" name="AL_DEBUG_TYPE_POP_GROUP_EXT" group="DebugTypeEXT"/>
        <enum value="0x19C2" name="AL_DEBUG_TYPE_OTHER_EXT" group="DebugTypeEXT"/>
        <enum value="0x19C3" name="AL_DEBUG_SEVERITY_HIGH_EXT" group="DebugSeverityEXT"/>
        <enum value="0x19C4" name="AL_DEBUG_SEVERITY_MEDIUM_EXT" group="DebugSeverityEXT"/>
        <enum value="0x19C5" name="AL_DEBUG_SEVERITY_LOW_EXT" group="DebugSeverityEXT"/>
        <enum value="0x19C6" name="AL_DEBUG_SEVERITY_NOTIFICATION_EXT" group="DebugSeverityEXT"/>
        <enum value="0x19C7" name="AL_DEBUG_LOGGED_MESSAGES_EXT" group="BooleanPName,IntegerPName,FloatPName,DoublePName,GetPName"/>
        <enum value="0x19C8" name="AL_DEBUG_NEXT_LOGGED_MESSAGE_LENGTH_EXT" group="BooleanPName,IntegerPName,FloatPName,DoublePName,GetPName"/>
        <enum value="0x19C9" name="AL_MAX_DEBUG_MESSAGE_LENGTH_EXT" group="BooleanPName,IntegerPName,FloatPName,DoublePName,GetPName"/>
        <enum value="0x19CA" name="AL_MAX_DEBUG_LOGGED_MESSAGES_EXT" group="BooleanPName,IntegerPName,FloatPName,DoublePName,GetPName"/>
        <enum value="0x19CB" name="AL_MAX_DEBUG_GROUP_STACK_DEPTH_EXT" group="BooleanPName,IntegerPName,FloatPName,DoublePName,GetPName"/>
        <enum value="0x19CC" name="AL_MAX_LABEL_LENGTH_EXT" group="BooleanPName,IntegerPName,FloatPName,DoublePName,GetPName"/>
        <enum value="0x19CD" name="AL_STACK_OVERFLOW_EXT" group="ErrorCode"/>
        <enum value="0x19CE" name="AL_STACK_UNDERFLOW_EXT" group="ErrorCode"/>
        <enum value="0x19CF" name="AL_CONTEXT_FLAGS_EXT" group="IntegerPName,GetPName"/>
        <enum value="0x1009" name="AL_BUFFER_EXT" group="ObjectIdentifier"/>
        <enum value="0x19D0" name="AL_SOURCE_EXT" group="ObjectIdentifier"/>
        <enum value="0x19D1" name="AL_FILTER_EXT" group="ObjectIdentifier"/>
        <enum value="0x19D2" name="AL_EFFECT_EXT" group="ObjectIdentifier"/>
        <enum value="0x19D3" name="AL_AUXILIARY_EFFECT_SLOT_EXT" group="ObjectIdentifier"/>
        <enum value="0x199D" name="AL_UNPACK_AMBISONIC_ORDER_SOFT" group="BufferInteger,BufferPName">
            <property on="buffer" type="ALint" range="1..=14" default="1"/>
        </enum>
    </enums>

    <enums namespace="ALC">
        <enum value="0" name="ALC_FALSE" group="ContextRequestSOFT" comment="Boolean False."/>
        <enum value="1" name="ALC_TRUE" group="ContextRequestSOFT" comment="Boolean True."/>
        <enum value="0x1007" name="ALC_FREQUENCY" group="ContextPName,ContextInteger,ContextAttribute" comment="Context attribute: &lt;int&gt; Hz."/>
        <enum value="0x1008" name="ALC_REFRESH" group="ContextPName,ContextInteger,ContextAttribute" comment="Context attribute: &lt;int&gt; Hz."/>
        <enum value="0x1009" name="ALC_SYNC" group="ContextPName,ContextBoolean,ContextAttribute" comment="Context attribute: AL_TRUE or AL_FALSE synchronous context?"/>
        <enum value="0x1010" name="ALC_MONO_SOURCES" group="ContextPName,ContextInteger,ContextAttribute" comment="Context attribute: &lt;int&gt; requested Mono (3D) Sources."/>
        <enum value="0x1011" name="ALC_STEREO_SOURCES" group="ContextPName,ContextInteger,ContextAttribute" comment="Context attribute: &lt;int&gt; requested Stereo Sources."/>
        <enum value="0" name="ALC_NO_ERROR" group="ErrorCode" comment="No error."/>
        <enum value="0xA001" name="ALC_INVALID_DEVICE" group="ErrorCode" comment="Invalid device handle."/>
        <enum value="0xA002" name="ALC_INVALID_CONTEXT" group="ErrorCode" comment="Invalid context handle."/>
        <enum value="0xA003" name="ALC_INVALID_ENUM" group="ErrorCode" comment="Invalid enumeration passed to an ALC call."/>
        <enum value="0xA004" name="ALC_INVALID_VALUE" group="ErrorCode" comment="Invalid value passed to an ALC call."/>
        <enum value="0xA005" name="ALC_OUT_OF_MEMORY" group="ErrorCode" comment="Out of memory."/>
        <enum value="0x1000" name="ALC_MAJOR_VERSION" group="ContextPName,ContextInteger" comment="Runtime ALC major version."/>
        <enum value="0x1001" name="ALC_MINOR_VERSION" group="ContextPName,ContextInteger" comment="Runtime ALC minor version."/>
        <enum value="0x1002" name="ALC_ATTRIBUTES_SIZE" group="ContextPName,ContextInteger" comment="Context attribute list size."/>
        <enum value="0x1003" name="ALC_ALL_ATTRIBUTES" group="ContextPName,ContextInteger" comment="Context attribute list properties."/>
        <enum value="0x1004" name="ALC_DEFAULT_DEVICE_SPECIFIER" group="ContextPName,ContextString" comment="String for the default device specifier."/>
        <enum value="0x1005" name="ALC_DEVICE_SPECIFIER" group="ContextPName,ContextString">
            <comment>
                Device specifier string.

                If device handle is NULL, it is instead a null-character separated list of
                strings of known device specifiers (list ends with an empty string).
            </comment>
        </enum>
        <enum value="0x1006" name="ALC_EXTENSIONS" group="ContextPName,ContextString" comment="String for space-separated list of ALC extensions."/>
        <enum value="0x310" name="ALC_CAPTURE_DEVICE_SPECIFIER" group="ContextPName,ContextString">
            <comment>
                Capture specifier string.

                If device handle is NULL, it is instead a null-character separated list of
                strings of known device specifiers (list ends with an empty string).
            </comment>
        </enum>
        <enum value="0x311" name="ALC_CAPTURE_DEFAULT_DEVICE_SPECIFIER" group="ContextPName,ContextString" comment="String for the default capture device specifier."/>
        <enum value="0x312" name="ALC_CAPTURE_SAMPLES" group="ContextPName,ContextInteger" comment="Number of sample frames available for capture."/>
        <enum value="0x1012" name="ALC_DEFAULT_ALL_DEVICES_SPECIFIER" group="ContextPName,ContextString" comment="String for the default extended device specifier."/>
        <enum value="0x1013" name="ALC_ALL_DEVICES_SPECIFIER" group="ContextPName,ContextString">
            <comment>
                Device's extended specifier string.

                If device handle is NULL, it is instead a null-character separated list of
                strings of known extended device specifiers (list ends with an empty string).
            </comment>
        </enum>
        <enum value="0x500001" name="ALC_CHAN_MAIN_LOKI" group="AudioChannelLOKI"/>
        <enum value="0x500002" name="ALC_CHAN_PCM_LOKI" group="AudioChannelLOKI"/>
        <enum value="0x500003" name="ALC_CHAN_CD_LOKI" group="AudioChannelLOKI"/>
        <enum value="0x313" name="ALC_CONNECTED" group="ContextBoolean,ContextPName">
            <property on="context" type="ALCboolean"/>
        </enum>
        <enum value="0x1990" name="ALC_FORMAT_CHANNELS_SOFT" group="ContextAttribute"/>
        <enum value="0x1991" name="ALC_FORMAT_TYPE_SOFT" group="ContextAttribute"/>
        <enum value="0x1400" name="ALC_BYTE_SOFT" group="RenderFormatTypeSOFT"/>
        <enum value="0x1401" name="ALC_UNSIGNED_BYTE_SOFT" group="RenderFormatTypeSOFT"/>
        <enum value="0x1402" name="ALC_SHORT_SOFT" group="RenderFormatTypeSOFT"/>
        <enum value="0x1403" name="ALC_UNSIGNED_SHORT_SOFT" group="RenderFormatTypeSOFT"/>
        <enum value="0x1404" name="ALC_INT_SOFT" group="RenderFormatTypeSOFT"/>
        <enum value="0x1405" name="ALC_UNSIGNED_INT_SOFT" group="RenderFormatTypeSOFT"/>
        <enum value="0x1406" name="ALC_FLOAT_SOFT" group="RenderFormatTypeSOFT"/>
        <enum value="0x20001" name="ALC_EFX_MAJOR_VERSION"/>
        <enum value="0x20002" name="ALC_EFX_MINOR_VERSION"/>
        <enum value="0x20003" name="ALC_MAX_AUXILIARY_SENDS"/>
        <enum value="0x1500" name="ALC_MONO_SOFT" group="RenderFormatChannelSOFT"/>
        <enum value="0x1501" name="ALC_STEREO_SOFT" group="RenderFormatChannelSOFT"/>
        <enum value="0x1503" name="ALC_QUAD_SOFT" group="RenderFormatChannelSOFT"/>
        <enum value="0x1504" name="ALC_5POINT1_SOFT" group="RenderFormatChannelSOFT"/>
        <enum value="0x1505" name="ALC_6POINT1_SOFT" group="RenderFormatChannelSOFT"/>
        <enum value="0x1506" name="ALC_7POINT1_SOFT" group="RenderFormatChannelSOFT"/>
        <enum value="0x1992" name="ALC_HRTF_SOFT" group="ContextAttribute,ContextInteger,ContextPName">
            <property on="context" type="ALCenum" group="ContextRequestSOFT"/>
        </enum>
        <enum value="0x0002" name="ALC_DONT_CARE_SOFT" group="ContextRequestSOFT"/>
        <enum value="0x1993" name="ALC_HRTF_STATUS_SOFT" group="ContextInteger,ContextPName">
            <property on="context" type="ALCenum" group="HrtfStatusSOFT"/>
        </enum>
        <enum value="0x0000" name="ALC_HRTF_DISABLED_SOFT" group="HrtfStatusSOFT"/>
        <enum value="0x0001" name="ALC_HRTF_ENABLED_SOFT" group="HrtfStatusSOFT"/>
        <enum value="0x0002" name="ALC_HRTF_DENIED_SOFT" group="HrtfStatusSOFT"/>
        <enum value="0x0003" name="ALC_HRTF_REQUIRED_SOFT" group="HrtfStatusSOFT"/>
        <enum value="0x0004" name="ALC_HRTF_HEADPHONES_DETECTED_SOFT" group="HrtfStatusSOFT"/>
        <enum value="0x0005" name="ALC_HRTF_UNSUPPORTED_FORMAT_SOFT" group="HrtfStatusSOFT"/>
        <enum value="0x1994" name="ALC_NUM_HRTF_SPECIFIERS_SOFT" group="ContextInteger,ContextPName">
            <property on="context" type="ALCint"/>
        </enum>
        <enum value="0x1995" name="ALC_HRTF_SPECIFIER_SOFT" group="ContextString,ContextPName">
            <property on="context" type="ALCstring"/>
        </enum>
        <enum value="0x1996" name="ALC_HRTF_ID_SOFT" group="ContextAttribute"/>
        <enum value="0x199A" name="ALC_OUTPUT_LIMITER_SOFT" group="ContextAttribute,ContextInteger,ContextPName">
            <property on="context" type="ALCenum" group="ContextRequestSOFT"/>
        </enum>
        <enum value="0x1600" name="ALC_DEVICE_CLOCK_SOFT" group="ContextInteger,ContextPName">
            <property on="context" type="ALCint64SOFT"/>
        </enum>
        <enum value="0x1601" name="ALC_DEVICE_LATENCY_SOFT" group="ContextInteger,ContextPName">
            <property on="context" type="ALCint64SOFT"/>
        </enum>
        <enum value="0x1602" name="ALC_DEVICE_CLOCK_LATENCY_SOFT" group="ContextInteger,ContextPName">
            <property on="context" type="ALCint64SOFT"/>
        </enum>
        <enum value="0x1997" name="ALC_AMBISONIC_LAYOUT_SOFT" group="ContextAttribute"/>
        <enum value="0x1998" name="ALC_AMBISONIC_SCALING_SOFT" group="ContextAttribute"/>
        <enum value="0x1999" name="ALC_AMBISONIC_ORDER_SOFT" group="ContextAttribute"/>
        <enum value="0x199B" name="ALC_MAX_AMBISONIC_ORDER_SOFT" group="ContextInteger,ContextPName">
            <property on="context" type="ALCint"/>
        </enum>
        <enum value="0x1507" name="ALC_BFORMAT3D_SOFT" group="RenderFormatChannelSOFT"/>
        <enum value="0x0000" name="ALC_FUMA_SOFT" group="ContextAmbisonicLayoutSOFT,ContextAmbisonicScalingSOFT"/>
        <enum value="0x0001" name="ALC_ACN_SOFT" group="ContextAmbisonicLayoutSOFT"/>
        <enum value="0x0001" name="ALC_SN3D_SOFT" group="ContextAmbisonicScalingSOFT"/>
        <enum value="0x0002" name="ALC_N3D_SOFT" group="ContextAmbisonicScalingSOFT"/>
        <enum value="0x19AC" name="ALC_OUTPUT_MODE_SOFT" group="ContextAttribute,ContextInteger,ContextPName">
            <property on="context" type="ALCenum" group="OutputModeSOFT" default="ALC_ANY_SOFT"/>
        </enum>
        <enum value="0x19AD" name="ALC_ANY_SOFT" group="OutputModeSOFT"/>
        <enum value="0x19AE" name="ALC_STEREO_BASIC_SOFT" group="OutputModeSOFT"/>
        <enum value="0x19AF" name="ALC_STEREO_UHJ_SOFT" group="OutputModeSOFT"/>
        <enum value="0x19B2" name="ALC_STEREO_HRTF_SOFT" group="OutputModeSOFT"/>
        <enum value="0x1504" name="ALC_SURROUND_5_1_SOFT" group="OutputModeSOFT"/>
        <enum value="0x1505" name="ALC_SURROUND_6_1_SOFT" group="OutputModeSOFT"/>
        <enum value="0x1506" name="ALC_SURROUND_7_1_SOFT" group="OutputModeSOFT"/>
        <enum value="0x19CF" name="ALC_CONTEXT_FLAGS_EXT" group="ContextInteger,ContextPName">
            <property on="context" type="ALCenum" kind="bitmask" group="ContextFlagsEXT"/> 
        </enum>
        <enum value="0x0001" name="ALC_CONTEXT_DEBUG_BIT_EXT" group="ContextFlagsEXT"/>
        <enum value="0x19D4" name="ALC_PLAYBACK_DEVICE_SOFT" group="DeviceTypeSOFT"/>
        <enum value="0x19D5" name="ALC_CAPTURE_DEVICE_SOFT" group="DeviceTypeSOFT"/>
        <enum value="0x19D6" name="ALC_EVENT_TYPE_DEFAULT_DEVICE_CHANGED_SOFT" group="EventTypeSOFT"/>
        <enum value="0x19D7" name="ALC_EVENT_TYPE_DEVICE_ADDED_SOFT" group="EventTypeSOFT"/>
        <enum value="0x19D8" name="ALC_EVENT_TYPE_DEVICE_REMOVED_SOFT" group="EventTypeSOFT"/>
        <enum value="0x19D9" name="ALC_EVENT_SUPPORTED_SOFT" group="EventSupportSOFT"/>
        <enum value="0x19DA" name="ALC_EVENT_NOT_SUPPORTED_SOFT" group="EventSupportSOFT"/>
    </enums>

    <commands namespace="AL">
        <command export="al">
            <proto>void <name>alEnable</name></proto>
            <param group="EnableCap"><ptype>ALenum</ptype> <name>capability</name></param>
        </command>
        <command export="al">
            <proto>void <name>alDisable</name></proto>
            <param group="EnableCap"><ptype>ALenum</ptype> <name>capability</name></param>
        </command>
        <command export="al">
            <proto>ALboolean <name>alIsEnabled</name></proto>
            <param group="EnableCap"><ptype>ALenum</ptype> <name>capability</name></param>
        </command>
        <command export="al">
            <proto>void <name>alDopplerFactor</name></proto>
            <param><ptype>ALfloat</ptype> <name>value</name></param>
        </command>
        <command export="al">
            <proto>void <name>alDopplerVelocity</name></proto>
            <param><ptype>ALfloat</ptype> <name>value</name></param>
        </command>
        <command export="al">
            <proto>void <name>alSpeedOfSound</name></proto>
            <param><ptype>ALfloat</ptype> <name>value</name></param>
        </command>
        <command export="al">
            <proto>void <name>alDistanceModel</name></proto>
            <param group="DistanceModel"><ptype>ALenum</ptype> <name>distanceModel</name></param>
        </command>
        <command export="al">
            <proto>const <ptype>ALchar</ptype>* <name>alGetString</name></proto>
            <param group="StringPName"><ptype>ALenum</ptype> <name>param</name></param>
        </command>
        <command export="al">
            <proto>void <name>alGetBooleanv</name></proto>
            <param group="BooleanPName"><ptype>ALenum</ptype> <name>param</name></param>
            <param><ptype>ALboolean</ptype> *<name>values</name></param>
        </command>
        <command export="al">
            <proto>void <name>alGetIntegerv</name></proto>
            <param group="IntegerPName"><ptype>ALenum</ptype> <name>param</name></param>
            <param><ptype>ALint</ptype> *<name>values</name></param>
        </command>
        <command export="al">
            <proto>void <name>alGetFloatv</name></proto>
            <param group="GetPName"><ptype>ALenum</ptype> <name>param</name></param>
            <param><ptype>ALfloat</ptype> *<name>values</name></param>
        </command>
        <command export="al">
            <proto>void <name>alGetDoublev</name></proto>
            <param group="GetPName"><ptype>ALenum</ptype> <name>param</name></param>
            <param><ptype>ALdouble</ptype> *<name>values</name></param>
        </command>
        <command export="al">
            <proto><ptype>ALboolean</ptype> <name>alGetBoolean</name></proto>
            <param group="BooleanPName"><ptype>ALenum</ptype> <name>param</name></param>
        </command>
        <command export="al">
            <proto><ptype>ALint</ptype> <name>alGetInteger</name></proto>
            <param group="IntegerPName"><ptype>ALenum</ptype> <name>param</name></param>
        </command>
        <command export="al">
            <proto><ptype>ALfloat</ptype> <name>alGetFloat</name></proto>
            <param group="FloatPName"><ptype>ALenum</ptype> <name>param</name></param>
        </command>
        <command export="al">
            <proto><ptype>ALdouble</ptype> <name>alGetDouble</name></proto>
            <param group="GetPName"><ptype>ALenum</ptype> <name>param</name></param>
        </command>
        <command export="al">
            <comment>
                Obtain the first error generated in the AL context since the last call to
                this function.
            </comment>
            <proto group="ErrorCode"><ptype>ALenum</ptype> <name>alGetError</name></proto>
        </command>
        <command export="al" comment="Query for the presence of an extension on the AL context.">
            <proto><ptype>ALboolean</ptype> <name>alIsExtensionPresent</name></proto>
            <param>const <ptype>ALchar</ptype> *<name>extname</name></param>
        </command>
        <command export="al">
            <comment>
                Retrieve the address of a function. The returned function may be context-
                specific.
            </comment>
            <proto>void* <name>alGetProcAddress</name></proto>
            <param>const <ptype>ALchar</ptype> *<name>fname</name></param>
        </command>
        <command export="al">
            <comment>Retrieve the value of an enum. The returned value may be context-specific.</comment>
            <proto><ptype>ALenum</ptype> <name>alGetEnumValue</name></proto>
            <param>const <ptype>ALchar</ptype> *<name>ename</name></param>
        </command>
        <command export="al">
            <proto>void <name>alListenerf</name></proto>
            <param group="ListenerFloat"><ptype>ALenum</ptype> <name>param</name></param>
            <param><ptype>ALfloat</ptype> <name>value</name></param>
        </command>
        <command export="al">
            <proto>void <name>alListener3f</name></proto>
            <param group="ListenerFloat3"><ptype>ALenum</ptype> <name>param</name></param>
            <param><ptype>ALfloat</ptype> <name>value1</name></param>
            <param><ptype>ALfloat</ptype> <name>value2</name></param>
            <param><ptype>ALfloat</ptype> <name>value3</name></param>
        </command>
        <command export="al">
            <proto>void <name>alListenerfv</name></proto>
            <param group="ListenerFloat"><ptype>ALenum</ptype> <name>param</name></param>
            <param>const <ptype>ALfloat</ptype> *<name>values</name></param>
        </command>
        <command export="al">
            <proto>void <name>alListeneri</name></proto>
            <param group="ListenerInteger"><ptype>ALenum</ptype> <name>param</name></param>
            <param><ptype>ALint</ptype> <name>value</name></param>
        </command>
        <command export="al">
            <proto>void <name>alListener3i</name></proto>
            <param group="ListenerInteger3"><ptype>ALenum</ptype> <name>param</name></param>
            <param><ptype>ALint</ptype> <name>value1</name></param>
            <param><ptype>ALint</ptype> <name>value2</name></param>
            <param><ptype>ALint</ptype> <name>value3</name></param>
        </command>
        <command export="al">
            <proto>void <name>alListeneriv</name></proto>
            <param group="ListenerInteger"><ptype>ALenum</ptype> <name>param</name></param>
            <param>const <ptype>ALint</ptype> *<name>values</name></param>
        </command>
        <command export="al">
            <proto>void <name>alGetListenerf</name></proto>
            <param group="ListenerFloat"><ptype>ALenum</ptype> <name>param</name></param>
            <param><ptype>ALfloat</ptype> *<name>value</name></param>
        </command>
        <command export="al">
            <proto>void <name>alGetListener3f</name></proto>
            <param group="ListenerFloat3"><ptype>ALenum</ptype> <name>param</name></param>
            <param><ptype>ALfloat</ptype> *<name>value1</name></param>
            <param><ptype>ALfloat</ptype> *<name>value2</name></param>
            <param><ptype>ALfloat</ptype> *<name>value3</name></param>
        </command>
        <command export="al">
            <proto>void <name>alGetListenerfv</name></proto>
            <param group="ListenerFloat"><ptype>ALenum</ptype> <name>param</name></param>
            <param><ptype>ALfloat</ptype> *<name>values</name></param>
        </command>
        <command export="al">
            <proto>void <name>alGetListeneri</name></proto>
            <param group="ListenerInteger"><ptype>ALenum</ptype> <name>param</name></param>
            <param><ptype>ALint</ptype> *<name>value</name></param>
        </command>
        <command export="al">
            <proto>void <name>alGetListener3i</name></proto>
            <param group="ListenerInteger3"><ptype>ALenum</ptype> <name>param</name></param>
            <param><ptype>ALint</ptype> *<name>value1</name></param>
            <param><ptype>ALint</ptype> *<name>value2</name></param>
            <param><ptype>ALint</ptype> *<name>value3</name></param>
        </command>
        <command export="al">
            <proto>void <name>alGetListeneriv</name></proto>
            <param group="ListenerInteger"><ptype>ALenum</ptype> <name>param</name></param>
            <param><ptype>ALint</ptype> *<name>values</name></param>
        </command>
        <command export="al" comment="Create source objects.">
            <proto>void <name>alGenSources</name></proto>
            <param><ptype>ALsizei</ptype> <name>n</name></param>
            <param len="n" class="source"><ptype>ALuint</ptype> *<name>sources</name></param>
        </command>
        <command export="al" comment="Delete source objects.">
            <proto>void <name>alDeleteSources</name></proto>
            <param><ptype>ALsizei</ptype> <name>n</name></param>
            <param len="n" class="source">const <ptype>ALuint</ptype> *<name>sources</name></param>
        </command>
        <command export="al" comment="Verify an ID is for a valid source.">
            <proto><ptype>ALboolean</ptype> <name>alIsSource</name></proto>
            <param><ptype>ALuint</ptype> <name>source</name></param>
        </command>
        <command export="al">
            <proto>void <name>alSourcef</name></proto>
            <param class="source"><ptype>ALuint</ptype> <name>source</name></param>
            <param group="SourceFloat"><ptype>ALenum</ptype> <name>param</name></param>
            <param><ptype>ALfloat</ptype> <name>value</name></param>
        </command>
        <command export="al">
            <proto>void <name>alSource3f</name></proto>
            <param class="source"><ptype>ALuint</ptype> <name>source</name></param>
            <param group="SourceFloat3"><ptype>ALenum</ptype> <name>param</name></param>
            <param><ptype>ALfloat</ptype> <name>value1</name></param>
            <param><ptype>ALfloat</ptype> <name>value2</name></param>
            <param><ptype>ALfloat</ptype> <name>value3</name></param>
        </command>
        <command export="al">
            <proto>void <name>alSourcefv</name></proto>
            <param class="source"><ptype>ALuint</ptype> <name>source</name></param>
            <param group="SourceFloat"><ptype>ALenum</ptype> <name>param</name></param>
            <param>const <ptype>ALfloat</ptype> *<name>values</name></param>
        </command>
        <command export="al">
            <proto>void <name>alSourcei</name></proto>
            <param class="source"><ptype>ALuint</ptype> <name>source</name></param>
            <param group="SourceInteger"><ptype>ALenum</ptype> <name>param</name></param>
            <param><ptype>ALint</ptype> <name>value</name></param>
        </command>
        <command export="al">
            <proto>void <name>alSource3i</name></proto>
            <param class="source"><ptype>ALuint</ptype> <name>source</name></param>
            <param group="SourceInteger3"><ptype>ALenum</ptype> <name>param</name></param>
            <param><ptype>ALint</ptype> <name>value1</name></param>
            <param><ptype>ALint</ptype> <name>value2</name></param>
            <param><ptype>ALint</ptype> <name>value3</name></param>
        </command>
        <command export="al">
            <proto>void <name>alSourceiv</name></proto>
            <param class="source"><ptype>ALuint</ptype> <name>source</name></param>
            <param group="SourceInteger"><ptype>ALenum</ptype> <name>param</name></param>
            <param>const <ptype>ALint</ptype> *<name>values</name></param>
        </command>
        <command export="al">
            <proto>void <name>alGetSourcef</name></proto>
            <param class="source"><ptype>ALuint</ptype> <name>source</name></param>
            <param group="SourceFloat"><ptype>ALenum</ptype> <name>param</name></param>
            <param><ptype>ALfloat</ptype> *<name>value</name></param>
        </command>
        <command export="al">
            <proto>void <name>alGetSourcefv</name></proto>
            <param class="source"><ptype>ALuint</ptype> <name>source</name></param>
            <param group="SourceFloat"><ptype>ALenum</ptype> <name>param</name></param>
            <param><ptype>ALfloat</ptype> *<name>values</name></param>
        </command>
        <command export="al">
            <proto>void <name>alGetSourcei</name></proto>
            <param class="source"><ptype>ALuint</ptype> <name>source</name></param>
            <param group="SourceInteger"><ptype>ALenum</ptype> <name>param</name></param>
            <param><ptype>ALint</ptype> *<name>value</name></param>
        </command>
        <command export="al">
            <proto>void <name>alGetSourceiv</name></proto>
            <param class="source"><ptype>ALuint</ptype> <name>source</name></param>
            <param group="SourceInteger"><ptype>ALenum</ptype> <name>param</name></param>
            <param><ptype>ALint</ptype> *<name>values</name></param>
        </command>
        <command export="al">
            <proto>void <name>alGetSource3i</name></proto>
            <param class="source"><ptype>ALuint</ptype> <name>source</name></param>
            <param group="SourceInteger3"><ptype>ALenum</ptype> <name>param</name></param>
            <param><ptype>ALint</ptype> *<name>value1</name></param>
            <param><ptype>ALint</ptype> *<name>value2</name></param>
            <param><ptype>ALint</ptype> *<name>value3</name></param>
        </command>
        <command export="al">
            <proto>void <name>alGetSource3f</name></proto>
            <param class="source"><ptype>ALuint</ptype> <name>source</name></param>
            <param group="SourceFloat3"><ptype>ALenum</ptype> <name>param</name></param>
            <param><ptype>ALfloat</ptype> *<name>value1</name></param>
            <param><ptype>ALfloat</ptype> *<name>value2</name></param>
            <param><ptype>ALfloat</ptype> *<name>value3</name></param>
        </command>
        <command export="al" comment="Play, restart, or resume a source, setting its state to AL_PLAYING.">
            <proto>void <name>alSourcePlay</name></proto>
            <param class="source"><ptype>ALuint</ptype> <name>source</name></param>
        </command>
        <command export="al" comment="Stop a source, setting its state to AL_STOPPED if playing or paused.">
            <proto>void <name>alSourceStop</name></proto>
            <param class="source"><ptype>ALuint</ptype> <name>source</name></param>
        </command>
        <command export="al" comment="Rewind a source, setting its state to AL_INITIAL.">
            <proto>void <name>alSourceRewind</name></proto>
            <param class="source"><ptype>ALuint</ptype> <name>source</name></param>
        </command>
        <command export="al" comment="Pause a source, setting its state to AL_PAUSED if playing.">
            <proto>void <name>alSourcePause</name></proto>
            <param class="source"><ptype>ALuint</ptype> <name>source</name></param>
        </command>
        <command export="al" comment="Play, restart, or resume a list of sources atomically.">
            <proto>void <name>alSourcePlayv</name></proto>
            <param><ptype>ALsizei</ptype> <name>n</name></param>
            <param len="n" class="source">const <ptype>ALuint</ptype> *<name>sources</name></param>
        </command>
        <command export="al" comment="Stop a list of sources atomically.">
            <proto>void <name>alSourceStopv</name></proto>
            <param><ptype>ALsizei</ptype> <name>n</name></param>
            <param len="n" class="source">const <ptype>ALuint</ptype> *<name>sources</name></param>
        </command>
        <command export="al" comment="Rewind a list of sources atomically.">
            <proto>void <name>alSourceRewindv</name></proto>
            <param><ptype>ALsizei</ptype> <name>n</name></param>
            <param len="n" class="source">const <ptype>ALuint</ptype> *<name>sources</name></param>
        </command>
        <command export="al" comment="Pause a list of sources atomically.">
            <proto>void <name>alSourcePausev</name></proto>
            <param><ptype>ALsizei</ptype> <name>n</name></param>
            <param len="n" class="source">const <ptype>ALuint</ptype> *<name>sources</name></param>
        </command>
        <command export="al" comment="Queue buffers onto a source">
            <proto>void <name>alSourceQueueBuffers</name></proto>
            <param class="source"><ptype>ALuint</ptype> <name>source</name></param>
            <param><ptype>ALsizei</ptype> <name>nb</name></param>
            <param class="buffer">const <ptype>ALuint</ptype> *<name>buffers</name></param>
        </command>
        <command export="al" comment="Unqueue processed buffers from a source">
            <proto>void <name>alSourceUnqueueBuffers</name></proto>
            <param class="source"><ptype>ALuint</ptype> <name>source</name></param>
            <param><ptype>ALsizei</ptype> <name>nb</name></param>
            <param class="buffer"><ptype>ALuint</ptype> *<name>buffers</name></param>
        </command>
        <command export="al" comment="Create buffer objects">
            <proto>void <name>alGenBuffers</name></proto>
            <param><ptype>ALsizei</ptype> <name>n</name></param>
            <param class="buffer"><ptype>ALuint</ptype> *<name>buffers</name></param>
        </command>
        <command export="al" comment="Delete buffer objects">
            <proto>void <name>alDeleteBuffers</name></proto>
            <param><ptype>ALsizei</ptype> <name>n</name></param>
            <param class="buffer">const <ptype>ALuint</ptype> *<name>buffers</name></param>
        </command>
        <command export="al" comment="Verify an ID is a valid buffer (including the NULL buffer)">
            <proto><ptype>ALboolean</ptype> <name>alIsBuffer</name></proto>
            <param class="buffer"><ptype>ALuint</ptype> <name>buffer</name></param>
        </command>
        <command export="al">
            <comment>
                Copies data into the buffer, interpreting it using the specified format and
                samplerate.
            </comment>
            <proto>void <name>alBufferData</name></proto>
            <param class="buffer"><ptype>ALuint</ptype> <name>buffer</name></param>
            <param group="Format"><ptype>ALenum</ptype> <name>format</name></param>
            <param len="size">const <ptype>ALvoid</ptype> *<name>data</name></param>
            <param><ptype>ALsizei</ptype> <name>size</name></param>
            <param><ptype>ALsizei</ptype> <name>samplerate</name></param>
        </command>
        <command export="al">
            <proto>void <name>alBufferf</name></proto>
            <param class="buffer"><ptype>ALuint</ptype> <name>buffer</name></param>
            <param group="BufferFloat"><ptype>ALenum</ptype> <name>param</name></param>
            <param><ptype>ALfloat</ptype> <name>value</name></param>
        </command>
        <command export="al">
            <proto>void <name>alBuffer3f</name></proto>
            <param class="buffer"><ptype>ALuint</ptype> <name>buffer</name></param>
            <param group="BufferFloat3"><ptype>ALenum</ptype> <name>param</name></param>
            <param><ptype>ALfloat</ptype> <name>value1</name></param>
            <param><ptype>ALfloat</ptype> <name>value2</name></param>
            <param><ptype>ALfloat</ptype> <name>value3</name></param>
        </command>
        <command export="al">
            <proto>void <name>alBufferfv</name></proto>
            <param class="buffer"><ptype>ALuint</ptype> <name>buffer</name></param>
            <param group="BufferFloat"><ptype>ALenum</ptype> <name>param</name></param>
            <param>const <ptype>ALfloat</ptype> *<name>values</name></param>
        </command>
        <command export="al">
            <proto>void <name>alBufferi</name></proto>
            <param class="buffer"><ptype>ALuint</ptype> <name>buffer</name></param>
            <param group="BufferInteger"><ptype>ALenum</ptype> <name>param</name></param>
            <param><ptype>ALint</ptype> <name>value</name></param>
        </command>
        <command export="al">
            <proto>void <name>alBuffer3i</name></proto>
            <param class="buffer"><ptype>ALuint</ptype> <name>buffer</name></param>
            <param group="BufferInteger3"><ptype>ALenum</ptype> <name>param</name></param>
            <param><ptype>ALint</ptype> <name>value1</name></param>
            <param><ptype>ALint</ptype> <name>value2</name></param>
            <param><ptype>ALint</ptype> <name>value3</name></param>
        </command>
        <command export="al">
            <proto>void <name>alBufferiv</name></proto>
            <param class="buffer"><ptype>ALuint</ptype> <name>buffer</name></param>
            <param group="BufferInteger"><ptype>ALenum</ptype> <name>param</name></param>
            <param>const <ptype>ALint</ptype> *<name>values</name></param>
        </command>
        <command export="al">
            <proto>void <name>alGetBufferf</name></proto>
            <param class="buffer"><ptype>ALuint</ptype> <name>buffer</name></param>
            <param group="BufferFloat"><ptype>ALenum</ptype> <name>param</name></param>
            <param><ptype>ALfloat</ptype> *<name>value</name></param>
        </command>
        <command export="al">
            <proto>void <name>alGetBufferfv</name></proto>
            <param class="buffer"><ptype>ALuint</ptype> <name>buffer</name></param>
            <param group="BufferFloat"><ptype>ALenum</ptype> <name>param</name></param>
            <param><ptype>ALfloat</ptype> *<name>values</name></param>
        </command>
        <command export="al">
            <proto>void <name>alGetBufferi</name></proto>
            <param class="buffer"><ptype>ALuint</ptype> <name>buffer</name></param>
            <param group="BufferInteger"><ptype>ALenum</ptype> <name>param</name></param>
            <param><ptype>ALint</ptype> *<name>value</name></param>
        </command>
        <command export="al">
            <proto>void <name>alGetBufferiv</name></proto>
            <param class="buffer"><ptype>ALuint</ptype> <name>buffer</name></param>
            <param group="BufferInteger"><ptype>ALenum</ptype> <name>param</name></param>
            <param><ptype>ALint</ptype> *<name>values</name></param>
        </command>
        <command export="al">
            <proto>void <name>alGetBuffer3i</name></proto>
            <param class="buffer"><ptype>ALuint</ptype> <name>buffer</name></param>
            <param group="BufferInteger3"><ptype>ALenum</ptype> <name>param</name></param>
            <param><ptype>ALint</ptype> *<name>value1</name></param>
            <param><ptype>ALint</ptype> *<name>value2</name></param>
            <param><ptype>ALint</ptype> *<name>value3</name></param>
        </command>
        <command export="al">
            <proto>void <name>alGetBuffer3f</name></proto>
            <param class="buffer"><ptype>ALuint</ptype> <name>buffer</name></param>
            <param group="BufferFloat3"><ptype>ALenum</ptype> <name>param</name></param>
            <param><ptype>ALfloat</ptype> *<name>value1</name></param>
            <param><ptype>ALfloat</ptype> *<name>value2</name></param>
            <param><ptype>ALfloat</ptype> *<name>value3</name></param>
        </command>
        <command funcpointer="PFNALBUFFERDATASTATICPROC">
            <proto>void <name>alBufferDataStatic</name></proto>
            <param class="buffer">const <ptype>ALuint</ptype> <name>buffer</name></param>
            <param group="Format"><ptype>ALenum</ptype> <name>format</name></param>
            <param len="size"><ptype>ALvoid</ptype> *<name>data</name></param>
            <param><ptype>ALsizei</ptype> <name>size</name></param>
            <param><ptype>ALsizei</ptype> <name>freq</name></param>
        </command>
        <command>
            <proto>void <name>alGenEffects</name></proto>
            <param><ptype>ALsizei</ptype> <name>n</name></param>
            <param len="n" class="effect"><ptype>ALuint</ptype> *<name>effects</name></param>
        </command>
        <command>
            <proto>void <name>alDeleteEffects</name></proto>
            <param><ptype>ALsizei</ptype> <name>n</name></param>
            <param len="n" class="effect">const <ptype>ALuint</ptype> *<name>effects</name></param>
        </command>
        <command>
            <proto><ptype>ALboolean</ptype> <name>alIsEffect</name></proto>
            <param><ptype>ALuint</ptype> <name>effect</name></param>
        </command>
        <command>
            <proto>void <name>alEffecti</name></proto>
            <param class="effect"><ptype>ALuint</ptype> <name>effect</name></param>
            <param group="EffectInteger"><ptype>ALenum</ptype> <name>param</name></param>
            <param><ptype>ALint</ptype> <name>iValue</name></param>
        </command>
        <command>
            <proto>void <name>alEffectiv</name></proto>
            <param class="effect"><ptype>ALuint</ptype> <name>effect</name></param>
            <param group="EffectInteger"><ptype>ALenum</ptype> <name>param</name></param>
            <param>const <ptype>ALint</ptype> *<name>piValues</name></param>
        </command>
        <command>
            <proto>void <name>alEffectf</name></proto>
            <param class="effect"><ptype>ALuint</ptype> <name>effect</name></param>
            <param group="EffectFloat"><ptype>ALenum</ptype> <name>param</name></param>
            <param><ptype>ALfloat</ptype> <name>flValue</name></param>
        </command>
        <command>
            <proto>void <name>alEffectfv</name></proto>
            <param class="effect"><ptype>ALuint</ptype> <name>effect</name></param>
            <param group="EffectFloat"><ptype>ALenum</ptype> <name>param</name></param>
            <param>const <ptype>ALfloat</ptype> *<name>pflValues</name></param>
        </command>
        <command>
            <proto>void <name>alGetEffecti</name></proto>
            <param class="effect"><ptype>ALuint</ptype> <name>effect</name></param>
            <param group="EffectInteger"><ptype>ALenum</ptype> <name>param</name></param>
            <param><ptype>ALint</ptype> *<name>iValue</name></param>
        </command>
        <command>
            <proto>void <name>alGetEffectiv</name></proto>
            <param class="effect"><ptype>ALuint</ptype> <name>effect</name></param>
            <param group="EffectInteger"><ptype>ALenum</ptype> <name>param</name></param>
            <param><ptype>ALint</ptype> *<name>piValues</name></param>
        </command>
        <command>
            <proto>void <name>alGetEffectf</name></proto>
            <param class="effect"><ptype>ALuint</ptype> <name>effect</name></param>
            <param group="EffectFloat"><ptype>ALenum</ptype> <name>param</name></param>
            <param><ptype>ALfloat</ptype> *<name>flValue</name></param>
        </command>
        <command>
            <proto>void <name>alGetEffectfv</name></proto>
            <param class="effect"><ptype>ALuint</ptype> <name>effect</name></param>
            <param group="EffectFloat"><ptype>ALenum</ptype> <name>param</name></param>
            <param><ptype>ALfloat</ptype> *<name>pflValues</name></param>
        </command>
        <command>
            <proto>void <name>alGenFilters</name></proto>
            <param><ptype>ALsizei</ptype> <name>n</name></param>
            <param len="n" class="filter"><ptype>ALuint</ptype> *<name>filters</name></param>
        </command>
        <command>
            <proto>void <name>alDeleteFilters</name></proto>
            <param><ptype>ALsizei</ptype> <name>n</name></param>
            <param len="n" class="filter">const <ptype>ALuint</ptype> *<name>filters</name></param>
        </command>
        <command>
            <proto><ptype>ALboolean</ptype> <name>alIsFilter</name></proto>
            <param><ptype>ALuint</ptype> <name>filter</name></param>
        </command>
        <command>
            <proto>void <name>alFilteri</name></proto>
            <param class="filter"><ptype>ALuint</ptype> <name>filter</name></param>
            <param group="FilterInteger"><ptype>ALenum</ptype> <name>param</name></param>
            <param><ptype>ALint</ptype> <name>iValue</name></param>
        </command>
        <command>
            <proto>void <name>alFilteriv</name></proto>
            <param class="filter"><ptype>ALuint</ptype> <name>filter</name></param>
            <param group="FilterInteger"><ptype>ALenum</ptype> <name>param</name></param>
            <param>const <ptype>ALint</ptype> *<name>piValues</name></param>
        </command>
        <command>
            <proto>void <name>alFilterf</name></proto>
            <param class="filter"><ptype>ALuint</ptype> <name>filter</name></param>
            <param group="FilterFloat"><ptype>ALenum</ptype> <name>param</name></param>
            <param><ptype>ALfloat</ptype> <name>flValue</name></param>
        </command>
        <command>
            <proto>void <name>alFilterfv</name></proto>
            <param class="filter"><ptype>ALuint</ptype> <name>filter</name></param>
            <param group="FilterFloat"><ptype>ALenum</ptype> <name>param</name></param>
            <param>const <ptype>ALfloat</ptype> *<name>pflValues</name></param>
        </command>
        <command>
            <proto>void <name>alGetFilteri</name></proto>
            <param class="filter"><ptype>ALuint</ptype> <name>filter</name></param>
            <param group="FilterInteger"><ptype>ALenum</ptype> <name>param</name></param>
            <param><ptype>ALint</ptype> *<name>iValue</name></param>
        </command>
        <command>
            <proto>void <name>alGetFilteriv</name></proto>
            <param class="filter"><ptype>ALuint</ptype> <name>filter</name></param>
            <param group="FilterInteger"><ptype>ALenum</ptype> <name>param</name></param>
            <param><ptype>ALint</ptype> *<name>piValues</name></param>
        </command>
        <command>
            <proto>void <name>alGetFilterf</name></proto>
            <param class="filter"><ptype>ALuint</ptype> <name>filter</name></param>
            <param group="FilterFloat"><ptype>ALenum</ptype> <name>param</name></param>
            <param><ptype>ALfloat</ptype> *<name>flValue</name></param>
        </command>
        <command>
            <proto>void <name>alGetFilterfv</name></proto>
            <param class="filter"><ptype>ALuint</ptype> <name>filter</name></param>
            <param group="FilterFloat"><ptype>ALenum</ptype> <name>param</name></param>
            <param><ptype>ALfloat</ptype> *<name>pflValues</name></param>
        </command>
        <command>
            <proto>void <name>alGenAuxiliaryEffectSlots</name></proto>
            <param><ptype>ALsizei</ptype> <name>n</name></param>
            <param len="n" class="auxiliary effect slot"><ptype>ALuint</ptype> *<name>effectslots</name></param>
        </command>
        <command>
            <proto>void <name>alDeleteAuxiliaryEffectSlots</name></proto>
            <param><ptype>ALsizei</ptype> <name>n</name></param>
            <param len="n" class="auxiliary effect slot">const <ptype>ALuint</ptype> *<name>effectslots</name></param>
        </command>
        <command>
            <proto><ptype>ALboolean</ptype> <name>alIsAuxiliaryEffectSlot</name></proto>
            <param><ptype>ALuint</ptype> <name>effectslot</name></param>
        </command>
        <command>
            <proto>void <name>alAuxiliaryEffectSloti</name></proto>
            <param class="auxiliary effect slot"><ptype>ALuint</ptype> <name>effectslot</name></param>
            <param group="AuxiliaryEffectSlotInteger"><ptype>ALenum</ptype> <name>param</name></param>
            <param><ptype>ALint</ptype> <name>iValue</name></param>
        </command>
        <command>
            <proto>void <name>alAuxiliaryEffectSlotiv</name></proto>
            <param class="auxiliary effect slot"><ptype>ALuint</ptype> <name>effectslot</name></param>
            <param group="AuxiliaryEffectSlotInteger"><ptype>ALenum</ptype> <name>param</name></param>
            <param>const <ptype>ALint</ptype> *<name>piValues</name></param>
        </command>
        <command>
            <proto>void <name>alAuxiliaryEffectSlotf</name></proto>
            <param class="auxiliary effect slot"><ptype>ALuint</ptype> <name>effectslot</name></param>
            <param group="AuxiliaryEffectSlotFloat"><ptype>ALenum</ptype> <name>param</name></param>
            <param><ptype>ALfloat</ptype> <name>flValue</name></param>
        </command>
        <command>
            <proto>void <name>alAuxiliaryEffectSlotfv</name></proto>
            <param class="auxiliary effect slot"><ptype>ALuint</ptype> <name>effectslot</name></param>
            <param group="AuxiliaryEffectSlotFloat"><ptype>ALenum</ptype> <name>param</name></param>
            <param>const <ptype>ALfloat</ptype> *<name>pflValues</name></param>
        </command>
        <command>
            <proto>void <name>alGetAuxiliaryEffectSloti</name></proto>
            <param class="auxiliary effect slot"><ptype>ALuint</ptype> <name>effectslot</name></param>
            <param group="AuxiliaryEffectSlotInteger"><ptype>ALenum</ptype> <name>param</name></param>
            <param><ptype>ALint</ptype> *<name>iValue</name></param>
        </command>
        <command>
            <proto>void <name>alGetAuxiliaryEffectSlotiv</name></proto>
            <param class="auxiliary effect slot"><ptype>ALuint</ptype> <name>effectslot</name></param>
            <param group="AuxiliaryEffectSlotInteger"><ptype>ALenum</ptype> <name>param</name></param>
            <param><ptype>ALint</ptype> *<name>piValues</name></param>
        </command>
        <command>
            <proto>void <name>alGetAuxiliaryEffectSlotf</name></proto>
            <param class="auxiliary effect slot"><ptype>ALuint</ptype> <name>effectslot</name></param>
            <param group="AuxiliaryEffectSlotFloat"><ptype>ALenum</ptype> <name>param</name></param>
            <param><ptype>ALfloat</ptype> *<name>flValue</name></param>
        </command>
        <command>
            <proto>void <name>alGetAuxiliaryEffectSlotfv</name></proto>
            <param class="auxiliary effect slot"><ptype>ALuint</ptype> <name>effectslot</name></param>
            <param group="AuxiliaryEffectSlotFloat"><ptype>ALenum</ptype> <name>param</name></param>
            <param><ptype>ALfloat</ptype> *<name>pflValues</name></param>
        </command>
        <command export="al" funcpointer="PFNALBUFFERSUBDATASOFTPROC">
            <proto>void <name>alBufferSubDataSOFT</name></proto>
            <param class="buffer"><ptype>ALuint</ptype> <name>buffer</name></param>
            <param group="Format"><ptype>ALenum</ptype> <name>format</name></param>
            <param len="size">const <ptype>ALvoid</ptype> *<name>data</name></param>
            <param><ptype>ALsizei</ptype> <name>offset</name></param>
            <param><ptype>ALsizei</ptype> <name>length</name></param>
        </command>
        <command export="al">
            <proto>void <name>alRequestFoldbackStart</name></proto>
            <param><ptype>ALenum</ptype> <name>mode</name></param>
            <param><ptype>ALsizei</ptype> <name>count</name></param>
            <param><ptype>ALsizei</ptype> <name>length</name></param>
            <param><ptype>ALfloat</ptype> *<name>mem</name></param>
            <param><ptype>LPALFOLDBACKCALLBACK</ptype> <name>callback</name></param>
        </command>
        <command export="al">
            <proto>void <name>alRequestFoldbackStop</name></proto>
        </command>
        <command export="al">
            <proto>void <name>alBufferSamplesSOFT</name></proto>
            <param class="buffer"><ptype>ALuint</ptype> <name>buffer</name></param>
            <param><ptype>ALuint</ptype> <name>samplerate</name></param>
            <param group="InternalFormat"><ptype>ALenum</ptype> <name>internalformat</name></param>
            <param><ptype>ALsizei</ptype> <name>samples</name></param>
            <param group="BufferChannelsSOFT"><ptype>ALenum</ptype> <name>channels</name></param>
            <param group="SampleTypeSOFT"><ptype>ALenum</ptype> <name>type</name></param>
            <param>const <ptype>ALvoid</ptype> *<name>data</name></param>
        </command>
        <command export="al">
            <proto>void <name>alBufferSubSamplesSOFT</name></proto>
            <param class="buffer"><ptype>ALuint</ptype> <name>buffer</name></param>
            <param><ptype>ALsizei</ptype> <name>offset</name></param>
            <param><ptype>ALsizei</ptype> <name>samples</name></param>
            <param group="BufferChannelsSOFT"><ptype>ALenum</ptype> <name>channels</name></param>
            <param group="SampleTypeSOFT"><ptype>ALenum</ptype> <name>type</name></param>
            <param>const <ptype>ALvoid</ptype> *<name>data</name></param>
        </command>
        <command export="al">
            <proto>void <name>alGetBufferSamplesSOFT</name></proto>
            <param class="buffer"><ptype>ALuint</ptype> <name>buffer</name></param>
            <param><ptype>ALsizei</ptype> <name>offset</name></param>
            <param><ptype>ALsizei</ptype> <name>samples</name></param>
            <param group="BufferChannelsSOFT"><ptype>ALenum</ptype> <name>channels</name></param>
            <param group="SampleTypeSOFT"><ptype>ALenum</ptype> <name>type</name></param>
            <param><ptype>ALvoid</ptype> *<name>data</name></param>
        </command>
        <command export="al">
            <proto><ptype>ALboolean</ptype> <name>alIsBufferFormatSupportedSOFT</name></proto>
            <param group="InternalFormat"><ptype>ALenum</ptype> <name>format</name></param>
        </command>
        <command export="al">
            <proto>void <name>alSourcedSOFT</name></proto>
            <param class="source"><ptype>ALuint</ptype> <name>source</name></param>
            <param group="SourceDouble"><ptype>ALenum</ptype> <name>param</name></param>
            <param><ptype>ALdouble</ptype> <name>value</name></param>
        </command>
        <command export="al">
            <proto>void <name>alSource3dSOFT</name></proto>
            <param class="source"><ptype>ALuint</ptype> <name>source</name></param>
            <param group="SourceDouble3"><ptype>ALenum</ptype> <name>param</name></param>
            <param><ptype>ALdouble</ptype> <name>value1</name></param>
            <param><ptype>ALdouble</ptype> <name>value2</name></param>
            <param><ptype>ALdouble</ptype> <name>value3</name></param>
        </command>
        <command export="al">
            <proto>void <name>alSourcedvSOFT</name></proto>
            <param class="source"><ptype>ALuint</ptype> <name>source</name></param>
            <param group="SourceDouble"><ptype>ALenum</ptype> <name>param</name></param>
            <param>const <ptype>ALdouble</ptype> *<name>values</name></param>
        </command>
        <command export="al">
            <proto>void <name>alGetSourcedSOFT</name></proto>
            <param class="source"><ptype>ALuint</ptype> <name>source</name></param>
            <param group="SourceDouble"><ptype>ALenum</ptype> <name>param</name></param>
            <param><ptype>ALdouble</ptype> *<name>value</name></param>
        </command>
        <command export="al">
            <proto>void <name>alGetSource3dSOFT</name></proto>
            <param class="source"><ptype>ALuint</ptype> <name>source</name></param>
            <param group="SourceDouble3"><ptype>ALenum</ptype> <name>param</name></param>
            <param><ptype>ALdouble</ptype> *<name>value1</name></param>
            <param><ptype>ALdouble</ptype> *<name>value2</name></param>
            <param><ptype>ALdouble</ptype> *<name>value3</name></param>
        </command>
        <command export="al">
            <proto>void <name>alGetSourcedvSOFT</name></proto>
            <param class="source"><ptype>ALuint</ptype> <name>source</name></param>
            <param group="SourceDouble"><ptype>ALenum</ptype> <name>param</name></param>
            <param><ptype>ALdouble</ptype> *<name>values</name></param>
        </command>
        <command export="al">
            <proto>void <name>alSourcei64SOFT</name></proto>
            <param class="source"><ptype>ALuint</ptype> <name>source</name></param>
            <param group="SourceInteger"><ptype>ALenum</ptype> <name>param</name></param>
            <param><ptype>ALint64SOFT</ptype> <name>value</name></param>
        </command>
        <command export="al">
            <proto>void <name>alSource3i64SOFT</name></proto>
            <param class="source"><ptype>ALuint</ptype> <name>source</name></param>
            <param group="SourceInteger3"><ptype>ALenum</ptype> <name>param</name></param>
            <param><ptype>ALint64SOFT</ptype> <name>value1</name></param>
            <param><ptype>ALint64SOFT</ptype> <name>value2</name></param>
            <param><ptype>ALint64SOFT</ptype> <name>value3</name></param>
        </command>
        <command export="al">
            <proto>void <name>alSourcei64vSOFT</name></proto>
            <param class="source"><ptype>ALuint</ptype> <name>source</name></param>
            <param group="SourceInteger"><ptype>ALenum</ptype> <name>param</name></param>
            <param>const <ptype>ALint64SOFT</ptype> *<name>values</name></param>
        </command>
        <command export="al">
            <proto>void <name>alGetSourcei64SOFT</name></proto>
            <param class="source"><ptype>ALuint</ptype> <name>source</name></param>
            <param group="SourceInteger"><ptype>ALenum</ptype> <name>param</name></param>
            <param><ptype>ALint64SOFT</ptype> *<name>value</name></param>
        </command>
        <command export="al">
            <proto>void <name>alGetSource3i64SOFT</name></proto>
            <param class="source"><ptype>ALuint</ptype> <name>source</name></param>
            <param group="SourceInteger3"><ptype>ALenum</ptype> <name>param</name></param>
            <param><ptype>ALint64SOFT</ptype> *<name>value1</name></param>
            <param><ptype>ALint64SOFT</ptype> *<name>value2</name></param>
            <param><ptype>ALint64SOFT</ptype> *<name>value3</name></param>
        </command>
        <command export="al">
            <proto>void <name>alGetSourcei64vSOFT</name></proto>
            <param class="source"><ptype>ALuint</ptype> <name>source</name></param>
            <param group="SourceInteger"><ptype>ALenum</ptype> <name>param</name></param>
            <param><ptype>ALint64SOFT</ptype> *<name>values</name></param>
        </command>
        <command export="al">
            <proto>void <name>alDeferUpdatesSOFT</name></proto>
        </command>
        <command export="al">
            <proto>void <name>alProcessUpdatesSOFT</name></proto>
        </command>
        <command export="al">
            <proto>const <ptype>ALchar</ptype>* <name>alGetStringiSOFT</name></proto>
            <param group="StringPName"><ptype>ALenum</ptype> <name>pname</name></param>
            <param><ptype>ALsizei</ptype> <name>index</name></param>
        </command>
        <command export="al">
            <proto>void <name>alEventControlSOFT</name></proto>
            <param><ptype>ALsizei</ptype> <name>count</name></param>
            <param len="count">const <ptype>ALenum</ptype> *<name>types</name></param>
            <param>const <ptype>ALboolean</ptype> <name>enable</name></param>
        </command>
        <command export="al">
            <proto>void <name>alEventCallbackSOFT</name></proto>
            <param><ptype>ALEVENTPROCSOFT</ptype> <name>callback</name></param>
            <param>void *<name>userParam</name></param>
        </command>
        <command export="al">
            <proto>void* <name>alGetPointerSOFT</name></proto>
            <param group="PointerPName"><ptype>ALenum</ptype> <name>pname</name></param>
        </command>
        <command export="al">
            <proto>void <name>alGetPointervSOFT</name></proto>
            <param group="PointerPName"><ptype>ALenum</ptype> <name>pname</name></param>
            <param>void **<name>values</name></param>
        </command>
        <command>
            <proto>void <name>alBufferCallbackSOFT</name></proto>
            <param class="buffer"><ptype>ALuint</ptype> <name>buffer</name></param>
            <param group="Format"><ptype>ALenum</ptype> <name>format</name></param>
            <param><ptype>ALsizei</ptype> <name>freq</name></param>
            <param><ptype>ALBUFFERCALLBACKTYPESOFT</ptype> <name>callback</name></param>
            <param><ptype>ALvoid</ptype> *<name>userptr</name></param>
        </command>
        <command>
            <proto>void <name>alGetBufferPtrSOFT</name></proto>
            <param class="buffer"><ptype>ALuint</ptype> <name>buffer</name></param>
            <param group="BufferPointerSOFT"><ptype>ALenum</ptype> <name>param</name></param>
            <param><ptype>ALvoid</ptype> **<name>ptr</name></param>
        </command>
        <command>
            <proto>void <name>alGetBuffer3PtrSOFT</name></proto>
            <param class="buffer"><ptype>ALuint</ptype> <name>buffer</name></param>
            <param group="BufferPointerSOFT"><ptype>ALenum</ptype> <name>param</name></param>
            <param><ptype>ALvoid</ptype> **<name>ptr0</name></param>
            <param><ptype>ALvoid</ptype> **<name>ptr1</name></param>
            <param><ptype>ALvoid</ptype> **<name>ptr2</name></param>
        </command>
        <command>
            <proto>void <name>alGetBufferPtrvSOFT</name></proto>
            <param class="buffer"><ptype>ALuint</ptype> <name>buffer</name></param>
            <param group="BufferPointerSOFT"><ptype>ALenum</ptype> <name>param</name></param>
            <param><ptype>ALvoid</ptype> **<name>ptr</name></param>
        </command>
        <command>
            <proto>void <name>alSourcePlayAtTimeSOFT</name></proto>
            <param class="source"><ptype>ALuint</ptype> <name>source</name></param>
            <param><ptype>ALint64SOFT</ptype> <name>start_time</name></param>
        </command>
        <command>
            <proto>void <name>alSourcePlayAtTimevSOFT</name></proto>
            <param><ptype>ALsizei</ptype> <name>n</name></param>
            <param class="source" len="n">const <ptype>ALuint</ptype> *<name>sources</name></param>
            <param><ptype>ALint64SOFT</ptype> <name>start_time</name></param>
        </command>
        <command>
            <proto>void <name>alDebugMessageCallbackEXT</name></proto>
            <param><ptype>ALDEBUGPROCEXT</ptype> <name>callback</name></param>
            <param>void *<name>userParam</name></param>
        </command>
        <command>
            <proto>void <name>alDebugMessageInsertEXT</name></proto>
            <param group="DebugSourceEXT"><ptype>ALenum</ptype> <name>source</name></param>
            <param group="DebugTypeEXT"><ptype>ALenum</ptype> <name>type</name></param>
            <param><ptype>ALuint</ptype> <name>id</name></param>
            <param group="DebugSeverityEXT"><ptype>ALenum</ptype> <name>severity</name></param>
            <param><ptype>ALsizei</ptype> <name>length</name></param>
            <param len="length">const <ptype>ALchar</ptype> *<name>message</name></param>
        </command>
        <command>
            <proto>void <name>alDebugMessageControlEXT</name></proto>
            <param group="DebugSourceEXT"><ptype>ALenum</ptype> <name>source</name></param>
            <param group="DebugTypeEXT"><ptype>ALenum</ptype> <name>type</name></param>
            <param group="DebugSeverityEXT"><ptype>ALenum</ptype> <name>severity</name></param>
            <param><ptype>ALsizei</ptype> <name>count</name></param>
            <param len="count">const <ptype>ALuint</ptype> *<name>ids</name></param>
            <param><ptype>ALboolean</ptype> <name>enable</name></param>
        </command>
        <command>
            <proto>void <name>alPushDebugGroupEXT</name></proto>
            <param group="DebugSourceEXT"><ptype>ALenum</ptype> <name>source</name></param>
            <param><ptype>ALuint</ptype> <name>id</name></param>
            <param><ptype>ALsizei</ptype> <name>length</name></param>
            <param len="length">const <ptype>ALchar</ptype> *<name>message</name></param>
        </command>
        <command>
            <proto>void <name>alPopDebugGroupEXT</name></proto>
        </command>
        <command>
            <proto><ptype>ALuint</ptype> <name>alGetDebugMessageLogEXT</name></proto>
            <param><ptype>ALuint</ptype> <name>count</name></param>
            <param><ptype>ALsizei</ptype> <name>logBufSize</name></param>
            <param len="count" group="DebugSourceEXT"><ptype>ALenum</ptype> *<name>sources</name></param>
            <param len="count" group="DebugTypeEXT"><ptype>ALenum</ptype> *<name>types</name></param>
            <param len="count"><ptype>ALuint</ptype> *<name>ids</name></param>
            <param len="count" group="DebugSeverityEXT"><ptype>ALenum</ptype> *<name>severities</name></param>
            <param len="count"><ptype>ALsizei</ptype> *<name>lengths</name></param>
            <param len="logBufSize"><ptype>ALchar</ptype> *<name>logBuf</name></param>
        </command>
        <command>
            <proto>void <name>alObjectLabelEXT</name></proto>
            <param group="ObjectIdentifier"><ptype>ALenum</ptype> <name>identifier</name></param>
            <param><ptype>ALuint</ptype> <name>name</name></param>
            <param><ptype>ALsizei</ptype> <name>length</name></param>
            <param len="length">const <ptype>ALchar</ptype> *<name>label</name></param>
        </command>
        <command>
            <proto>void <name>alGetObjectLabelEXT</name></proto>
            <param group="ObjectIdentifier"><ptype>ALenum</ptype> <name>identifier</name></param>
            <param><ptype>ALuint</ptype> <name>name</name></param>
            <param><ptype>ALsizei</ptype> <name>bufSize</name></param>
            <param len="1"><ptype>ALsizei</ptype> *<name>length</name></param>
            <param len="bufSize"><ptype>ALchar</ptype> *<name>label</name></param>
        </command>
        <command>
            <proto>void* <name>alGetPointerEXT</name></proto>
            <param group="PointerPName"><ptype>ALenum</ptype> <name>pname</name></param>
        </command>
        <command>
            <proto>void <name>alGetPointervEXT</name></proto>
            <param group="PointerPName"><ptype>ALenum</ptype> <name>pname</name></param>
            <param>void **<name>values</name></param>
        </command>
        <command>
            <proto>void <name>alEnableDirect</name></proto>
            <param><ptype>ALCcontext</ptype> *<name>context</name></param>
            <param group="EnableCap"><ptype>ALenum</ptype> <name>capability</name></param>
        </command>
        <command>
            <proto>void <name>alDisableDirect</name></proto>
            <param><ptype>ALCcontext</ptype> *<name>context</name></param>
            <param group="EnableCap"><ptype>ALenum</ptype> <name>capability</name></param>
        </command>
        <command>
            <proto>ALboolean <name>alIsEnabledDirect</name></proto>
            <param><ptype>ALCcontext</ptype> *<name>context</name></param>
            <param group="EnableCap"><ptype>ALenum</ptype> <name>capability</name></param>
        </command>
        <command>
            <proto>void <name>alDopplerFactorDirect</name></proto>
            <param><ptype>ALCcontext</ptype> *<name>context</name></param>
            <param><ptype>ALfloat</ptype> <name>value</name></param>
        </command>
        <command>
            <proto>void <name>alSpeedOfSoundDirect</name></proto>
            <param><ptype>ALCcontext</ptype> *<name>context</name></param>
            <param><ptype>ALfloat</ptype> <name>value</name></param>
        </command>
        <command>
            <proto>void <name>alDistanceModelDirect</name></proto>
            <param><ptype>ALCcontext</ptype> *<name>context</name></param>
            <param group="DistanceModel"><ptype>ALenum</ptype> <name>distanceModel</name></param>
        </command>
        <command>
            <proto>const <ptype>ALchar</ptype>* <name>alGetStringDirect</name></proto>
            <param><ptype>ALCcontext</ptype> *<name>context</name></param>
            <param group="StringPName"><ptype>ALenum</ptype> <name>param</name></param>
        </command>
        <command>
            <proto>void <name>alGetBooleanvDirect</name></proto>
            <param><ptype>ALCcontext</ptype> *<name>context</name></param>
            <param group="BooleanPName"><ptype>ALenum</ptype> <name>param</name></param>
            <param><ptype>ALboolean</ptype> *<name>values</name></param>
        </command>
        <command>
            <proto>void <name>alGetIntegervDirect</name></proto>
            <param><ptype>ALCcontext</ptype> *<name>context</name></param>
            <param group="IntegerPName"><ptype>ALenum</ptype> <name>param</name></param>
            <param><ptype>ALint</ptype> *<name>values</name></param>
        </command>
        <command>
            <proto>void <name>alGetFloatvDirect</name></proto>
            <param><ptype>ALCcontext</ptype> *<name>context</name></param>
            <param group="GetPName"><ptype>ALenum</ptype> <name>param</name></param>
            <param><ptype>ALfloat</ptype> *<name>values</name></param>
        </command>
        <command>
            <proto>void <name>alGetDoublevDirect</name></proto>
            <param><ptype>ALCcontext</ptype> *<name>context</name></param>
            <param group="GetPName"><ptype>ALenum</ptype> <name>param</name></param>
            <param><ptype>ALdouble</ptype> *<name>values</name></param>
        </command>
        <command>
            <proto><ptype>ALboolean</ptype> <name>alGetBooleanDirect</name></proto>
            <param><ptype>ALCcontext</ptype> *<name>context</name></param>
            <param group="BooleanPName"><ptype>ALenum</ptype> <name>param</name></param>
        </command>
        <command>
            <proto><ptype>ALint</ptype> <name>alGetIntegerDirect</name></proto>
            <param><ptype>ALCcontext</ptype> *<name>context</name></param>
            <param group="IntegerPName"><ptype>ALenum</ptype> <name>param</name></param>
        </command>
        <command>
            <proto><ptype>ALfloat</ptype> <name>alGetFloatDirect</name></proto>
            <param><ptype>ALCcontext</ptype> *<name>context</name></param>
            <param group="FloatPName"><ptype>ALenum</ptype> <name>param</name></param>
        </command>
        <command>
            <proto><ptype>ALdouble</ptype> <name>alGetDoubleDirect</name></proto>
            <param><ptype>ALCcontext</ptype> *<name>context</name></param>
            <param group="GetPName"><ptype>ALenum</ptype> <name>param</name></param>
        </command>
        <command>
            <proto group="ErrorCode"><ptype>ALenum</ptype> <name>alGetErrorDirect</name></proto>
            <param><ptype>ALCcontext</ptype> *<name>context</name></param>
        </command>
        <command>
            <proto><ptype>ALboolean</ptype> <name>alIsExtensionPresentDirect</name></proto>
            <param><ptype>ALCcontext</ptype> *<name>context</name></param>
            <param>const <ptype>ALchar</ptype> *<name>extname</name></param>
        </command>
        <command>
            <proto>void* <name>alGetProcAddressDirect</name></proto>
            <param><ptype>ALCcontext</ptype> *<name>context</name></param>
            <param>const <ptype>ALchar</ptype> *<name>fname</name></param>
        </command>
        <command>
            <proto><ptype>ALenum</ptype> <name>alGetEnumValueDirect</name></proto>
            <param><ptype>ALCcontext</ptype> *<name>context</name></param>
            <param>const <ptype>ALchar</ptype> *<name>ename</name></param>
        </command>
        <command>
            <proto>void <name>alListenerfDirect</name></proto>
            <param><ptype>ALCcontext</ptype> *<name>context</name></param>
            <param group="ListenerFloat"><ptype>ALenum</ptype> <name>param</name></param>
            <param><ptype>ALfloat</ptype> <name>value</name></param>
        </command>
        <command>
            <proto>void <name>alListener3fDirect</name></proto>
            <param><ptype>ALCcontext</ptype> *<name>context</name></param>
            <param group="ListenerFloat3"><ptype>ALenum</ptype> <name>param</name></param>
            <param><ptype>ALfloat</ptype> <name>value1</name></param>
            <param><ptype>ALfloat</ptype> <name>value2</name></param>
            <param><ptype>ALfloat</ptype> <name>value3</name></param>
        </command>
        <command>
            <proto>void <name>alListenerfvDirect</name></proto>
            <param><ptype>ALCcontext</ptype> *<name>context</name></param>
            <param group="ListenerFloat"><ptype>ALenum</ptype> <name>param</name></param>
            <param>const <ptype>ALfloat</ptype> *<name>values</name></param>
        </command>
        <command>
            <proto>void <name>alListeneriDirect</name></proto>
            <param><ptype>ALCcontext</ptype> *<name>context</name></param>
            <param group="ListenerInteger"><ptype>ALenum</ptype> <name>param</name></param>
            <param><ptype>ALint</ptype> <name>value</name></param>
        </command>
        <command>
            <proto>void <name>alListener3iDirect</name></proto>
            <param><ptype>ALCcontext</ptype> *<name>context</name></param>
            <param group="ListenerInteger3"><ptype>ALenum</ptype> <name>param</name></param>
            <param><ptype>ALint</ptype> <name>value1</name></param>
            <param><ptype>ALint</ptype> <name>value2</name></param>
            <param><ptype>ALint</ptype> <name>value3</name></param>
        </command>
        <command>
            <proto>void <name>alListenerivDirect</name></proto>
            <param><ptype>ALCcontext</ptype> *<name>context</name></param>
            <param group="ListenerInteger"><ptype>ALenum</ptype> <name>param</name></param>
            <param>const <ptype>ALint</ptype> *<name>values</name></param>
        </command>
        <command>
            <proto>void <name>alGetListenerfDirect</name></proto>
            <param><ptype>ALCcontext</ptype> *<name>context</name></param>
            <param group="ListenerFloat"><ptype>ALenum</ptype> <name>param</name></param>
            <param><ptype>ALfloat</ptype> *<name>value</name></param>
        </command>
        <command>
            <proto>void <name>alGetListener3fDirect</name></proto>
            <param><ptype>ALCcontext</ptype> *<name>context</name></param>
            <param group="ListenerFloat3"><ptype>ALenum</ptype> <name>param</name></param>
            <param><ptype>ALfloat</ptype> *<name>value1</name></param>
            <param><ptype>ALfloat</ptype> *<name>value2</name></param>
            <param><ptype>ALfloat</ptype> *<name>value3</name></param>
        </command>
        <command>
            <proto>void <name>alGetListenerfvDirect</name></proto>
            <param><ptype>ALCcontext</ptype> *<name>context</name></param>
            <param group="ListenerFloat"><ptype>ALenum</ptype> <name>param</name></param>
            <param><ptype>ALfloat</ptype> *<name>values</name></param>
        </command>
        <command>
            <proto>void <name>alGetListeneriDirect</name></proto>
            <param><ptype>ALCcontext</ptype> *<name>context</name></param>
            <param group="ListenerInteger"><ptype>ALenum</ptype> <name>param</name></param>
            <param><ptype>ALint</ptype> *<name>value</name></param>
        </command>
        <command>
            <proto>void <name>alGetListener3iDirect</name></proto>
            <param><ptype>ALCcontext</ptype> *<name>context</name></param>
            <param group="ListenerInteger3"><ptype>ALenum</ptype> <name>param</name></param>
            <param><ptype>ALint</ptype> *<name>value1</name></param>
            <param><ptype>ALint</ptype> *<name>value2</name></param>
            <param><ptype>ALint</ptype> *<name>value3</name></param>
        </command>
        <command>
            <proto>void <name>alGetListenerivDirect</name></proto>
            <param><ptype>ALCcontext</ptype> *<name>context</name></param>
            <param group="ListenerInteger"><ptype>ALenum</ptype> <name>param</name></param>
            <param><ptype>ALint</ptype> *<name>values</name></param>
        </command>
        <command>
            <proto>void <name>alGenSourcesDirect</name></proto>
            <param><ptype>ALCcontext</ptype> *<name>context</name></param>
            <param><ptype>ALsizei</ptype> <name>n</name></param>
            <param len="n" class="source"><ptype>ALuint</ptype> *<name>sources</name></param>
        </command>
        <command>
            <proto>void <name>alDeleteSourcesDirect</name></proto>
            <param><ptype>ALCcontext</ptype> *<name>context</name></param>
            <param><ptype>ALsizei</ptype> <name>n</name></param>
            <param len="n" class="source">const <ptype>ALuint</ptype> *<name>sources</name></param>
        </command>
        <command command="Verify an ID is for a valid source.">
            <proto><ptype>ALboolean</ptype> <name>alIsSourceDirect</name></proto>
            <param><ptype>ALCcontext</ptype> *<name>context</name></param>
            <param><ptype>ALuint</ptype> <name>source</name></param>
        </command>

        <command>
            <proto>void <name>alSourcefDirect</name></proto>
            <param><ptype>ALCcontext</ptype> *<name>context</name></param>
            <param class="source"><ptype>ALuint</ptype> <name>source</name></param>
            <param group="SourceFloat"><ptype>ALenum</ptype> <name>param</name></param>
            <param><ptype>ALfloat</ptype> <name>value</name></param>
        </command>
        <command>
            <proto>void <name>alSource3fDirect</name></proto>
            <param><ptype>ALCcontext</ptype> *<name>context</name></param>
            <param class="source"><ptype>ALuint</ptype> <name>source</name></param>
            <param group="SourceFloat3"><ptype>ALenum</ptype> <name>param</name></param>
            <param><ptype>ALfloat</ptype> <name>value1</name></param>
            <param><ptype>ALfloat</ptype> <name>value2</name></param>
            <param><ptype>ALfloat</ptype> <name>value3</name></param>
        </command>
        <command>
            <proto>void <name>alSourcefvDirect</name></proto>
            <param><ptype>ALCcontext</ptype> *<name>context</name></param>
            <param class="source"><ptype>ALuint</ptype> <name>source</name></param>
            <param group="SourceFloat"><ptype>ALenum</ptype> <name>param</name></param>
            <param>const <ptype>ALfloat</ptype> *<name>values</name></param>
        </command>
        <command>
            <proto>void <name>alSourceiDirect</name></proto>
            <param><ptype>ALCcontext</ptype> *<name>context</name></param>
            <param class="source"><ptype>ALuint</ptype> <name>source</name></param>
            <param group="SourceInteger"><ptype>ALenum</ptype> <name>param</name></param>
            <param><ptype>ALint</ptype> <name>value</name></param>
        </command>
        <command>
            <proto>void <name>alSource3iDirect</name></proto>
            <param><ptype>ALCcontext</ptype> *<name>context</name></param>
            <param class="source"><ptype>ALuint</ptype> <name>source</name></param>
            <param group="SourceInteger3"><ptype>ALenum</ptype> <name>param</name></param>
            <param><ptype>ALint</ptype> <name>value1</name></param>
            <param><ptype>ALint</ptype> <name>value2</name></param>
            <param><ptype>ALint</ptype> <name>value3</name></param>
        </command>
        <command>
            <proto>void <name>alSourceivDirect</name></proto>
            <param><ptype>ALCcontext</ptype> *<name>context</name></param>
            <param class="source"><ptype>ALuint</ptype> <name>source</name></param>
            <param group="SourceInteger"><ptype>ALenum</ptype> <name>param</name></param>
            <param>const <ptype>ALint</ptype> *<name>values</name></param>
        </command>
        <command>
            <proto>void <name>alGetSourcefDirect</name></proto>
            <param><ptype>ALCcontext</ptype> *<name>context</name></param>
            <param class="source"><ptype>ALuint</ptype> <name>source</name></param>
            <param group="SourceFloat"><ptype>ALenum</ptype> <name>param</name></param>
            <param><ptype>ALfloat</ptype> *<name>value</name></param>
        </command>
        <command>
            <proto>void <name>alGetSource3fDirect</name></proto>
            <param><ptype>ALCcontext</ptype> *<name>context</name></param>
            <param class="source"><ptype>ALuint</ptype> <name>source</name></param>
            <param group="SourceFloat3"><ptype>ALenum</ptype> <name>param</name></param>
            <param><ptype>ALfloat</ptype> *<name>value1</name></param>
            <param><ptype>ALfloat</ptype> *<name>value2</name></param>
            <param><ptype>ALfloat</ptype> *<name>value3</name></param>
        </command>
        <command>
            <proto>void <name>alGetSourcefvDirect</name></proto>
            <param><ptype>ALCcontext</ptype> *<name>context</name></param>
            <param class="source"><ptype>ALuint</ptype> <name>source</name></param>
            <param group="SourceFloat"><ptype>ALenum</ptype> <name>param</name></param>
            <param><ptype>ALfloat</ptype> *<name>values</name></param>
        </command>
        <command>
            <proto>void <name>alGetSourceiDirect</name></proto>
            <param><ptype>ALCcontext</ptype> *<name>context</name></param>
            <param class="source"><ptype>ALuint</ptype> <name>source</name></param>
            <param group="SourceInteger"><ptype>ALenum</ptype> <name>param</name></param>
            <param><ptype>ALint</ptype> *<name>value</name></param>
        </command>
        <command>
            <proto>void <name>alGetSource3iDirect</name></proto>
            <param><ptype>ALCcontext</ptype> *<name>context</name></param>
            <param class="source"><ptype>ALuint</ptype> <name>source</name></param>
            <param group="SourceInteger3"><ptype>ALenum</ptype> <name>param</name></param>
            <param><ptype>ALint</ptype> *<name>value1</name></param>
            <param><ptype>ALint</ptype> *<name>value2</name></param>
            <param><ptype>ALint</ptype> *<name>value3</name></param>
        </command>
        <command>
            <proto>void <name>alGetSourceivDirect</name></proto>
            <param><ptype>ALCcontext</ptype> *<name>context</name></param>
            <param class="source"><ptype>ALuint</ptype> <name>source</name></param>
            <param group="SourceInteger"><ptype>ALenum</ptype> <name>param</name></param>
            <param><ptype>ALint</ptype> *<name>values</name></param>
        </command>
        <command>
            <proto>void <name>alSourcePlayDirect</name></proto>
            <param><ptype>ALCcontext</ptype> *<name>context</name></param>
            <param class="source"><ptype>ALuint</ptype> <name>source</name></param>
        </command>
        <command>
            <proto>void <name>alSourceStopDirect</name></proto>
            <param><ptype>ALCcontext</ptype> *<name>context</name></param>
            <param class="source"><ptype>ALuint</ptype> <name>source</name></param>
        </command>
        <command>
            <proto>void <name>alSourceRewindDirect</name></proto>
            <param><ptype>ALCcontext</ptype> *<name>context</name></param>
            <param class="source"><ptype>ALuint</ptype> <name>source</name></param>
        </command>
        <command>
            <proto>void <name>alSourcePauseDirect</name></proto>
            <param><ptype>ALCcontext</ptype> *<name>context</name></param>
            <param class="source"><ptype>ALuint</ptype> <name>source</name></param>
        </command>
        <command>
            <proto>void <name>alSourcePlayvDirect</name></proto>
            <param><ptype>ALCcontext</ptype> *<name>context</name></param>
            <param><ptype>ALsizei</ptype> <name>n</name></param>
            <param len="n" class="source">const <ptype>ALuint</ptype> *<name>sources</name></param>
        </command>
        <command>
            <proto>void <name>alSourceStopvDirect</name></proto>
            <param><ptype>ALCcontext</ptype> *<name>context</name></param>
            <param><ptype>ALsizei</ptype> <name>n</name></param>
            <param len="n" class="source">const <ptype>ALuint</ptype> *<name>sources</name></param>
        </command>
        <command>
            <proto>void <name>alSourceRewindvDirect</name></proto>
            <param><ptype>ALCcontext</ptype> *<name>context</name></param>
            <param><ptype>ALsizei</ptype> <name>n</name></param>
            <param len="n" class="source">const <ptype>ALuint</ptype> *<name>sources</name></param>
        </command>
        <command>
            <proto>void <name>alSourcePausevDirect</name></proto>
            <param><ptype>ALCcontext</ptype> *<name>context</name></param>
            <param><ptype>ALsizei</ptype> <name>n</name></param>
            <param len="n" class="source">const <ptype>ALuint</ptype> *<name>sources</name></param>
        </command>
        <command>
            <proto>void <name>alSourceQueueBuffersDirect</name></proto>
            <param><ptype>ALCcontext</ptype> *<name>context</name></param>
            <param class="source"><ptype>ALuint</ptype> <name>source</name></param>
            <param><ptype>ALsizei</ptype> <name>nb</name></param>
            <param class="buffer">const <ptype>ALuint</ptype> *<name>buffers</name></param>
        </command>
        <command>
            <proto>void <name>alSourceUnqueueBuffersDirect</name></proto>
            <param><ptype>ALCcontext</ptype> *<name>context</name></param>
            <param class="source"><ptype>ALuint</ptype> <name>source</name></param>
            <param><ptype>ALsizei</ptype> <name>nb</name></param>
            <param class="buffer"><ptype>ALuint</ptype> *<name>buffers</name></param>
        </command>
        <command>
            <proto>void <name>alGenBuffersDirect</name></proto>
            <param><ptype>ALCcontext</ptype> *<name>context</name></param>
            <param><ptype>ALsizei</ptype> <name>n</name></param>
            <param class="buffer"><ptype>ALuint</ptype> *<name>buffers</name></param>
        </command>
        <command>
            <proto>void <name>alDeleteBuffersDirect</name></proto>
            <param><ptype>ALCcontext</ptype> *<name>context</name></param>
            <param><ptype>ALsizei</ptype> <name>n</name></param>
            <param class="buffer">const <ptype>ALuint</ptype> *<name>buffers</name></param>
        </command>
        <command>
            <proto><ptype>ALboolean</ptype> <name>alIsBufferDirect</name></proto>
            <param><ptype>ALCcontext</ptype> *<name>context</name></param>
            <param class="buffer"><ptype>ALuint</ptype> <name>buffer</name></param>
        </command>
        <command>
            <proto>void <name>alBufferDataDirect</name></proto>
            <param><ptype>ALCcontext</ptype> *<name>context</name></param>
            <param class="buffer"><ptype>ALuint</ptype> <name>buffer</name></param>
            <param group="Format"><ptype>ALenum</ptype> <name>format</name></param>
            <param len="size">const <ptype>ALvoid</ptype> *<name>data</name></param>
            <param><ptype>ALsizei</ptype> <name>size</name></param>
            <param><ptype>ALsizei</ptype> <name>samplerate</name></param>
        </command>
        <command>
            <proto>void <name>alBufferfDirect</name></proto>
            <param><ptype>ALCcontext</ptype> *<name>context</name></param>
            <param class="buffer"><ptype>ALuint</ptype> <name>buffer</name></param>
            <param group="BufferFloat"><ptype>ALenum</ptype> <name>param</name></param>
            <param><ptype>ALfloat</ptype> <name>value</name></param>
        </command>
        <command>
            <proto>void <name>alBuffer3fDirect</name></proto>
            <param><ptype>ALCcontext</ptype> *<name>context</name></param>
            <param class="buffer"><ptype>ALuint</ptype> <name>buffer</name></param>
            <param group="BufferFloat3"><ptype>ALenum</ptype> <name>param</name></param>
            <param><ptype>ALfloat</ptype> <name>value1</name></param>
            <param><ptype>ALfloat</ptype> <name>value2</name></param>
            <param><ptype>ALfloat</ptype> <name>value3</name></param>
        </command>
        <command>
            <proto>void <name>alBufferfvDirect</name></proto>
            <param><ptype>ALCcontext</ptype> *<name>context</name></param>
            <param class="buffer"><ptype>ALuint</ptype> <name>buffer</name></param>
            <param group="BufferFloat"><ptype>ALenum</ptype> <name>param</name></param>
            <param>const <ptype>ALfloat</ptype> *<name>values</name></param>
        </command>
        <command>
            <proto>void <name>alBufferiDirect</name></proto>
            <param><ptype>ALCcontext</ptype> *<name>context</name></param>
            <param class="buffer"><ptype>ALuint</ptype> <name>buffer</name></param>
            <param group="BufferInteger"><ptype>ALenum</ptype> <name>param</name></param>
            <param><ptype>ALint</ptype> <name>value</name></param>
        </command>
        <command>
            <proto>void <name>alBuffer3iDirect</name></proto>
            <param><ptype>ALCcontext</ptype> *<name>context</name></param>
            <param class="buffer"><ptype>ALuint</ptype> <name>buffer</name></param>
            <param group="BufferInteger3"><ptype>ALenum</ptype> <name>param</name></param>
            <param><ptype>ALint</ptype> <name>value1</name></param>
            <param><ptype>ALint</ptype> <name>value2</name></param>
            <param><ptype>ALint</ptype> <name>value3</name></param>
        </command>
        <command>
            <proto>void <name>alBufferivDirect</name></proto>
            <param><ptype>ALCcontext</ptype> *<name>context</name></param>
            <param class="buffer"><ptype>ALuint</ptype> <name>buffer</name></param>
            <param group="BufferInteger"><ptype>ALenum</ptype> <name>param</name></param>
            <param>const <ptype>ALint</ptype> *<name>values</name></param>
        </command>
        <command>
            <proto>void <name>alGetBufferfDirect</name></proto>
            <param><ptype>ALCcontext</ptype> *<name>context</name></param>
            <param class="buffer"><ptype>ALuint</ptype> <name>buffer</name></param>
            <param group="BufferFloat"><ptype>ALenum</ptype> <name>param</name></param>
            <param><ptype>ALfloat</ptype> *<name>value</name></param>
        </command>
        <command>
            <proto>void <name>alGetBuffer3fDirect</name></proto>
            <param><ptype>ALCcontext</ptype> *<name>context</name></param>
            <param class="buffer"><ptype>ALuint</ptype> <name>buffer</name></param>
            <param group="BufferFloat3"><ptype>ALenum</ptype> <name>param</name></param>
            <param><ptype>ALfloat</ptype> *<name>value1</name></param>
            <param><ptype>ALfloat</ptype> *<name>value2</name></param>
            <param><ptype>ALfloat</ptype> *<name>value3</name></param>
        </command>
        <command>
            <proto>void <name>alGetBufferfvDirect</name></proto>
            <param><ptype>ALCcontext</ptype> *<name>context</name></param>
            <param class="buffer"><ptype>ALuint</ptype> <name>buffer</name></param>
            <param group="BufferFloat"><ptype>ALenum</ptype> <name>param</name></param>
            <param><ptype>ALfloat</ptype> *<name>values</name></param>
        </command>
        <command>
            <proto>void <name>alGetBufferiDirect</name></proto>
            <param><ptype>ALCcontext</ptype> *<name>context</name></param>
            <param class="buffer"><ptype>ALuint</ptype> <name>buffer</name></param>
            <param group="BufferInteger"><ptype>ALenum</ptype> <name>param</name></param>
            <param><ptype>ALint</ptype> *<name>value</name></param>
        </command>
        <command>
            <proto>void <name>alGetBuffer3iDirect</name></proto>
            <param><ptype>ALCcontext</ptype> *<name>context</name></param>
            <param class="buffer"><ptype>ALuint</ptype> <name>buffer</name></param>
            <param group="BufferInteger3"><ptype>ALenum</ptype> <name>param</name></param>
            <param><ptype>ALint</ptype> *<name>value1</name></param>
            <param><ptype>ALint</ptype> *<name>value2</name></param>
            <param><ptype>ALint</ptype> *<name>value3</name></param>
        </command>
        <command>
            <proto>void <name>alGetBufferivDirect</name></proto>
            <param><ptype>ALCcontext</ptype> *<name>context</name></param>
            <param class="buffer"><ptype>ALuint</ptype> <name>buffer</name></param>
            <param group="BufferInteger"><ptype>ALenum</ptype> <name>param</name></param>
            <param><ptype>ALint</ptype> *<name>values</name></param>
        </command>
        <command>
            <proto>void <name>alGenEffectsDirect</name></proto>
            <param><ptype>ALCcontext</ptype> *<name>context</name></param>
            <param><ptype>ALsizei</ptype> <name>n</name></param>
            <param len="n" class="effect"><ptype>ALuint</ptype> *<name>effects</name></param>
        </command>
        <command>
            <proto>void <name>alDeleteEffectsDirect</name></proto>
            <param><ptype>ALCcontext</ptype> *<name>context</name></param>
            <param><ptype>ALsizei</ptype> <name>n</name></param>
            <param len="n" class="effect">const <ptype>ALuint</ptype> *<name>effects</name></param>
        </command>
        <command>
            <proto><ptype>ALboolean</ptype> <name>alIsEffectDirect</name></proto>
            <param><ptype>ALCcontext</ptype> *<name>context</name></param>
            <param><ptype>ALuint</ptype> <name>effect</name></param>
        </command>
        <command>
            <proto>void <name>alEffectiDirect</name></proto>
            <param><ptype>ALCcontext</ptype> *<name>context</name></param>
            <param class="effect"><ptype>ALuint</ptype> <name>effect</name></param>
            <param group="EffectInteger"><ptype>ALenum</ptype> <name>param</name></param>
            <param><ptype>ALint</ptype> <name>iValue</name></param>
        </command>
        <command>
            <proto>void <name>alEffectivDirect</name></proto>
            <param><ptype>ALCcontext</ptype> *<name>context</name></param>
            <param class="effect"><ptype>ALuint</ptype> <name>effect</name></param>
            <param group="EffectInteger"><ptype>ALenum</ptype> <name>param</name></param>
            <param>const <ptype>ALint</ptype> *<name>piValues</name></param>
        </command>
        <command>
            <proto>void <name>alEffectfDirect</name></proto>
            <param><ptype>ALCcontext</ptype> *<name>context</name></param>
            <param class="effect"><ptype>ALuint</ptype> <name>effect</name></param>
            <param group="EffectFloat"><ptype>ALenum</ptype> <name>param</name></param>
            <param><ptype>ALfloat</ptype> <name>flValue</name></param>
        </command>
        <command>
            <proto>void <name>alEffectfvDirect</name></proto>
            <param><ptype>ALCcontext</ptype> *<name>context</name></param>
            <param class="effect"><ptype>ALuint</ptype> <name>effect</name></param>
            <param group="EffectFloat"><ptype>ALenum</ptype> <name>param</name></param>
            <param>const <ptype>ALfloat</ptype> *<name>pflValues</name></param>
        </command>
        <command>
            <proto>void <name>alGetEffectiDirect</name></proto>
            <param><ptype>ALCcontext</ptype> *<name>context</name></param>
            <param class="effect"><ptype>ALuint</ptype> <name>effect</name></param>
            <param group="EffectInteger"><ptype>ALenum</ptype> <name>param</name></param>
            <param><ptype>ALint</ptype> *<name>iValue</name></param>
        </command>
        <command>
            <proto>void <name>alGetEffectivDirect</name></proto>
            <param><ptype>ALCcontext</ptype> *<name>context</name></param>
            <param class="effect"><ptype>ALuint</ptype> <name>effect</name></param>
            <param group="EffectInteger"><ptype>ALenum</ptype> <name>param</name></param>
            <param><ptype>ALint</ptype> *<name>piValues</name></param>
        </command>
        <command>
            <proto>void <name>alGetEffectfDirect</name></proto>
            <param><ptype>ALCcontext</ptype> *<name>context</name></param>
            <param class="effect"><ptype>ALuint</ptype> <name>effect</name></param>
            <param group="EffectFloat"><ptype>ALenum</ptype> <name>param</name></param>
            <param><ptype>ALfloat</ptype> *<name>flValue</name></param>
        </command>
        <command>
            <proto>void <name>alGetEffectfvDirect</name></proto>
            <param><ptype>ALCcontext</ptype> *<name>context</name></param>
            <param class="effect"><ptype>ALuint</ptype> <name>effect</name></param>
            <param group="EffectFloat"><ptype>ALenum</ptype> <name>param</name></param>
            <param><ptype>ALfloat</ptype> *<name>pflValues</name></param>
        </command>
        <command>
            <proto>void <name>alGenFiltersDirect</name></proto>
            <param><ptype>ALCcontext</ptype> *<name>context</name></param>
            <param><ptype>ALsizei</ptype> <name>n</name></param>
            <param len="n" class="filter"><ptype>ALuint</ptype> *<name>filters</name></param>
        </command>
        <command>
            <proto>void <name>alDeleteFiltersDirect</name></proto>
            <param><ptype>ALCcontext</ptype> *<name>context</name></param>
            <param><ptype>ALsizei</ptype> <name>n</name></param>
            <param len="n" class="filter">const <ptype>ALuint</ptype> *<name>filters</name></param>
        </command>
        <command>
            <proto><ptype>ALboolean</ptype> <name>alIsFilterDirect</name></proto>
            <param><ptype>ALCcontext</ptype> *<name>context</name></param>
            <param><ptype>ALuint</ptype> <name>filter</name></param>
        </command>
        <command>
            <proto>void <name>alFilteriDirect</name></proto>
            <param><ptype>ALCcontext</ptype> *<name>context</name></param>
            <param class="filter"><ptype>ALuint</ptype> <name>filter</name></param>
            <param group="FilterInteger"><ptype>ALenum</ptype> <name>param</name></param>
            <param><ptype>ALint</ptype> <name>iValue</name></param>
        </command>
        <command>
            <proto>void <name>alFilterivDirect</name></proto>
            <param><ptype>ALCcontext</ptype> *<name>context</name></param>
            <param class="filter"><ptype>ALuint</ptype> <name>filter</name></param>
            <param group="FilterInteger"><ptype>ALenum</ptype> <name>param</name></param>
            <param>const <ptype>ALint</ptype> *<name>piValues</name></param>
        </command>
        <command>
            <proto>void <name>alFilterfDirect</name></proto>
            <param><ptype>ALCcontext</ptype> *<name>context</name></param>
            <param class="filter"><ptype>ALuint</ptype> <name>filter</name></param>
            <param group="FilterFloat"><ptype>ALenum</ptype> <name>param</name></param>
            <param><ptype>ALfloat</ptype> <name>flValue</name></param>
        </command>
        <command>
            <proto>void <name>alFilterfvDirect</name></proto>
            <param><ptype>ALCcontext</ptype> *<name>context</name></param>
            <param class="filter"><ptype>ALuint</ptype> <name>filter</name></param>
            <param group="FilterFloat"><ptype>ALenum</ptype> <name>param</name></param>
            <param>const <ptype>ALfloat</ptype> *<name>pflValues</name></param>
        </command>
        <command>
            <proto>void <name>alGetFilteriDirect</name></proto>
            <param><ptype>ALCcontext</ptype> *<name>context</name></param>
            <param class="filter"><ptype>ALuint</ptype> <name>filter</name></param>
            <param group="FilterInteger"><ptype>ALenum</ptype> <name>param</name></param>
            <param><ptype>ALint</ptype> *<name>iValue</name></param>
        </command>
        <command>
            <proto>void <name>alGetFilterivDirect</name></proto>
            <param><ptype>ALCcontext</ptype> *<name>context</name></param>
            <param class="filter"><ptype>ALuint</ptype> <name>filter</name></param>
            <param group="FilterInteger"><ptype>ALenum</ptype> <name>param</name></param>
            <param><ptype>ALint</ptype> *<name>piValues</name></param>
        </command>
        <command>
            <proto>void <name>alGetFilterfDirect</name></proto>
            <param><ptype>ALCcontext</ptype> *<name>context</name></param>
            <param class="filter"><ptype>ALuint</ptype> <name>filter</name></param>
            <param group="FilterFloat"><ptype>ALenum</ptype> <name>param</name></param>
            <param><ptype>ALfloat</ptype> *<name>flValue</name></param>
        </command>
        <command>
            <proto>void <name>alGetFilterfvDirect</name></proto>
            <param><ptype>ALCcontext</ptype> *<name>context</name></param>
            <param class="filter"><ptype>ALuint</ptype> <name>filter</name></param>
            <param group="FilterFloat"><ptype>ALenum</ptype> <name>param</name></param>
            <param><ptype>ALfloat</ptype> *<name>pflValues</name></param>
        </command>
        <command>
            <proto>void <name>alGenAuxiliaryEffectSlotsDirect</name></proto>
            <param><ptype>ALCcontext</ptype> *<name>context</name></param>
            <param><ptype>ALsizei</ptype> <name>n</name></param>
            <param len="n" class="auxiliary effect slot"><ptype>ALuint</ptype> *<name>effectslots</name></param>
        </command>
        <command>
            <proto>void <name>alDeleteAuxiliaryEffectSlotsDirect</name></proto>
            <param><ptype>ALCcontext</ptype> *<name>context</name></param>
            <param><ptype>ALsizei</ptype> <name>n</name></param>
            <param len="n" class="auxiliary effect slot">const <ptype>ALuint</ptype> *<name>effectslots</name></param>
        </command>
        <command>
            <proto><ptype>ALboolean</ptype> <name>alIsAuxiliaryEffectSlotDirect</name></proto>
            <param><ptype>ALCcontext</ptype> *<name>context</name></param>
            <param><ptype>ALuint</ptype> <name>effectslot</name></param>
        </command>
        <command>
            <proto>void <name>alAuxiliaryEffectSlotiDirect</name></proto>
            <param><ptype>ALCcontext</ptype> *<name>context</name></param>
            <param class="auxiliary effect slot"><ptype>ALuint</ptype> <name>effectslot</name></param>
            <param group="AuxiliaryEffectSlotInteger"><ptype>ALenum</ptype> <name>param</name></param>
            <param><ptype>ALint</ptype> <name>iValue</name></param>
        </command>
        <command>
            <proto>void <name>alAuxiliaryEffectSlotivDirect</name></proto>
            <param><ptype>ALCcontext</ptype> *<name>context</name></param>
            <param class="auxiliary effect slot"><ptype>ALuint</ptype> <name>effectslot</name></param>
            <param group="AuxiliaryEffectSlotInteger"><ptype>ALenum</ptype> <name>param</name></param>
            <param>const <ptype>ALint</ptype> *<name>piValues</name></param>
        </command>
        <command>
            <proto>void <name>alAuxiliaryEffectSlotfDirect</name></proto>
            <param><ptype>ALCcontext</ptype> *<name>context</name></param>
            <param class="auxiliary effect slot"><ptype>ALuint</ptype> <name>effectslot</name></param>
            <param group="AuxiliaryEffectSlotFloat"><ptype>ALenum</ptype> <name>param</name></param>
            <param><ptype>ALfloat</ptype> <name>flValue</name></param>
        </command>
        <command>
            <proto>void <name>alAuxiliaryEffectSlotfvDirect</name></proto>
            <param><ptype>ALCcontext</ptype> *<name>context</name></param>
            <param class="auxiliary effect slot"><ptype>ALuint</ptype> <name>effectslot</name></param>
            <param group="AuxiliaryEffectSlotFloat"><ptype>ALenum</ptype> <name>param</name></param>
            <param>const <ptype>ALfloat</ptype> *<name>pflValues</name></param>
        </command>
        <command>
            <proto>void <name>alGetAuxiliaryEffectSlotiDirect</name></proto>
            <param><ptype>ALCcontext</ptype> *<name>context</name></param>
            <param class="auxiliary effect slot"><ptype>ALuint</ptype> <name>effectslot</name></param>
            <param group="AuxiliaryEffectSlotInteger"><ptype>ALenum</ptype> <name>param</name></param>
            <param><ptype>ALint</ptype> *<name>iValue</name></param>
        </command>
        <command>
            <proto>void <name>alGetAuxiliaryEffectSlotivDirect</name></proto>
            <param><ptype>ALCcontext</ptype> *<name>context</name></param>
            <param class="auxiliary effect slot"><ptype>ALuint</ptype> <name>effectslot</name></param>
            <param group="AuxiliaryEffectSlotInteger"><ptype>ALenum</ptype> <name>param</name></param>
            <param><ptype>ALint</ptype> *<name>piValues</name></param>
        </command>
        <command>
            <proto>void <name>alGetAuxiliaryEffectSlotfDirect</name></proto>
            <param><ptype>ALCcontext</ptype> *<name>context</name></param>
            <param class="auxiliary effect slot"><ptype>ALuint</ptype> <name>effectslot</name></param>
            <param group="AuxiliaryEffectSlotFloat"><ptype>ALenum</ptype> <name>param</name></param>
            <param><ptype>ALfloat</ptype> *<name>flValue</name></param>
        </command>
        <command>
            <proto>void <name>alGetAuxiliaryEffectSlotfvDirect</name></proto>
            <param><ptype>ALCcontext</ptype> *<name>context</name></param>
            <param class="auxiliary effect slot"><ptype>ALuint</ptype> <name>effectslot</name></param>
            <param group="AuxiliaryEffectSlotFloat"><ptype>ALenum</ptype> <name>param</name></param>
            <param><ptype>ALfloat</ptype> *<name>pflValues</name></param>
        </command>
        <command>
            <proto>void <name>alBufferDataStaticDirect</name></proto>
            <param><ptype>ALCcontext</ptype> *<name>context</name></param>
            <param class="buffer">const <ptype>ALuint</ptype> <name>buffer</name></param>
            <param group="Format"><ptype>ALenum</ptype> <name>format</name></param>
            <param len="size"><ptype>ALvoid</ptype> *<name>data</name></param>
            <param><ptype>ALsizei</ptype> <name>size</name></param>
            <param><ptype>ALsizei</ptype> <name>freq</name></param>
        </command>
        <command>
            <proto>void <name>alDebugMessageCallbackDirectEXT</name></proto>
            <param><ptype>ALCcontext</ptype> *<name>context</name></param>
            <param><ptype>ALDEBUGPROCEXT</ptype> <name>callback</name></param>
            <param>void *<name>userParam</name></param>
        </command>
        <command>
            <proto>void <name>alDebugMessageInsertDirectEXT</name></proto>
            <param><ptype>ALCcontext</ptype> *<name>context</name></param>
            <param group="DebugSourceEXT"><ptype>ALenum</ptype> <name>source</name></param>
            <param group="DebugTypeEXT"><ptype>ALenum</ptype> <name>type</name></param>
            <param><ptype>ALuint</ptype> <name>id</name></param>
            <param group="DebugSeverityEXT"><ptype>ALenum</ptype> <name>severity</name></param>
            <param><ptype>ALsizei</ptype> <name>length</name></param>
            <param len="length">const <ptype>ALchar</ptype> *<name>message</name></param>
        </command>
        <command>
            <proto>void <name>alDebugMessageControlDirectEXT</name></proto>
            <param><ptype>ALCcontext</ptype> *<name>context</name></param>
            <param group="DebugSourceEXT"><ptype>ALenum</ptype> <name>source</name></param>
            <param group="DebugTypeEXT"><ptype>ALenum</ptype> <name>type</name></param>
            <param group="DebugSeverityEXT"><ptype>ALenum</ptype> <name>severity</name></param>
            <param><ptype>ALsizei</ptype> <name>count</name></param>
            <param len="count">const <ptype>ALuint</ptype> *<name>ids</name></param>
            <param><ptype>ALboolean</ptype> <name>enable</name></param>
        </command>
        <command>
            <proto>void <name>alPushDebugGroupDirectEXT</name></proto>
            <param><ptype>ALCcontext</ptype> *<name>context</name></param>
            <param group="DebugSourceEXT"><ptype>ALenum</ptype> <name>source</name></param>
            <param><ptype>ALuint</ptype> <name>id</name></param>
            <param><ptype>ALsizei</ptype> <name>length</name></param>
            <param len="length">const <ptype>ALchar</ptype> *<name>message</name></param>
        </command>
        <command>
            <proto>void <name>alPopDebugGroupDirectEXT</name></proto>
            <param><ptype>ALCcontext</ptype> *<name>context</name></param>
        </command>
        <command>
            <proto><ptype>ALuint</ptype> <name>alGetDebugMessageLogDirectEXT</name></proto>
            <param><ptype>ALCcontext</ptype> *<name>context</name></param>
            <param><ptype>ALuint</ptype> <name>count</name></param>
            <param><ptype>ALsizei</ptype> <name>logBufSize</name></param>
            <param len="count" group="DebugSourceEXT"><ptype>ALenum</ptype> *<name>sources</name></param>
            <param len="count" group="DebugTypeEXT"><ptype>ALenum</ptype> *<name>types</name></param>
            <param len="count"><ptype>ALuint</ptype> *<name>ids</name></param>
            <param len="count" group="DebugSeverityEXT"><ptype>ALenum</ptype> *<name>severities</name></param>
            <param len="count"><ptype>ALsizei</ptype> *<name>lengths</name></param>
            <param len="logBufSize"><ptype>ALchar</ptype> *<name>logBuf</name></param>
        </command>
        <command>
            <proto>void <name>alObjectLabelDirectEXT</name></proto>
            <param><ptype>ALCcontext</ptype> *<name>context</name></param>
            <param group="ObjectIdentifier"><ptype>ALenum</ptype> <name>identifier</name></param>
            <param><ptype>ALuint</ptype> <name>name</name></param>
            <param><ptype>ALsizei</ptype> <name>length</name></param>
            <param len="length">const <ptype>ALchar</ptype> *<name>label</name></param>
        </command>
        <command>
            <proto>void <name>alGetObjectLabelDirectEXT</name></proto>
            <param><ptype>ALCcontext</ptype> *<name>context</name></param>
            <param group="ObjectIdentifier"><ptype>ALenum</ptype> <name>identifier</name></param>
            <param><ptype>ALuint</ptype> <name>name</name></param>
            <param><ptype>ALsizei</ptype> <name>bufSize</name></param>
            <param len="1"><ptype>ALsizei</ptype> *<name>length</name></param>
            <param len="bufSize"><ptype>ALchar</ptype> *<name>label</name></param>
        </command>
        <command>
            <proto>void* <name>alGetPointerDirectEXT</name></proto>
            <param><ptype>ALCcontext</ptype> *<name>context</name></param>
            <param group="PointerPName"><ptype>ALenum</ptype> <name>pname</name></param>
        </command>
        <command>
            <proto>void <name>alGetPointervDirectEXT</name></proto>
            <param><ptype>ALCcontext</ptype> *<name>context</name></param>
            <param group="PointerPName"><ptype>ALenum</ptype> <name>pname</name></param>
            <param>void **<name>values</name></param>
        </command>
        <command>
            <proto>void <name>alRequestFoldbackStartDirect</name></proto>
            <param><ptype>ALCcontext</ptype> *<name>context</name></param>
            <param><ptype>ALenum</ptype> <name>mode</name></param>
            <param><ptype>ALsizei</ptype> <name>count</name></param>
            <param><ptype>ALsizei</ptype> <name>length</name></param>
            <param><ptype>ALfloat</ptype> *<name>mem</name></param>
            <param><ptype>LPALFOLDBACKCALLBACK</ptype> <name>callback</name></param>
        </command>
        <command>
            <proto>void <name>alRequestFoldbackStopDirect</name></proto>
        <param><ptype>ALCcontext</ptype> *<name>context</name></param>
            </command>
        <command>
            <proto>void <name>alBufferSubDataDirectSOFT</name></proto>
            <param><ptype>ALCcontext</ptype> *<name>context</name></param>
            <param class="buffer"><ptype>ALuint</ptype> <name>buffer</name></param>
            <param group="Format"><ptype>ALenum</ptype> <name>format</name></param>
            <param len="size">const <ptype>ALvoid</ptype> *<name>data</name></param>
            <param><ptype>ALsizei</ptype> <name>offset</name></param>
            <param><ptype>ALsizei</ptype> <name>length</name></param>
        </command>
        <command>
            <proto>void <name>alSourcedDirectSOFT</name></proto>
            <param><ptype>ALCcontext</ptype> *<name>context</name></param>
            <param class="source"><ptype>ALuint</ptype> <name>source</name></param>
            <param group="SourceDouble"><ptype>ALenum</ptype> <name>param</name></param>
            <param><ptype>ALdouble</ptype> <name>value</name></param>
        </command>
        <command>
            <proto>void <name>alSource3dDirectSOFT</name></proto>
            <param><ptype>ALCcontext</ptype> *<name>context</name></param>
            <param class="source"><ptype>ALuint</ptype> <name>source</name></param>
            <param group="SourceDouble3"><ptype>ALenum</ptype> <name>param</name></param>
            <param><ptype>ALdouble</ptype> <name>value1</name></param>
            <param><ptype>ALdouble</ptype> <name>value2</name></param>
            <param><ptype>ALdouble</ptype> <name>value3</name></param>
        </command>
        <command>
            <proto>void <name>alSourcedvDirectSOFT</name></proto>
            <param><ptype>ALCcontext</ptype> *<name>context</name></param>
            <param class="source"><ptype>ALuint</ptype> <name>source</name></param>
            <param group="SourceDouble"><ptype>ALenum</ptype> <name>param</name></param>
            <param>const <ptype>ALdouble</ptype> *<name>values</name></param>
        </command>
        <command>
            <proto>void <name>alGetSourcedDirectSOFT</name></proto>
            <param><ptype>ALCcontext</ptype> *<name>context</name></param>
            <param class="source"><ptype>ALuint</ptype> <name>source</name></param>
            <param group="SourceDouble"><ptype>ALenum</ptype> <name>param</name></param>
            <param><ptype>ALdouble</ptype> *<name>value</name></param>
        </command>
        <command>
            <proto>void <name>alGetSource3dDirectSOFT</name></proto>
            <param><ptype>ALCcontext</ptype> *<name>context</name></param>
            <param class="source"><ptype>ALuint</ptype> <name>source</name></param>
            <param group="SourceDouble3"><ptype>ALenum</ptype> <name>param</name></param>
            <param><ptype>ALdouble</ptype> *<name>value1</name></param>
            <param><ptype>ALdouble</ptype> *<name>value2</name></param>
            <param><ptype>ALdouble</ptype> *<name>value3</name></param>
        </command>
        <command>
            <proto>void <name>alGetSourcedvDirectSOFT</name></proto>
            <param><ptype>ALCcontext</ptype> *<name>context</name></param>
            <param class="source"><ptype>ALuint</ptype> <name>source</name></param>
            <param group="SourceDouble"><ptype>ALenum</ptype> <name>param</name></param>
            <param><ptype>ALdouble</ptype> *<name>values</name></param>
        </command>
        <command>
            <proto>void <name>alSourcei64DirectSOFT</name></proto>
            <param><ptype>ALCcontext</ptype> *<name>context</name></param>
            <param class="source"><ptype>ALuint</ptype> <name>source</name></param>
            <param group="SourceInteger"><ptype>ALenum</ptype> <name>param</name></param>
            <param><ptype>ALint64SOFT</ptype> <name>value</name></param>
        </command>
        <command>
            <proto>void <name>alSource3i64DirectSOFT</name></proto>
            <param><ptype>ALCcontext</ptype> *<name>context</name></param>
            <param class="source"><ptype>ALuint</ptype> <name>source</name></param>
            <param group="SourceInteger3"><ptype>ALenum</ptype> <name>param</name></param>
            <param><ptype>ALint64SOFT</ptype> <name>value1</name></param>
            <param><ptype>ALint64SOFT</ptype> <name>value2</name></param>
            <param><ptype>ALint64SOFT</ptype> <name>value3</name></param>
        </command>
        <command>
            <proto>void <name>alSourcei64vDirectSOFT</name></proto>
            <param><ptype>ALCcontext</ptype> *<name>context</name></param>
            <param class="source"><ptype>ALuint</ptype> <name>source</name></param>
            <param group="SourceInteger"><ptype>ALenum</ptype> <name>param</name></param>
            <param>const <ptype>ALint64SOFT</ptype> *<name>values</name></param>
        </command>
        <command>
            <proto>void <name>alGetSourcei64DirectSOFT</name></proto>
            <param><ptype>ALCcontext</ptype> *<name>context</name></param>
            <param class="source"><ptype>ALuint</ptype> <name>source</name></param>
            <param group="SourceInteger"><ptype>ALenum</ptype> <name>param</name></param>
            <param><ptype>ALint64SOFT</ptype> *<name>value</name></param>
        </command>
        <command>
            <proto>void <name>alGetSource3i64DirectSOFT</name></proto>
            <param><ptype>ALCcontext</ptype> *<name>context</name></param>
            <param class="source"><ptype>ALuint</ptype> <name>source</name></param>
            <param group="SourceInteger3"><ptype>ALenum</ptype> <name>param</name></param>
            <param><ptype>ALint64SOFT</ptype> *<name>value1</name></param>
            <param><ptype>ALint64SOFT</ptype> *<name>value2</name></param>
            <param><ptype>ALint64SOFT</ptype> *<name>value3</name></param>
        </command>
        <command>
            <proto>void <name>alGetSourcei64vDirectSOFT</name></proto>
            <param><ptype>ALCcontext</ptype> *<name>context</name></param>
            <param class="source"><ptype>ALuint</ptype> <name>source</name></param>
            <param group="SourceInteger"><ptype>ALenum</ptype> <name>param</name></param>
            <param><ptype>ALint64SOFT</ptype> *<name>values</name></param>
        </command>
        <command>
            <proto>void <name>alDeferUpdatesDirectSOFT</name></proto>
        <param><ptype>ALCcontext</ptype> *<name>context</name></param>
            </command>
        <command>
            <proto>void <name>alProcessUpdatesDirectSOFT</name></proto>
        <param><ptype>ALCcontext</ptype> *<name>context</name></param>
            </command>
        <command>
            <proto>const <ptype>ALchar</ptype>* <name>alGetStringiDirectSOFT</name></proto>
            <param><ptype>ALCcontext</ptype> *<name>context</name></param>
            <param group="StringPName"><ptype>ALenum</ptype> <name>pname</name></param>
            <param><ptype>ALsizei</ptype> <name>index</name></param>
        </command>
        <command>
            <proto>void <name>alEventControlDirectSOFT</name></proto>
            <param><ptype>ALCcontext</ptype> *<name>context</name></param>
            <param><ptype>ALsizei</ptype> <name>count</name></param>
            <param len="count">const <ptype>ALenum</ptype> *<name>types</name></param>
            <param><ptype>ALboolean</ptype> <name>enable</name></param>
        </command>
        <command>
            <proto>void <name>alEventCallbackDirectSOFT</name></proto>
            <param><ptype>ALCcontext</ptype> *<name>context</name></param>
            <param><ptype>ALEVENTPROCSOFT</ptype> <name>callback</name></param>
            <param>void *<name>userParam</name></param>
        </command>
        <command>
            <proto>void* <name>alGetPointerDirectSOFT</name></proto>
            <param><ptype>ALCcontext</ptype> *<name>context</name></param>
            <param group="PointerPName"><ptype>ALenum</ptype> <name>pname</name></param>
        </command>
        <command>
            <proto>void <name>alGetPointervDirectSOFT</name></proto>
            <param><ptype>ALCcontext</ptype> *<name>context</name></param>
            <param group="PointerPName"><ptype>ALenum</ptype> <name>pname</name></param>
            <param>void **<name>values</name></param>
        </command>
        <command>
            <proto>void <name>alBufferCallbackDirectSOFT</name></proto>
            <param><ptype>ALCcontext</ptype> *<name>context</name></param>
            <param class="buffer"><ptype>ALuint</ptype> <name>buffer</name></param>
            <param group="Format"><ptype>ALenum</ptype> <name>format</name></param>
            <param><ptype>ALsizei</ptype> <name>freq</name></param>
            <param><ptype>ALBUFFERCALLBACKTYPESOFT</ptype> <name>callback</name></param>
            <param><ptype>ALvoid</ptype> *<name>userptr</name></param>
        </command>
        <command>
            <proto>void <name>alGetBufferPtrDirectSOFT</name></proto>
            <param><ptype>ALCcontext</ptype> *<name>context</name></param>
            <param class="buffer"><ptype>ALuint</ptype> <name>buffer</name></param>
            <param group="BufferPointerSOFT"><ptype>ALenum</ptype> <name>param</name></param>
            <param><ptype>ALvoid</ptype> **<name>ptr</name></param>
        </command>
        <command>
            <proto>void <name>alGetBuffer3PtrDirectSOFT</name></proto>
            <param><ptype>ALCcontext</ptype> *<name>context</name></param>
            <param class="buffer"><ptype>ALuint</ptype> <name>buffer</name></param>
            <param group="BufferPointerSOFT"><ptype>ALenum</ptype> <name>param</name></param>
            <param><ptype>ALvoid</ptype> **<name>ptr0</name></param>
            <param><ptype>ALvoid</ptype> **<name>ptr1</name></param>
            <param><ptype>ALvoid</ptype> **<name>ptr2</name></param>
        </command>
        <command>
            <proto>void <name>alGetBufferPtrvDirectSOFT</name></proto>
            <param><ptype>ALCcontext</ptype> *<name>context</name></param>
            <param class="buffer"><ptype>ALuint</ptype> <name>buffer</name></param>
            <param group="BufferPointerSOFT"><ptype>ALenum</ptype> <name>param</name></param>
            <param><ptype>ALvoid</ptype> **<name>ptr</name></param>
        </command>
        <command>
            <proto>void <name>alSourcePlayAtTimeDirectSOFT</name></proto>
            <param><ptype>ALCcontext</ptype> *<name>context</name></param>
            <param class="source"><ptype>ALuint</ptype> <name>source</name></param>
            <param><ptype>ALint64SOFT</ptype> <name>start_time</name></param>
        </command>
        <command>
            <proto>void <name>alSourcePlayAtTimevDirectSOFT</name></proto>
            <param><ptype>ALCcontext</ptype> *<name>context</name></param>
            <param><ptype>ALsizei</ptype> <name>n</name></param>
            <param class="source" len="n">const <ptype>ALuint</ptype> *<name>sources</name></param>
            <param><ptype>ALint64SOFT</ptype> <name>start_time</name></param>
        </command>
        <command>
            <proto><ptype>ALenum</ptype> <name>EAXSetDirect</name></proto>
            <param><ptype>ALCcontext</ptype> *<name>context</name></param>
            <param>const struct <ptype>_GUID</ptype> *<name>property_set_id</name></param>
            <param><ptype>ALuint</ptype> <name>property_id</name></param>
            <param><ptype>ALuint</ptype> <name>source_id</name></param>
            <param><ptype>ALvoid</ptype> *<name>value</name></param>
            <param><ptype>ALuint</ptype> <name>value_size</name></param>
        </command>
        <command>
            <proto><ptype>ALenum</ptype> <name>EAXGetDirect</name></proto>
            <param><ptype>ALCcontext</ptype> *<name>context</name></param>
            <param>const struct <ptype>_GUID</ptype> *<name>property_set_id</name></param>
            <param><ptype>ALuint</ptype> <name>property_id</name></param>
            <param><ptype>ALuint</ptype> <name>source_id</name></param>
            <param><ptype>ALvoid</ptype> *<name>value</name></param>
            <param><ptype>ALuint</ptype> <name>value_size</name></param>
        </command>
        <command>
            <proto><ptype>ALboolean</ptype> <name>EAXSetBufferModeDirect</name></proto>
            <param><ptype>ALCcontext</ptype> *<name>context</name></param>
            <param><ptype>ALsizei</ptype> <name>n</name></param>
            <param len="n" class="buffer">const <ptype>ALuint</ptype> *<name>buffers</name></param>
            <param><ptype>ALint</ptype> <name>value</name></param>
        </command>
        <command>
            <proto><ptype>ALenum</ptype> <name>EAXGetBufferModeDirect</name></proto>
            <param><ptype>ALCcontext</ptype> *<name>context</name></param>
            <param class="buffer"><ptype>ALuint</ptype> <name>buffer</name></param>
            <param><ptype>ALint</ptype> *<name>pReserved</name></param>
        </command>
    </commands>

    <commands namespace="ALC">
        <command export="alc" comment="Create and attach a context to the given device.">
            <proto><ptype>ALCcontext</ptype>* <name>alcCreateContext</name></proto>
            <param><ptype>ALCdevice</ptype> *<name>device</name></param>
            <param>const <ptype>ALCint</ptype> *<name>attrlist</name></param>
        </command>
        <command export="alc">
            <comment>
                Makes the given context the active process-wide context. Passing NULL clears
                the active context.
            </comment>
            <proto><ptype>ALCboolean</ptype> <name>alcMakeContextCurrent</name></proto>
            <param><ptype>ALCcontext</ptype> *<name>context</name></param>
        </command>
        <command export="alc" comment="Resumes processing updates for the given context.">
            <proto>void <name>alcProcessContext</name></proto>
            <param><ptype>ALCcontext</ptype> *<name>context</name></param>
        </command>
        <command export="alc" comment="Suspends updates for the given context.">
            <proto>void <name>alcSuspendContext</name></proto>
            <param><ptype>ALCcontext</ptype> *<name>context</name></param>
        </command>
        <command export="alc" comment="Remove a context from its device and destroys it.">
            <proto>void <name>alcDestroyContext</name></proto>
            <param><ptype>ALCcontext</ptype> *<name>context</name></param>
        </command>
        <command export="alc" comment="Returns the currently active context.">
            <proto><ptype>ALCcontext</ptype>* <name>alcGetCurrentContext</name></proto>
        </command>
        <command export="alc" comment="Returns the device that a particular context is attached to.">
            <proto><ptype>ALCdevice</ptype>* <name>alcGetContextsDevice</name></proto>
            <param><ptype>ALCcontext</ptype> *<name>context</name></param>
        </command>
        <command export="alc" comment="Opens the named playback device.">
            <proto><ptype>ALCdevice</ptype>* <name>alcOpenDevice</name></proto>
            <param>const <ptype>ALCchar</ptype> *<name>devicename</name></param>
        </command>
        <command export="alc" comment="Closes the given playback device.">
            <proto><ptype>ALCboolean</ptype> <name>alcCloseDevice</name></proto>
            <param><ptype>ALCdevice</ptype> *<name>device</name></param>
        </command>
        <command export="alc" comment="Obtain the most recent Device error.">
            <proto group="ErrorCode"><ptype>ALCenum</ptype> <name>alcGetError</name></proto>
            <param><ptype>ALCdevice</ptype> *<name>device</name></param>
        </command>
        <command export="alc">
            <comment>
                Query for the presence of an extension on the device. Pass a NULL device to
                query a device-inspecific extension.
            </comment>
            <proto><ptype>ALCboolean</ptype> <name>alcIsExtensionPresent</name></proto>
            <param><ptype>ALCdevice</ptype> *<name>device</name></param>
            <param>const <ptype>ALCchar</ptype> *<name>extname</name></param>
        </command>
        <command export="alc">
            <comment>
                Retrieve the address of a function. Given a non-NULL device, the returned
                function may be device-specific.
            </comment>
            <proto><ptype>ALCvoid</ptype>* <name>alcGetProcAddress</name></proto>
            <param><ptype>ALCdevice</ptype> *<name>device</name></param>
            <param>const <ptype>ALCchar</ptype> *<name>funcname</name></param>
        </command>
        <command export="alc">
            <comment>
                Retrieve the value of an enum. Given a non-NULL device, the returned value
                may be device-specific.
            </comment>
            <proto><ptype>ALCenum</ptype> <name>alcGetEnumValue</name></proto>
            <param><ptype>ALCdevice</ptype> *<name>device</name></param>
            <param>const <ptype>ALCchar</ptype> *<name>enumname</name></param>
        </command>
        <command export="alc" comment="Returns information about the device, and error strings.">
            <proto>const <ptype>ALCchar</ptype>* <name>alcGetString</name></proto>
            <param><ptype>ALCdevice</ptype> *<name>device</name></param>
            <param group="ContextString"><ptype>ALCenum</ptype> <name>param</name></param>
        </command>
        <command export="alc" comment="Returns information about the device and the version of OpenAL.">
            <proto>void <name>alcGetIntegerv</name></proto>
            <param><ptype>ALCdevice</ptype> *<name>device</name></param>
            <param group="ContextFloat"><ptype>ALCenum</ptype> <name>param</name></param>
            <param><ptype>ALCsizei</ptype> <name>size</name></param>
            <param len="size"><ptype>ALCint</ptype> *<name>values</name></param>
        </command>
        <command export="alc">
            <comment>
                Opens the named capture device with the given frequency, format, and buffer
                size.
            </comment>
            <proto><ptype>ALCdevice</ptype>* <name>alcCaptureOpenDevice</name></proto>
            <param>const <ptype>ALCchar</ptype> *<name>devicename</name></param>
            <param><ptype>ALCuint</ptype> <name>frequency</name></param>
            <param group="Format"><ptype>ALCenum</ptype> <name>format</name></param>
            <param><ptype>ALCsizei</ptype> <name>buffersize</name></param>
        </command>
        <command export="alc" comment="Closes the given capture device.">
            <proto><ptype>ALCboolean</ptype> <name>alcCaptureCloseDevice</name></proto>
            <param><ptype>ALCdevice</ptype> *<name>device</name></param>
        </command>
        <command export="alc" comment="Starts capturing samples into the device buffer.">
            <proto>void <name>alcCaptureStart</name></proto>
            <param><ptype>ALCdevice</ptype> *<name>device</name></param>
        </command>
        <command export="alc" comment="Stops capturing samples. Samples in the device buffer remain available.">
            <proto>void <name>alcCaptureStop</name></proto>
            <param><ptype>ALCdevice</ptype> *<name>device</name></param>
        </command>
        <command export="alc" comment="Reads samples from the device buffer.">
            <proto>void <name>alcCaptureSamples</name></proto>
            <param><ptype>ALCdevice</ptype> *<name>device</name></param>
            <param><ptype>ALCvoid</ptype> *<name>buffer</name></param>
            <param><ptype>ALCsizei</ptype> <name>samples</name></param>
        </command>
        <command export="alc">
            <proto><ptype>ALCdevice</ptype>* <name>alcLoopbackOpenDeviceSOFT</name></proto>
            <param>const <ptype>ALCchar</ptype> *<name>deviceName</name></param>
        </command>
        <command export="alc">
            <proto><ptype>ALCboolean</ptype> <name>alcIsRenderFormatSupportedSOFT</name></proto>
            <param><ptype>ALCdevice</ptype> *<name>device</name></param>
            <param><ptype>ALCsizei</ptype> <name>freq</name></param>
            <param group="RenderFormatChannelSOFT"><ptype>ALCenum</ptype> <name>channels</name></param>
            <param group="RenderFormatTypeSOFT"><ptype>ALCenum</ptype> <name>type</name></param>
        </command>
        <command export="alc">
            <proto>void <name>alcRenderSamplesSOFT</name></proto>
            <param><ptype>ALCdevice</ptype> *<name>device</name></param>
            <param><ptype>ALCvoid</ptype> *<name>buffer</name></param>
            <param><ptype>ALCsizei</ptype> <name>samples</name></param>
        </command>
        <command export="alc">
            <proto>void <name>alcDevicePauseSOFT</name></proto>
            <param><ptype>ALCdevice</ptype> *<name>device</name></param>
        </command>
        <command export="alc">
            <proto>void <name>alcDeviceResumeSOFT</name></proto>
            <param><ptype>ALCdevice</ptype> *<name>device</name></param>
        </command>
        <command export="alc">
            <proto>const <ptype>ALchar</ptype>* <name>alcGetStringiSOFT</name></proto>
            <param><ptype>ALCdevice</ptype> *<name>device</name></param>
            <param group="ContextString"><ptype>ALCenum</ptype> <name>param</name></param>
            <param><ptype>ALCsizei</ptype> <name>index</name></param>
        </command>
        <command export="alc">
            <proto><ptype>ALCboolean</ptype> <name>alcResetDeviceSOFT</name></proto>
            <param><ptype>ALCdevice</ptype> *<name>device</name></param>
            <param>const <ptype>ALCint</ptype> *<name>attribs</name></param>
        </command>
        <command export="alc">
            <proto>void <name>alcGetInteger64vSOFT</name></proto>
            <param><ptype>ALCdevice</ptype> *<name>device</name></param>
            <param><ptype>ALCenum</ptype> <name>pname</name></param>
            <!-- TODO: ...vvvvvvv...... wtf? should be ALCsizei surely? -->
            <param><ptype>ALsizei</ptype> <name>size</name></param>
            <param len="size"><ptype>ALCint64SOFT</ptype> *<name>values</name></param>
        </command>
        <command>
            <proto><ptype>ALCboolean</ptype> <name>alcReopenDeviceSOFT</name></proto>
            <param><ptype>ALCdevice</ptype> *<name>device</name></param>
            <param>const <ptype>ALCchar</ptype> *<name>deviceName</name></param>
            <param>const <ptype>ALCint</ptype> *<name>attribs</name></param>
        </command>
        <command>
            <proto group="EventSupportSOFT"><ptype>ALCenum</ptype> <name>alcEventIsSupportedSOFT</name></proto>
            <param group="EventTypeSOFT"><ptype>ALCenum</ptype> <name>eventType</name></param>
            <param group="DeviceTypeSOFT"><ptype>ALCenum</ptype> <name>deviceType</name></param>
        </command>
        <command>
            <proto><ptype>ALCboolean</ptype> <name>alcEventControlSOFT</name></proto>
            <param><ptype>ALCsizei</ptype> <name>count</name></param>
            <param len="count">const <ptype>ALCenum</ptype> *<name>events</name></param>
            <param><ptype>ALCboolean</ptype> <name>enable</name></param>
        </command>
        <command>
            <proto>void <name>alcEventCallbackSOFT</name></proto>
            <param><ptype>ALCEVENTPROCTYPESOFT</ptype> <name>callback</name></param>
            <param>void *<name>userParam</name></param>
        </command>
        <command>
            <proto><ptype>ALCvoid</ptype>* <name>alcGetProcAddress2</name></proto>
            <param><ptype>ALCdevice</ptype> *<name>device</name></param>
            <param>const <ptype>ALCchar</ptype> *<name>funcname</name></param>
        </command>
        <command export="alc" funcpointer="PFNALCSETTHREADCONTEXTPROC">
            <proto><ptype>ALCboolean</ptype> <name>alcSetThreadContext</name></proto>
            <param><ptype>ALCcontext</ptype> *<name>context</name></param>
        </command>
        <command export="alc" funcpointer="PFNALCGETTHREADCONTEXTPROC">
            <proto><ptype>ALCcontext</ptype>* <name>alcGetThreadContext</name></proto>
        </command>
    </commands>

    <feature api="al" name="AL_VERSION_1_0" number="1.0">
        <require comment="Deprecated macros.">
            <type name="OPENAL"/>
            <type name="ALAPI"/>
            <type name="ALAPIENTRY"/>
            <type name="AL_INVALID"/>
            <type name="AL_ILLEGAL_ENUM"/>
            <type name="AL_ILLEGAL_COMMAND"/>
        </require>
        <require>
            <type name="ALboolean"/>
            <type name="ALchar"/>
            <type name="ALbyte"/>
            <type name="ALubyte"/>
            <type name="ALshort"/>
            <type name="ALushort"/>
            <type name="ALint"/>
            <type name="ALuint"/>
            <type name="ALsizei"/>
            <type name="ALenum"/>
            <type name="ALfloat"/>
            <type name="ALdouble"/>
            <type name="ALvoid"/>
        </require>
        <require>
            <enum name="AL_NONE"/>
            <enum name="AL_FALSE"/>
            <enum name="AL_TRUE"/>
            <enum name="AL_SOURCE_RELATIVE"/>
            <enum name="AL_CONE_INNER_ANGLE"/>
            <enum name="AL_CONE_OUTER_ANGLE"/>
            <enum name="AL_PITCH"/>
            <enum name="AL_POSITION"/>
            <enum name="AL_DIRECTION"/>
            <enum name="AL_VELOCITY"/>
            <enum name="AL_LOOPING"/>
            <enum name="AL_BUFFER"/>
            <enum name="AL_GAIN"/>
            <enum name="AL_MIN_GAIN"/>
            <enum name="AL_MAX_GAIN"/>
            <enum name="AL_ORIENTATION"/>
            <enum name="AL_SOURCE_STATE"/>
        </require>
        <require comment="Source state values.">
            <enum name="AL_INITIAL"/>
            <enum name="AL_PLAYING"/>
            <enum name="AL_PAUSED"/>
            <enum name="AL_STOPPED"/>
        </require>
        <require>
            <enum name="AL_BUFFERS_QUEUED"/>
            <enum name="AL_BUFFERS_PROCESSED"/>
            <enum name="AL_REFERENCE_DISTANCE"/>
            <enum name="AL_ROLLOFF_FACTOR"/>
            <enum name="AL_CONE_OUTER_GAIN"/>
            <enum name="AL_MAX_DISTANCE"/>
            <enum name="AL_FORMAT_MONO8"/>
            <enum name="AL_FORMAT_MONO16"/>
            <enum name="AL_FORMAT_STEREO8"/>
            <enum name="AL_FORMAT_STEREO16"/>
            <enum name="AL_FREQUENCY"/>
            <enum name="AL_SIZE"/>
        </require>
        <require comment="Buffer state. Not for public use.">
            <enum name="AL_UNUSED"/>
            <enum name="AL_PENDING"/>
            <enum name="AL_PROCESSED"/>
        </require>
        <require>
            <enum name="AL_NO_ERROR"/>
            <enum name="AL_INVALID_NAME"/>
            <enum name="AL_INVALID_ENUM"/>
            <enum name="AL_INVALID_VALUE"/>
            <enum name="AL_INVALID_OPERATION"/>
            <enum name="AL_OUT_OF_MEMORY"/>
            <enum name="AL_VENDOR"/>
            <enum name="AL_VERSION"/>
            <enum name="AL_RENDERER"/>
            <enum name="AL_EXTENSIONS"/>
            <enum name="AL_DOPPLER_FACTOR"/>
            <enum name="AL_DOPPLER_VELOCITY"/>
            <enum name="AL_DISTANCE_MODEL"/>
        </require>
        <require comment="Distance model values.">
            <enum name="AL_INVERSE_DISTANCE"/>
            <enum name="AL_INVERSE_DISTANCE_CLAMPED"/>
        </require>
        <require comment="Renderer State management.">
            <command name="alEnable"/>
            <command name="alDisable"/>
            <command name="alIsEnabled"/>
        </require>
        <require comment="Context state setting.">
            <command name="alDopplerFactor"/>
            <command name="alDopplerVelocity"/>
            <command name="alDistanceModel"/>
        </require>
        <require comment="Context state retrieval.">
            <command name="alGetString"/>
            <command name="alGetBooleanv"/>
            <command name="alGetIntegerv"/>
            <command name="alGetFloatv"/>
            <command name="alGetDoublev"/>
            <command name="alGetBoolean"/>
            <command name="alGetInteger"/>
            <command name="alGetFloat"/>
            <command name="alGetDouble"/>
        </require>
        <require>
            <command name="alGetError"/>
            <command name="alIsExtensionPresent"/>
            <command name="alGetProcAddress"/>
            <command name="alGetEnumValue"/>
        </require>
        <require comment="Set listener parameters.">
            <command name="alListenerf"/>
            <command name="alListener3f"/>
            <command name="alListenerfv"/>
            <command name="alListeneri"/>
            <command name="alListener3i"/>
            <command name="alListeneriv"/>
        </require>
        <require comment="Get listener parameters.">
            <command name="alGetListenerf"/>
            <command name="alGetListener3f"/>
            <command name="alGetListenerfv"/>
            <command name="alGetListeneri"/>
            <command name="alGetListener3i"/>
            <command name="alGetListeneriv"/>
        </require>
        <require>
            <command name="alGenSources"/>
            <command name="alDeleteSources"/>
            <command name="alIsSource"/>
        </require>
        <require comment="Set source parameters.">
            <command name="alSourcef"/>
            <command name="alSource3f"/>
            <command name="alSourcefv"/>
            <command name="alSourcei"/>
            <command name="alSource3i"/>
            <command name="alSourceiv"/>
        </require>
        <require comment="Get source parameters.">
            <command name="alGetSourcef"/>
            <command name="alGetSource3f"/>
            <command name="alGetSourcefv"/>
            <command name="alGetSourcei"/>
            <command name="alGetSource3i"/>
            <command name="alGetSourceiv"/>
        </require>
        <require>
            <command name="alSourcePlay"/>
            <command name="alSourceStop"/>
            <command name="alSourceRewind"/>
            <command name="alSourcePause"/>
        </require>
        <require>
            <command name="alSourcePlayv"/>
            <command name="alSourceStopv"/>
            <command name="alSourceRewindv"/>
            <command name="alSourcePausev"/>
        </require>
        <require>
            <command name="alSourceQueueBuffers"/>
            <command name="alSourceUnqueueBuffers"/>
        </require>
        <require>
            <command name="alGenBuffers"/>
            <command name="alDeleteBuffers"/>
            <command name="alIsBuffer"/>
            <command name="alBufferData"/>
        </require>
        <require comment="Set buffer parameters.">
            <command name="alBufferf"/>
            <command name="alBuffer3f"/>
            <command name="alBufferfv"/>
            <command name="alBufferi"/>
            <command name="alBuffer3i"/>
            <command name="alBufferiv"/>
        </require>
        <require comment="Get buffer parameters.">
            <command name="alGetBufferf"/>
            <command name="alGetBuffer3f"/>
            <command name="alGetBufferfv"/>
            <command name="alGetBufferi"/>
            <command name="alGetBuffer3i"/>
            <command name="alGetBufferiv"/>
        </require>
    </feature>
    <feature api="al" name="AL_VERSION_1_1" number="1.1">
        <!-- AL_EXT_OFFSET -->
        <require>
            <enum name="AL_SEC_OFFSET"/>
            <enum name="AL_SAMPLE_OFFSET"/>
            <enum name="AL_BYTE_OFFSET"/>
        </require>
        <!-- New attributes as of 1.1 - Section 4.3.2 -->
        <require>
            <enum name="AL_SOURCE_TYPE"/>
        </require>
        <require comment="Source type values.">
            <enum name="AL_STATIC"/>
            <enum name="AL_STREAMING"/>
            <enum name="AL_UNDETERMINED"/>
        </require>
        <!-- New attributes as of 1.1 - Section 5.3.1 -->
        <require>
            <enum name="AL_BITS"/>
            <enum name="AL_CHANNELS"/>
        </require>
        <!-- New model as of 1.1 - Section 3.5.2 -->
        <require>
            <enum name="AL_SPEED_OF_SOUND"/>
            <command name="alSpeedOfSound"/>
        </require>
        <!-- AL_EXT_LINEAR_DISTANCE -->
        <require>
            <enum name="AL_LINEAR_DISTANCE"/>
            <enum name="AL_LINEAR_DISTANCE_CLAMPED"/>
        </require>
        <!-- AL_EXT_EXPONENT_DISTANCE -->
        <require>
            <enum name="AL_EXPONENT_DISTANCE"/>
            <enum name="AL_EXPONENT_DISTANCE_CLAMPED"/>
        </require>
    </feature>
    <!-- NOTE: Taking an executive decision here to match the numbering with OpenAL.
         However, we do add a ALC_VERISON_0_1 for compatibility. -->
    <feature api="alc" name="ALC_VERISON_1_0" number="1.0">
        <require comment="Deprecated macros.">
            <type name="ALCAPI"/>
            <type name="ALCAPIENTRY"/>
            <type name="ALC_INVALID"/>
        </require>
        <require>
            <!-- For compatibility... -->
            <type name="ALC_VERSION_0_1"/>
            <type name="ALCdevice"/>
            <type name="ALCcontext"/>
            <type name="ALCboolean"/>
            <type name="ALCchar"/>
            <type name="ALCbyte"/>
            <type name="ALCubyte"/>
            <type name="ALCshort"/>
            <type name="ALCushort"/>
            <type name="ALCint"/>
            <type name="ALCuint"/>
            <type name="ALCsizei"/>
            <type name="ALCenum"/>
            <type name="ALCfloat"/>
            <type name="ALCdouble"/>
            <type name="ALCvoid"/>
        </require>
        <require>
            <enum name="ALC_FALSE"/>
            <enum name="ALC_TRUE"/>
            <enum name="ALC_FREQUENCY"/>
            <enum name="ALC_REFRESH"/>
            <enum name="ALC_SYNC"/>
            <enum name="ALC_NO_ERROR"/>
            <enum name="ALC_INVALID_DEVICE"/>
            <enum name="ALC_INVALID_CONTEXT"/>
            <enum name="ALC_INVALID_ENUM"/>
            <enum name="ALC_INVALID_VALUE"/>
            <enum name="ALC_OUT_OF_MEMORY"/>
        </require>
        <require>
            <enum name="ALC_MAJOR_VERSION"/>
            <enum name="ALC_MINOR_VERSION"/>
        </require>
        <require>
            <enum name="ALC_ATTRIBUTES_SIZE"/>
            <enum name="ALC_ALL_ATTRIBUTES"/>
        </require>
        <require>
            <enum name="ALC_DEFAULT_DEVICE_SPECIFIER"/>
            <enum name="ALC_DEVICE_SPECIFIER"/>
            <enum name="ALC_EXTENSIONS"/>
        </require>
        <require comment="Context management.">
            <command name="alcCreateContext"/>
            <command name="alcMakeContextCurrent"/>
            <command name="alcProcessContext"/>
            <command name="alcSuspendContext"/>
            <command name="alcDestroyContext"/>
            <command name="alcGetCurrentContext"/>
            <command name="alcGetContextsDevice"/>
        </require>
        <require comment="Device management.">
            <command name="alcOpenDevice"/>
            <command name="alcCloseDevice"/>
        </require>
        <require comment="Error support.">
            <command name="alcGetError"/>
        </require>
        <require comment="Extension support.">
            <command name="alcIsExtensionPresent"/>
            <command name="alcGetProcAddress"/>
            <command name="alcGetEnumValue"/>
        </require>
        <require comment="Query functions.">
            <command name="alcGetString"/>
            <command name="alcGetIntegerv"/>
        </require>
    </feature>
    <feature api="alc" name="ALC_VERISON_1_1" number="1.1">
        <require>
            <enum name="ALC_MONO_SOURCES"/>
            <enum name="ALC_STEREO_SOURCES"/>
        </require>
        <require>
            <type name="ALC_EXT_CAPTURE"/>
            <enum name="ALC_CAPTURE_DEVICE_SPECIFIER"/>
            <enum name="ALC_CAPTURE_DEFAULT_DEVICE_SPECIFIER"/>
            <enum name="ALC_CAPTURE_SAMPLES"/>
            <command name="alcCaptureOpenDevice"/>
            <command name="alcCaptureCloseDevice"/>
            <command name="alcCaptureStart"/>
            <command name="alcCaptureStop"/>
            <command name="alcCaptureSamples"/>
        </require>
        <require>
            <type name="ALC_ENUMERATE_ALL_EXT"/>
            <enum name="ALC_DEFAULT_ALL_DEVICES_SPECIFIER"/>
            <enum name="ALC_ALL_DEVICES_SPECIFIER"/>
        </require>
    </feature>
    <extensions>
        <extension name="AL_LOKI_IMA_ADPCM_format" supported="al">
            <require>
                <enum name="AL_FORMAT_IMA_ADPCM_MONO16_EXT"/>
                <enum name="AL_FORMAT_IMA_ADPCM_STEREO16_EXT"/>
            </require>
        </extension>
        <extension name="AL_LOKI_WAVE_format" supported="al">
            <require>
                <enum name="AL_FORMAT_WAVE_EXT"/>
            </require>
        </extension>
        <extension name="AL_EXT_vorbis" supported="al">
            <require>
                <enum name="AL_FORMAT_VORBIS_EXT"/>
            </require>
        </extension>
        <extension name="AL_LOKI_quadriphonic" supported="al">
            <require>
                <enum name="AL_FORMAT_QUAD8_LOKI"/>
                <enum name="AL_FORMAT_QUAD16_LOKI"/>
            </require>
        </extension>
        <extension name="AL_EXT_float32" supported="al">
            <require>
                <enum name="AL_FORMAT_MONO_FLOAT32"/>
                <enum name="AL_FORMAT_STEREO_FLOAT32"/>
            </require>
        </extension>
        <extension name="AL_EXT_double" supported="al">
            <require>
                <enum name="AL_FORMAT_MONO_DOUBLE_EXT"/>
                <enum name="AL_FORMAT_STEREO_DOUBLE_EXT"/>
            </require>
        </extension>
        <extension name="AL_EXT_MULAW" supported="al">
            <require>
                <enum name="AL_FORMAT_MONO_MULAW_EXT"/>
                <enum name="AL_FORMAT_STEREO_MULAW_EXT"/>
            </require>
        </extension>
        <extension name="AL_EXT_ALAW" supported="al">
            <require>
                <enum name="AL_FORMAT_MONO_ALAW_EXT"/>
                <enum name="AL_FORMAT_STEREO_ALAW_EXT"/>
            </require>
        </extension>
        <extension name="ALC_LOKI_audio_channel" supported="alc">
            <require>
                <enum name="ALC_CHAN_MAIN_LOKI"/>
                <enum name="ALC_CHAN_PCM_LOKI"/>
                <enum name="ALC_CHAN_CD_LOKI"/>
            </require>
        </extension>
        <extension name="AL_EXT_MCFORMATS" supported="al">
            <comment>
                Provides support for surround sound buffer formats with 8, 16, and 32-bit
                samples.

                QUAD8: Unsigned 8-bit, Quadraphonic (Front Left, Front Right, Rear Left,
                       Rear Right).
                QUAD16: Signed 16-bit, Quadraphonic.
                QUAD32: 32-bit float, Quadraphonic.
                REAR8: Unsigned 8-bit, Rear Stereo (Rear Left, Rear Right).
                REAR16: Signed 16-bit, Rear Stereo.
                REAR32: 32-bit float, Rear Stereo.
                51CHN8: Unsigned 8-bit, 5.1 Surround (Front Left, Front Right, Front Center,
                        LFE, Side Left, Side Right). Note that some audio systems may label
                        5.1's Side channels as Rear or Surround; they are equivalent for the
                        purposes of this extension.
                51CHN16: Signed 16-bit, 5.1 Surround.
                51CHN32: 32-bit float, 5.1 Surround.
                61CHN8: Unsigned 8-bit, 6.1 Surround (Front Left, Front Right, Front Center,
                        LFE, Rear Center, Side Left, Side Right).
                61CHN16: Signed 16-bit, 6.1 Surround.
                61CHN32: 32-bit float, 6.1 Surround.
                71CHN8: Unsigned 8-bit, 7.1 Surround (Front Left, Front Right, Front Center,
                        LFE, Rear Left, Rear Right, Side Left, Side Right).
                71CHN16: Signed 16-bit, 7.1 Surround.
                71CHN32: 32-bit float, 7.1 Surround.
            </comment>
            <require>
                <enum name="AL_FORMAT_QUAD8"/>
                <enum name="AL_FORMAT_QUAD16"/>
                <enum name="AL_FORMAT_QUAD32"/>
                <enum name="AL_FORMAT_REAR8"/>
                <enum name="AL_FORMAT_REAR16"/>
                <enum name="AL_FORMAT_REAR32"/>
                <enum name="AL_FORMAT_51CHN8"/>
                <enum name="AL_FORMAT_51CHN16"/>
                <enum name="AL_FORMAT_51CHN32"/>
                <enum name="AL_FORMAT_61CHN8"/>
                <enum name="AL_FORMAT_61CHN16"/>
                <enum name="AL_FORMAT_61CHN32"/>
                <enum name="AL_FORMAT_71CHN8"/>
                <enum name="AL_FORMAT_71CHN16"/>
                <enum name="AL_FORMAT_71CHN32"/>
            </require>
        </extension>
        <extension name="AL_EXT_MULAW_MCFORMATS" supported="al">
            <require>
                <enum name="AL_FORMAT_MONO_MULAW"/>
                <enum name="AL_FORMAT_STEREO_MULAW"/>
                <enum name="AL_FORMAT_QUAD_MULAW"/>
                <enum name="AL_FORMAT_REAR_MULAW"/>
                <enum name="AL_FORMAT_51CHN_MULAW"/>
                <enum name="AL_FORMAT_61CHN_MULAW"/>
                <enum name="AL_FORMAT_71CHN_MULAW"/>
            </require>
        </extension>
        <extension name="AL_EXT_IMA4" supported="al">
            <require>
                <enum name="AL_FORMAT_MONO_IMA4"/>
                <enum name="AL_FORMAT_STEREO_IMA4"/>
            </require>
        </extension>
        <extension name="AL_EXT_IMA4" supported="al">
            <require>
                <enum name="AL_FORMAT_MONO_IMA4"/>
                <enum name="AL_FORMAT_STEREO_IMA4"/>
            </require>
        </extension>
        <extension name="AL_EXT_STATIC_BUFFER" supported="al">
            <require>
                <command name="alBufferDataStatic"/>
            </require>
        </extension>
        <extension name="ALC_EXT_EFX" supported="al|alc" header="efx.h">
            <require api="al">
               <type name="float.h"/>
            </require>
            <require api="alc">
                <type name="ALC_EXT_EFX_NAME"/>
            </require>
            <require api="alc">
                <enum name="ALC_EFX_MAJOR_VERSION"/>
                <enum name="ALC_EFX_MINOR_VERSION"/>
                <enum name="ALC_MAX_AUXILIARY_SENDS"/>
            </require>
            <require api="al" comment="Listener properties">
                <enum name="AL_METERS_PER_UNIT"/>
            </require>
            <require api="al" comment="Source properties.">
                <enum name="AL_DIRECT_FILTER"/>
                <enum name="AL_AUXILIARY_SEND_FILTER"/>
                <enum name="AL_AIR_ABSORPTION_FACTOR"/>
                <enum name="AL_ROOM_ROLLOFF_FACTOR"/>
                <enum name="AL_CONE_OUTER_GAINHF"/>
                <enum name="AL_DIRECT_FILTER_GAINHF_AUTO"/>
                <enum name="AL_AUXILIARY_SEND_FILTER_GAIN_AUTO"/>
                <enum name="AL_AUXILIARY_SEND_FILTER_GAINHF_AUTO"/>
            </require>
            <require api="al" comment="Effect properties."/>
            <require api="al" comment="Reverb effect parameters">
                <enum name="AL_REVERB_DENSITY"/>
                <enum name="AL_REVERB_DIFFUSION"/>
                <enum name="AL_REVERB_GAIN"/>
                <enum name="AL_REVERB_GAINHF"/>
                <enum name="AL_REVERB_DECAY_TIME"/>
                <enum name="AL_REVERB_DECAY_HFRATIO"/>
                <enum name="AL_REVERB_REFLECTIONS_GAIN"/>
                <enum name="AL_REVERB_REFLECTIONS_DELAY"/>
                <enum name="AL_REVERB_LATE_REVERB_GAIN"/>
                <enum name="AL_REVERB_LATE_REVERB_DELAY"/>
                <enum name="AL_REVERB_AIR_ABSORPTION_GAINHF"/>
                <enum name="AL_REVERB_ROOM_ROLLOFF_FACTOR"/>
                <enum name="AL_REVERB_DECAY_HFLIMIT"/>
            </require>
            <require api="al" comment="EAX Reverb effect parameters">
                <enum name="AL_EAXREVERB_DENSITY"/>
                <enum name="AL_EAXREVERB_DIFFUSION"/>
                <enum name="AL_EAXREVERB_GAIN"/>
                <enum name="AL_EAXREVERB_GAINHF"/>
                <enum name="AL_EAXREVERB_GAINLF"/>
                <enum name="AL_EAXREVERB_DECAY_TIME"/>
                <enum name="AL_EAXREVERB_DECAY_HFRATIO"/>
                <enum name="AL_EAXREVERB_DECAY_LFRATIO"/>
                <enum name="AL_EAXREVERB_REFLECTIONS_GAIN"/>
                <enum name="AL_EAXREVERB_REFLECTIONS_DELAY"/>
                <enum name="AL_EAXREVERB_REFLECTIONS_PAN"/>
                <enum name="AL_EAXREVERB_LATE_REVERB_GAIN"/>
                <enum name="AL_EAXREVERB_LATE_REVERB_DELAY"/>
                <enum name="AL_EAXREVERB_LATE_REVERB_PAN"/>
                <enum name="AL_EAXREVERB_ECHO_TIME"/>
                <enum name="AL_EAXREVERB_ECHO_DEPTH"/>
                <enum name="AL_EAXREVERB_MODULATION_TIME"/>
                <enum name="AL_EAXREVERB_MODULATION_DEPTH"/>
                <enum name="AL_EAXREVERB_AIR_ABSORPTION_GAINHF"/>
                <enum name="AL_EAXREVERB_HFREFERENCE"/>
                <enum name="AL_EAXREVERB_LFREFERENCE"/>
                <enum name="AL_EAXREVERB_ROOM_ROLLOFF_FACTOR"/>
                <enum name="AL_EAXREVERB_DECAY_HFLIMIT"/>
            </require>
            <require api="al" comment="Chorus effect parameters">
                <enum name="AL_CHORUS_WAVEFORM"/>
                <enum name="AL_CHORUS_PHASE"/>
                <enum name="AL_CHORUS_RATE"/>
                <enum name="AL_CHORUS_DEPTH"/>
                <enum name="AL_CHORUS_FEEDBACK"/>
                <enum name="AL_CHORUS_DELAY"/>
            </require>
            <require api="al" comment="Distortion effect parameters">
                <enum name="AL_DISTORTION_EDGE"/>
                <enum name="AL_DISTORTION_GAIN"/>
                <enum name="AL_DISTORTION_LOWPASS_CUTOFF"/>
                <enum name="AL_DISTORTION_EQCENTER"/>
                <enum name="AL_DISTORTION_EQBANDWIDTH"/>
            </require>
            <require api="al" comment="Echo effect parameters">
                <enum name="AL_ECHO_DELAY"/>
                <enum name="AL_ECHO_LRDELAY"/>
                <enum name="AL_ECHO_DAMPING"/>
                <enum name="AL_ECHO_FEEDBACK"/>
                <enum name="AL_ECHO_SPREAD"/>
            </require>
            <require api="al" comment="Flanger effect parameters">
                <enum name="AL_FLANGER_WAVEFORM"/>
                <enum name="AL_FLANGER_PHASE"/>
                <enum name="AL_FLANGER_RATE"/>
                <enum name="AL_FLANGER_DEPTH"/>
                <enum name="AL_FLANGER_FEEDBACK"/>
                <enum name="AL_FLANGER_DELAY"/>
            </require>
            <require api="al" comment="Frequency shifter effect parameters">
                <enum name="AL_FREQUENCY_SHIFTER_FREQUENCY"/>
                <enum name="AL_FREQUENCY_SHIFTER_LEFT_DIRECTION"/>
                <enum name="AL_FREQUENCY_SHIFTER_RIGHT_DIRECTION"/>
            </require>
            <require api="al" comment="Vocal morpher effect parameters">
                <enum name="AL_VOCAL_MORPHER_PHONEMEA"/>
                <enum name="AL_VOCAL_MORPHER_PHONEMEA_COARSE_TUNING"/>
                <enum name="AL_VOCAL_MORPHER_PHONEMEB"/>
                <enum name="AL_VOCAL_MORPHER_PHONEMEB_COARSE_TUNING"/>
                <enum name="AL_VOCAL_MORPHER_WAVEFORM"/>
                <enum name="AL_VOCAL_MORPHER_RATE"/>
            </require>
            <require api="al" comment="Pitchshifter effect parameters">
                <enum name="AL_PITCH_SHIFTER_COARSE_TUNE"/>
                <enum name="AL_PITCH_SHIFTER_FINE_TUNE"/>
            </require>
            <require api="al" comment="Ringmodulator effect parameters">
                <enum name="AL_RING_MODULATOR_FREQUENCY"/>
                <enum name="AL_RING_MODULATOR_HIGHPASS_CUTOFF"/>
                <enum name="AL_RING_MODULATOR_WAVEFORM"/>
            </require>
            <require api="al" comment="Autowah effect parameters">
                <enum name="AL_AUTOWAH_ATTACK_TIME"/>
                <enum name="AL_AUTOWAH_RELEASE_TIME"/>
                <enum name="AL_AUTOWAH_RESONANCE"/>
                <enum name="AL_AUTOWAH_PEAK_GAIN"/>
            </require>
            <require api="al" comment="Compressor effect parameters">
                <enum name="AL_COMPRESSOR_ONOFF"/>
            </require>
            <require api="al" comment="Equalizer effect parameters">
                <enum name="AL_EQUALIZER_LOW_GAIN"/>
                <enum name="AL_EQUALIZER_LOW_CUTOFF"/>
                <enum name="AL_EQUALIZER_MID1_GAIN"/>
                <enum name="AL_EQUALIZER_MID1_CENTER"/>
                <enum name="AL_EQUALIZER_MID1_WIDTH"/>
                <enum name="AL_EQUALIZER_MID2_GAIN"/>
                <enum name="AL_EQUALIZER_MID2_CENTER"/>
                <enum name="AL_EQUALIZER_MID2_WIDTH"/>
                <enum name="AL_EQUALIZER_HIGH_GAIN"/>
                <enum name="AL_EQUALIZER_HIGH_CUTOFF"/>
            </require>
            <require api="al" comment="Effect type">
                <enum name="AL_EFFECT_FIRST_PARAMETER"/>
                <enum name="AL_EFFECT_LAST_PARAMETER"/>
                <enum name="AL_EFFECT_TYPE"/>
            </require>
            <require api="al" comment="Effect types, used with the AL_EFFECT_TYPE property">
                <enum name="AL_EFFECT_NULL"/>
                <enum name="AL_EFFECT_REVERB"/>
                <enum name="AL_EFFECT_CHORUS"/>
                <enum name="AL_EFFECT_DISTORTION"/>
                <enum name="AL_EFFECT_ECHO"/>
                <enum name="AL_EFFECT_FLANGER"/>
                <enum name="AL_EFFECT_FREQUENCY_SHIFTER"/>
                <enum name="AL_EFFECT_VOCAL_MORPHER"/>
                <enum name="AL_EFFECT_PITCH_SHIFTER"/>
                <enum name="AL_EFFECT_RING_MODULATOR"/>
                <enum name="AL_EFFECT_AUTOWAH"/>
                <enum name="AL_EFFECT_COMPRESSOR"/>
                <enum name="AL_EFFECT_EQUALIZER"/>
                <enum name="AL_EFFECT_EAXREVERB"/>
            </require>
            <require api="al" comment="Auxiliary Effect Slot properties.">
                <enum name="AL_EFFECTSLOT_EFFECT"/>
                <enum name="AL_EFFECTSLOT_GAIN"/>
                <enum name="AL_EFFECTSLOT_AUXILIARY_SEND_AUTO"/>
            </require>
            <require api="al" comment="NULL Auxiliary Slot ID to disable a source send.">
                <enum name="AL_EFFECTSLOT_NULL"/>
            </require>
            <require api="al" comment="Filter properties."/>
            <require api="al" comment="Lowpass filter parameters">
                <enum name="AL_LOWPASS_GAIN"/>
                <enum name="AL_LOWPASS_GAINHF"/>
            </require>
            <require api="al" comment="Highpass filter parameters">
                <enum name="AL_HIGHPASS_GAIN"/>
                <enum name="AL_HIGHPASS_GAINLF"/>
            </require>
            <require api="al" comment="Bandpass filter parameters">
                <enum name="AL_BANDPASS_GAIN"/>
                <enum name="AL_BANDPASS_GAINLF"/>
                <enum name="AL_BANDPASS_GAINHF"/>
            </require>
            <require api="al" comment="Filter type">
                <enum name="AL_FILTER_FIRST_PARAMETER"/>
                <enum name="AL_FILTER_LAST_PARAMETER"/>
                <enum name="AL_FILTER_TYPE"/>
            </require>
            <require api="al" comment="Filter types, used with the AL_FILTER_TYPE property">
                <enum name="AL_FILTER_NULL"/>
                <enum name="AL_FILTER_LOWPASS"/>
                <enum name="AL_FILTER_HIGHPASS"/>
                <enum name="AL_FILTER_BANDPASS"/>
            </require>
            <require api="al" comment="Effect object function types.">
                <command name="alGenEffects"/>
                <command name="alDeleteEffects"/>
                <command name="alIsEffect"/>
                <command name="alEffecti"/>
                <command name="alEffectiv"/>
                <command name="alEffectf"/>
                <command name="alEffectfv"/>
                <command name="alGetEffecti"/>
                <command name="alGetEffectiv"/>
                <command name="alGetEffectf"/>
                <command name="alGetEffectfv"/>
            </require>
            <require api="al" comment="Filter object function types.">
                <command name="alGenFilters"/>
                <command name="alDeleteFilters"/>
                <command name="alIsFilter"/>
                <command name="alFilteri"/>
                <command name="alFilteriv"/>
                <command name="alFilterf"/>
                <command name="alFilterfv"/>
                <command name="alGetFilteri"/>
                <command name="alGetFilteriv"/>
                <command name="alGetFilterf"/>
                <command name="alGetFilterfv"/>
            </require>
            <require api="al" comment="Auxiliary Effect Slot object function types.">
                <command name="alGenAuxiliaryEffectSlots"/>
                <command name="alDeleteAuxiliaryEffectSlots"/>
                <command name="alIsAuxiliaryEffectSlot"/>
                <command name="alAuxiliaryEffectSloti"/>
                <command name="alAuxiliaryEffectSlotiv"/>
                <command name="alAuxiliaryEffectSlotf"/>
                <command name="alAuxiliaryEffectSlotfv"/>
                <command name="alGetAuxiliaryEffectSloti"/>
                <command name="alGetAuxiliaryEffectSlotiv"/>
                <command name="alGetAuxiliaryEffectSlotf"/>
                <command name="alGetAuxiliaryEffectSlotfv"/>
            </require>
            <require api="al" comment="Lowpass filter">
                <enum name="AL_LOWPASS_MIN_GAIN"/>
                <enum name="AL_LOWPASS_MAX_GAIN"/>
                <enum name="AL_LOWPASS_DEFAULT_GAIN"/>
            </require>
            <require api="al">
                <enum name="AL_LOWPASS_MIN_GAINHF"/>
                <enum name="AL_LOWPASS_MAX_GAINHF"/>
                <enum name="AL_LOWPASS_DEFAULT_GAINHF"/>
            </require>
            <require api="al" comment="Highpass filter">
                <enum name="AL_HIGHPASS_MIN_GAIN"/>
                <enum name="AL_HIGHPASS_MAX_GAIN"/>
                <enum name="AL_HIGHPASS_DEFAULT_GAIN"/>
            </require>
            <require api="al">
                <enum name="AL_HIGHPASS_MIN_GAINLF"/>
                <enum name="AL_HIGHPASS_MAX_GAINLF"/>
                <enum name="AL_HIGHPASS_DEFAULT_GAINLF"/>
            </require>
            <require api="al" comment="Bandpass filter">
                <enum name="AL_BANDPASS_MIN_GAIN"/>
                <enum name="AL_BANDPASS_MAX_GAIN"/>
                <enum name="AL_BANDPASS_DEFAULT_GAIN"/>
            </require>
            <require api="al">
                <enum name="AL_BANDPASS_MIN_GAINHF"/>
                <enum name="AL_BANDPASS_MAX_GAINHF"/>
                <enum name="AL_BANDPASS_DEFAULT_GAINHF"/>
            </require>
            <require api="al">
                <enum name="AL_BANDPASS_MIN_GAINLF"/>
                <enum name="AL_BANDPASS_MAX_GAINLF"/>
                <enum name="AL_BANDPASS_DEFAULT_GAINLF"/>
            </require>
            <require api="al" comment="Effect parameter ranges and defaults."/>
            <require api="al" comment="Standard reverb effect">
                <enum name="AL_REVERB_MIN_DENSITY"/>
                <enum name="AL_REVERB_MAX_DENSITY"/>
                <enum name="AL_REVERB_DEFAULT_DENSITY"/>
            </require>
            <require api="al">
                <enum name="AL_REVERB_MIN_DIFFUSION"/>
                <enum name="AL_REVERB_MAX_DIFFUSION"/>
                <enum name="AL_REVERB_DEFAULT_DIFFUSION"/>
            </require>
            <require api="al">
                <enum name="AL_REVERB_MIN_GAIN"/>
                <enum name="AL_REVERB_MAX_GAIN"/>
                <enum name="AL_REVERB_DEFAULT_GAIN"/>
            </require>
            <require api="al">
                <enum name="AL_REVERB_MIN_GAINHF"/>
                <enum name="AL_REVERB_MAX_GAINHF"/>
                <enum name="AL_REVERB_DEFAULT_GAINHF"/>
            </require>
            <require api="al">
                <enum name="AL_REVERB_MIN_DECAY_TIME"/>
                <enum name="AL_REVERB_MAX_DECAY_TIME"/>
                <enum name="AL_REVERB_DEFAULT_DECAY_TIME"/>
            </require>
            <require api="al">
                <enum name="AL_REVERB_MIN_DECAY_HFRATIO"/>
                <enum name="AL_REVERB_MAX_DECAY_HFRATIO"/>
                <enum name="AL_REVERB_DEFAULT_DECAY_HFRATIO"/>
            </require>
            <require api="al">
                <enum name="AL_REVERB_MIN_REFLECTIONS_GAIN"/>
                <enum name="AL_REVERB_MAX_REFLECTIONS_GAIN"/>
                <enum name="AL_REVERB_DEFAULT_REFLECTIONS_GAIN"/>
            </require>
            <require api="al">
                <enum name="AL_REVERB_MIN_REFLECTIONS_DELAY"/>
                <enum name="AL_REVERB_MAX_REFLECTIONS_DELAY"/>
                <enum name="AL_REVERB_DEFAULT_REFLECTIONS_DELAY"/>
            </require>
            <require api="al">
                <enum name="AL_REVERB_MIN_LATE_REVERB_GAIN"/>
                <enum name="AL_REVERB_MAX_LATE_REVERB_GAIN"/>
                <enum name="AL_REVERB_DEFAULT_LATE_REVERB_GAIN"/>
            </require>
            <require api="al">
                <enum name="AL_REVERB_MIN_LATE_REVERB_DELAY"/>
                <enum name="AL_REVERB_MAX_LATE_REVERB_DELAY"/>
                <enum name="AL_REVERB_DEFAULT_LATE_REVERB_DELAY"/>
            </require>
            <require api="al">
                <enum name="AL_REVERB_MIN_AIR_ABSORPTION_GAINHF"/>
                <enum name="AL_REVERB_MAX_AIR_ABSORPTION_GAINHF"/>
                <enum name="AL_REVERB_DEFAULT_AIR_ABSORPTION_GAINHF"/>
            </require>
            <require api="al">
                <enum name="AL_REVERB_MIN_ROOM_ROLLOFF_FACTOR"/>
                <enum name="AL_REVERB_MAX_ROOM_ROLLOFF_FACTOR"/>
                <enum name="AL_REVERB_DEFAULT_ROOM_ROLLOFF_FACTOR"/>
            </require>
            <require api="al">
                <enum name="AL_REVERB_MIN_DECAY_HFLIMIT"/>
                <enum name="AL_REVERB_MAX_DECAY_HFLIMIT"/>
                <enum name="AL_REVERB_DEFAULT_DECAY_HFLIMIT"/>
            </require>
            <require api="al" comment="EAX reverb effect">
                <enum name="AL_EAXREVERB_MIN_DENSITY"/>
                <enum name="AL_EAXREVERB_MAX_DENSITY"/>
                <enum name="AL_EAXREVERB_DEFAULT_DENSITY"/>
            </require>
            <require api="al">
                <enum name="AL_EAXREVERB_MIN_DIFFUSION"/>
                <enum name="AL_EAXREVERB_MAX_DIFFUSION"/>
                <enum name="AL_EAXREVERB_DEFAULT_DIFFUSION"/>
            </require>
            <require api="al">
                <enum name="AL_EAXREVERB_MIN_GAIN"/>
                <enum name="AL_EAXREVERB_MAX_GAIN"/>
                <enum name="AL_EAXREVERB_DEFAULT_GAIN"/>
            </require>
            <require api="al">
                <enum name="AL_EAXREVERB_MIN_GAINHF"/>
                <enum name="AL_EAXREVERB_MAX_GAINHF"/>
                <enum name="AL_EAXREVERB_DEFAULT_GAINHF"/>
            </require>
            <require api="al">
                <enum name="AL_EAXREVERB_MIN_GAINLF"/>
                <enum name="AL_EAXREVERB_MAX_GAINLF"/>
                <enum name="AL_EAXREVERB_DEFAULT_GAINLF"/>
            </require>
            <require api="al">
                <enum name="AL_EAXREVERB_MIN_DECAY_TIME"/>
                <enum name="AL_EAXREVERB_MAX_DECAY_TIME"/>
                <enum name="AL_EAXREVERB_DEFAULT_DECAY_TIME"/>
            </require>
            <require api="al">
                <enum name="AL_EAXREVERB_MIN_DECAY_HFRATIO"/>
                <enum name="AL_EAXREVERB_MAX_DECAY_HFRATIO"/>
                <enum name="AL_EAXREVERB_DEFAULT_DECAY_HFRATIO"/>
            </require>
            <require api="al">
                <enum name="AL_EAXREVERB_MIN_DECAY_LFRATIO"/>
                <enum name="AL_EAXREVERB_MAX_DECAY_LFRATIO"/>
                <enum name="AL_EAXREVERB_DEFAULT_DECAY_LFRATIO"/>
            </require>
            <require api="al">
                <enum name="AL_EAXREVERB_MIN_REFLECTIONS_GAIN"/>
                <enum name="AL_EAXREVERB_MAX_REFLECTIONS_GAIN"/>
                <enum name="AL_EAXREVERB_DEFAULT_REFLECTIONS_GAIN"/>
            </require>
            <require api="al">
                <enum name="AL_EAXREVERB_MIN_REFLECTIONS_DELAY"/>
                <enum name="AL_EAXREVERB_MAX_REFLECTIONS_DELAY"/>
                <enum name="AL_EAXREVERB_DEFAULT_REFLECTIONS_DELAY"/>
            </require>
            <require api="al">
                <enum name="AL_EAXREVERB_DEFAULT_REFLECTIONS_PAN_XYZ"/>
            </require>
            <require api="al">
                <enum name="AL_EAXREVERB_MIN_LATE_REVERB_GAIN"/>
                <enum name="AL_EAXREVERB_MAX_LATE_REVERB_GAIN"/>
                <enum name="AL_EAXREVERB_DEFAULT_LATE_REVERB_GAIN"/>
            </require>
            <require api="al">
                <enum name="AL_EAXREVERB_MIN_LATE_REVERB_DELAY"/>
                <enum name="AL_EAXREVERB_MAX_LATE_REVERB_DELAY"/>
                <enum name="AL_EAXREVERB_DEFAULT_LATE_REVERB_DELAY"/>
            </require>
            <require api="al">
                <enum name="AL_EAXREVERB_DEFAULT_LATE_REVERB_PAN_XYZ"/>
            </require>
            <require api="al">
                <enum name="AL_EAXREVERB_MIN_ECHO_TIME"/>
                <enum name="AL_EAXREVERB_MAX_ECHO_TIME"/>
                <enum name="AL_EAXREVERB_DEFAULT_ECHO_TIME"/>
            </require>
            <require api="al">
                <enum name="AL_EAXREVERB_MIN_ECHO_DEPTH"/>
                <enum name="AL_EAXREVERB_MAX_ECHO_DEPTH"/>
                <enum name="AL_EAXREVERB_DEFAULT_ECHO_DEPTH"/>
            </require>
            <require api="al">
                <enum name="AL_EAXREVERB_MIN_MODULATION_TIME"/>
                <enum name="AL_EAXREVERB_MAX_MODULATION_TIME"/>
                <enum name="AL_EAXREVERB_DEFAULT_MODULATION_TIME"/>
            </require>
            <require api="al">
                <enum name="AL_EAXREVERB_MIN_MODULATION_DEPTH"/>
                <enum name="AL_EAXREVERB_MAX_MODULATION_DEPTH"/>
                <enum name="AL_EAXREVERB_DEFAULT_MODULATION_DEPTH"/>
            </require>
            <require api="al">
                <enum name="AL_EAXREVERB_MIN_AIR_ABSORPTION_GAINHF"/>
                <enum name="AL_EAXREVERB_MAX_AIR_ABSORPTION_GAINHF"/>
                <enum name="AL_EAXREVERB_DEFAULT_AIR_ABSORPTION_GAINHF"/>
            </require>
            <require api="al">
                <enum name="AL_EAXREVERB_MIN_HFREFERENCE"/>
                <enum name="AL_EAXREVERB_MAX_HFREFERENCE"/>
                <enum name="AL_EAXREVERB_DEFAULT_HFREFERENCE"/>
            </require>
            <require api="al">
                <enum name="AL_EAXREVERB_MIN_LFREFERENCE"/>
                <enum name="AL_EAXREVERB_MAX_LFREFERENCE"/>
                <enum name="AL_EAXREVERB_DEFAULT_LFREFERENCE"/>
            </require>
            <require api="al">
                <enum name="AL_EAXREVERB_MIN_ROOM_ROLLOFF_FACTOR"/>
                <enum name="AL_EAXREVERB_MAX_ROOM_ROLLOFF_FACTOR"/>
                <enum name="AL_EAXREVERB_DEFAULT_ROOM_ROLLOFF_FACTOR"/>
            </require>
            <require api="al">
                <enum name="AL_EAXREVERB_MIN_DECAY_HFLIMIT"/>
                <enum name="AL_EAXREVERB_MAX_DECAY_HFLIMIT"/>
                <enum name="AL_EAXREVERB_DEFAULT_DECAY_HFLIMIT"/>
            </require>
            <require api="al">
                <enum name="AL_CHORUS_WAVEFORM_SINUSOID"/>
                <enum name="AL_CHORUS_WAVEFORM_TRIANGLE"/>
            </require>
            <require api="al">
                <enum name="AL_CHORUS_MIN_WAVEFORM"/>
                <enum name="AL_CHORUS_MAX_WAVEFORM"/>
                <enum name="AL_CHORUS_DEFAULT_WAVEFORM"/>
            </require>
            <require api="al">
                <enum name="AL_CHORUS_MIN_PHASE"/>
                <enum name="AL_CHORUS_MAX_PHASE"/>
                <enum name="AL_CHORUS_DEFAULT_PHASE"/>
            </require>
            <require api="al">
                <enum name="AL_CHORUS_MIN_RATE"/>
                <enum name="AL_CHORUS_MAX_RATE"/>
                <enum name="AL_CHORUS_DEFAULT_RATE"/>
            </require>
            <require api="al">
                <enum name="AL_CHORUS_MIN_DEPTH"/>
                <enum name="AL_CHORUS_MAX_DEPTH"/>
                <enum name="AL_CHORUS_DEFAULT_DEPTH"/>
            </require>
            <require api="al">
                <enum name="AL_CHORUS_MIN_FEEDBACK"/>
                <enum name="AL_CHORUS_MAX_FEEDBACK"/>
                <enum name="AL_CHORUS_DEFAULT_FEEDBACK"/>
            </require>
            <require api="al">
                <enum name="AL_CHORUS_MIN_DELAY"/>
                <enum name="AL_CHORUS_MAX_DELAY"/>
                <enum name="AL_CHORUS_DEFAULT_DELAY"/>
            </require>
            <require api="al" comment="Distortion effect">
                <enum name="AL_DISTORTION_MIN_EDGE"/>
                <enum name="AL_DISTORTION_MAX_EDGE"/>
                <enum name="AL_DISTORTION_DEFAULT_EDGE"/>
            </require>
            <require api="al">
                <enum name="AL_DISTORTION_MIN_GAIN"/>
                <enum name="AL_DISTORTION_MAX_GAIN"/>
                <enum name="AL_DISTORTION_DEFAULT_GAIN"/>
            </require>
            <require api="al">
                <enum name="AL_DISTORTION_MIN_LOWPASS_CUTOFF"/>
                <enum name="AL_DISTORTION_MAX_LOWPASS_CUTOFF"/>
                <enum name="AL_DISTORTION_DEFAULT_LOWPASS_CUTOFF"/>
            </require>
            <require api="al">
                <enum name="AL_DISTORTION_MIN_EQCENTER"/>
                <enum name="AL_DISTORTION_MAX_EQCENTER"/>
                <enum name="AL_DISTORTION_DEFAULT_EQCENTER"/>
            </require>
            <require api="al">
                <enum name="AL_DISTORTION_MIN_EQBANDWIDTH"/>
                <enum name="AL_DISTORTION_MAX_EQBANDWIDTH"/>
                <enum name="AL_DISTORTION_DEFAULT_EQBANDWIDTH"/>
            </require>
            <require api="al" comment="Echo effect">
                <enum name="AL_ECHO_MIN_DELAY"/>
                <enum name="AL_ECHO_MAX_DELAY"/>
                <enum name="AL_ECHO_DEFAULT_DELAY"/>
            </require>
            <require api="al">
                <enum name="AL_ECHO_MIN_LRDELAY"/>
                <enum name="AL_ECHO_MAX_LRDELAY"/>
                <enum name="AL_ECHO_DEFAULT_LRDELAY"/>
            </require>
            <require api="al">
                <enum name="AL_ECHO_MIN_DAMPING"/>
                <enum name="AL_ECHO_MAX_DAMPING"/>
                <enum name="AL_ECHO_DEFAULT_DAMPING"/>
            </require>
            <require api="al">
                <enum name="AL_ECHO_MIN_FEEDBACK"/>
                <enum name="AL_ECHO_MAX_FEEDBACK"/>
                <enum name="AL_ECHO_DEFAULT_FEEDBACK"/>
            </require>
            <require api="al">
                <enum name="AL_ECHO_MIN_SPREAD"/>
                <enum name="AL_ECHO_MAX_SPREAD"/>
                <enum name="AL_ECHO_DEFAULT_SPREAD"/>
            </require>
            <require api="al" comment="Flanger effect">
                <enum name="AL_FLANGER_WAVEFORM_SINUSOID"/>
                <enum name="AL_FLANGER_WAVEFORM_TRIANGLE"/>
            </require>
            <require api="al">
                <enum name="AL_FLANGER_MIN_WAVEFORM"/>
                <enum name="AL_FLANGER_MAX_WAVEFORM"/>
                <enum name="AL_FLANGER_DEFAULT_WAVEFORM"/>
            </require>
            <require api="al">
                <enum name="AL_FLANGER_MIN_PHASE"/>
                <enum name="AL_FLANGER_MAX_PHASE"/>
                <enum name="AL_FLANGER_DEFAULT_PHASE"/>
            </require>
            <require api="al">
                <enum name="AL_FLANGER_MIN_RATE"/>
                <enum name="AL_FLANGER_MAX_RATE"/>
                <enum name="AL_FLANGER_DEFAULT_RATE"/>
            </require>
            <require api="al">
                <enum name="AL_FLANGER_MIN_DEPTH"/>
                <enum name="AL_FLANGER_MAX_DEPTH"/>
                <enum name="AL_FLANGER_DEFAULT_DEPTH"/>
            </require>
            <require api="al">
                <enum name="AL_FLANGER_MIN_FEEDBACK"/>
                <enum name="AL_FLANGER_MAX_FEEDBACK"/>
                <enum name="AL_FLANGER_DEFAULT_FEEDBACK"/>
            </require>
            <require api="al">
                <enum name="AL_FLANGER_MIN_DELAY"/>
                <enum name="AL_FLANGER_MAX_DELAY"/>
                <enum name="AL_FLANGER_DEFAULT_DELAY"/>
            </require>
            <require api="al" comment="Frequency shifter effect">
                <enum name="AL_FREQUENCY_SHIFTER_MIN_FREQUENCY"/>
                <enum name="AL_FREQUENCY_SHIFTER_MAX_FREQUENCY"/>
                <enum name="AL_FREQUENCY_SHIFTER_DEFAULT_FREQUENCY"/>
            </require>
            <require api="al">
                <enum name="AL_FREQUENCY_SHIFTER_MIN_LEFT_DIRECTION"/>
                <enum name="AL_FREQUENCY_SHIFTER_MAX_LEFT_DIRECTION"/>
                <enum name="AL_FREQUENCY_SHIFTER_DEFAULT_LEFT_DIRECTION"/>
            </require>
            <require api="al">
                <enum name="AL_FREQUENCY_SHIFTER_DIRECTION_DOWN"/>
                <enum name="AL_FREQUENCY_SHIFTER_DIRECTION_UP"/>
                <enum name="AL_FREQUENCY_SHIFTER_DIRECTION_OFF"/>
            </require>
            <require api="al">
                <enum name="AL_FREQUENCY_SHIFTER_MIN_RIGHT_DIRECTION"/>
                <enum name="AL_FREQUENCY_SHIFTER_MAX_RIGHT_DIRECTION"/>
                <enum name="AL_FREQUENCY_SHIFTER_DEFAULT_RIGHT_DIRECTION"/>
            </require>
            <require api="al" comment="Vocal morpher effect">
                <enum name="AL_VOCAL_MORPHER_MIN_PHONEMEA"/>
                <enum name="AL_VOCAL_MORPHER_MAX_PHONEMEA"/>
                <enum name="AL_VOCAL_MORPHER_DEFAULT_PHONEMEA"/>
            </require>
            <require api="al">
                <enum name="AL_VOCAL_MORPHER_MIN_PHONEMEA_COARSE_TUNING"/>
                <enum name="AL_VOCAL_MORPHER_MAX_PHONEMEA_COARSE_TUNING"/>
                <enum name="AL_VOCAL_MORPHER_DEFAULT_PHONEMEA_COARSE_TUNING"/>
            </require>
            <require api="al">
                <enum name="AL_VOCAL_MORPHER_MIN_PHONEMEB"/>
                <enum name="AL_VOCAL_MORPHER_MAX_PHONEMEB"/>
                <enum name="AL_VOCAL_MORPHER_DEFAULT_PHONEMEB"/>
            </require>
            <require api="al">
                <enum name="AL_VOCAL_MORPHER_MIN_PHONEMEB_COARSE_TUNING"/>
                <enum name="AL_VOCAL_MORPHER_MAX_PHONEMEB_COARSE_TUNING"/>
                <enum name="AL_VOCAL_MORPHER_DEFAULT_PHONEMEB_COARSE_TUNING"/>
            </require>
            <require api="al">
                <enum name="AL_VOCAL_MORPHER_PHONEME_A"/>
                <enum name="AL_VOCAL_MORPHER_PHONEME_E"/>
                <enum name="AL_VOCAL_MORPHER_PHONEME_I"/>
                <enum name="AL_VOCAL_MORPHER_PHONEME_O"/>
                <enum name="AL_VOCAL_MORPHER_PHONEME_U"/>
                <enum name="AL_VOCAL_MORPHER_PHONEME_AA"/>
                <enum name="AL_VOCAL_MORPHER_PHONEME_AE"/>
                <enum name="AL_VOCAL_MORPHER_PHONEME_AH"/>
                <enum name="AL_VOCAL_MORPHER_PHONEME_AO"/>
                <enum name="AL_VOCAL_MORPHER_PHONEME_EH"/>
                <enum name="AL_VOCAL_MORPHER_PHONEME_ER"/>
                <enum name="AL_VOCAL_MORPHER_PHONEME_IH"/>
                <enum name="AL_VOCAL_MORPHER_PHONEME_IY"/>
                <enum name="AL_VOCAL_MORPHER_PHONEME_UH"/>
                <enum name="AL_VOCAL_MORPHER_PHONEME_UW"/>
                <enum name="AL_VOCAL_MORPHER_PHONEME_B"/>
                <enum name="AL_VOCAL_MORPHER_PHONEME_D"/>
                <enum name="AL_VOCAL_MORPHER_PHONEME_F"/>
                <enum name="AL_VOCAL_MORPHER_PHONEME_G"/>
                <enum name="AL_VOCAL_MORPHER_PHONEME_J"/>
                <enum name="AL_VOCAL_MORPHER_PHONEME_K"/>
                <enum name="AL_VOCAL_MORPHER_PHONEME_L"/>
                <enum name="AL_VOCAL_MORPHER_PHONEME_M"/>
                <enum name="AL_VOCAL_MORPHER_PHONEME_N"/>
                <enum name="AL_VOCAL_MORPHER_PHONEME_P"/>
                <enum name="AL_VOCAL_MORPHER_PHONEME_R"/>
                <enum name="AL_VOCAL_MORPHER_PHONEME_S"/>
                <enum name="AL_VOCAL_MORPHER_PHONEME_T"/>
                <enum name="AL_VOCAL_MORPHER_PHONEME_V"/>
                <enum name="AL_VOCAL_MORPHER_PHONEME_Z"/>
            </require>
            <require api="al">
                <enum name="AL_VOCAL_MORPHER_WAVEFORM_SINUSOID"/>
                <enum name="AL_VOCAL_MORPHER_WAVEFORM_TRIANGLE"/>
                <enum name="AL_VOCAL_MORPHER_WAVEFORM_SAWTOOTH"/>
            </require>
            <require api="al">
                <enum name="AL_VOCAL_MORPHER_MIN_WAVEFORM"/>
                <enum name="AL_VOCAL_MORPHER_MAX_WAVEFORM"/>
                <enum name="AL_VOCAL_MORPHER_DEFAULT_WAVEFORM"/>
            </require>
            <require api="al">
                <enum name="AL_VOCAL_MORPHER_MIN_RATE"/>
                <enum name="AL_VOCAL_MORPHER_MAX_RATE"/>
                <enum name="AL_VOCAL_MORPHER_DEFAULT_RATE"/>
            </require>
            <require api="al" comment="Pitch shifter effect">
                <enum name="AL_PITCH_SHIFTER_MIN_COARSE_TUNE"/>
                <enum name="AL_PITCH_SHIFTER_MAX_COARSE_TUNE"/>
                <enum name="AL_PITCH_SHIFTER_DEFAULT_COARSE_TUNE"/>
            </require>
            <require api="al">
                <enum name="AL_PITCH_SHIFTER_MIN_FINE_TUNE"/>
                <enum name="AL_PITCH_SHIFTER_MAX_FINE_TUNE"/>
                <enum name="AL_PITCH_SHIFTER_DEFAULT_FINE_TUNE"/>
            </require>
            <require api="al" comment="Ring modulator effect">
                <enum name="AL_RING_MODULATOR_MIN_FREQUENCY"/>
                <enum name="AL_RING_MODULATOR_MAX_FREQUENCY"/>
                <enum name="AL_RING_MODULATOR_DEFAULT_FREQUENCY"/>
            </require>
            <require api="al">
                <enum name="AL_RING_MODULATOR_MIN_HIGHPASS_CUTOFF"/>
                <enum name="AL_RING_MODULATOR_MAX_HIGHPASS_CUTOFF"/>
                <enum name="AL_RING_MODULATOR_DEFAULT_HIGHPASS_CUTOFF"/>
            </require>
            <require api="al">
                <enum name="AL_RING_MODULATOR_SINUSOID"/>
                <enum name="AL_RING_MODULATOR_SAWTOOTH"/>
                <enum name="AL_RING_MODULATOR_SQUARE"/>
            </require>
            <require api="al">
                <enum name="AL_RING_MODULATOR_MIN_WAVEFORM"/>
                <enum name="AL_RING_MODULATOR_MAX_WAVEFORM"/>
                <enum name="AL_RING_MODULATOR_DEFAULT_WAVEFORM"/>
            </require>
            <require api="al" comment="Autowah effect">
                <enum name="AL_AUTOWAH_MIN_ATTACK_TIME"/>
                <enum name="AL_AUTOWAH_MAX_ATTACK_TIME"/>
                <enum name="AL_AUTOWAH_DEFAULT_ATTACK_TIME"/>
            </require>
            <require api="al">
                <enum name="AL_AUTOWAH_MIN_RELEASE_TIME"/>
                <enum name="AL_AUTOWAH_MAX_RELEASE_TIME"/>
                <enum name="AL_AUTOWAH_DEFAULT_RELEASE_TIME"/>
            </require>
            <require api="al">
                <enum name="AL_AUTOWAH_MIN_RESONANCE"/>
                <enum name="AL_AUTOWAH_MAX_RESONANCE"/>
                <enum name="AL_AUTOWAH_DEFAULT_RESONANCE"/>
            </require>
            <require api="al">
                <enum name="AL_AUTOWAH_MIN_PEAK_GAIN"/>
                <enum name="AL_AUTOWAH_MAX_PEAK_GAIN"/>
                <enum name="AL_AUTOWAH_DEFAULT_PEAK_GAIN"/>
            </require>
            <require api="al" comment="Compressor effect">
                <enum name="AL_COMPRESSOR_MIN_ONOFF"/>
                <enum name="AL_COMPRESSOR_MAX_ONOFF"/>
                <enum name="AL_COMPRESSOR_DEFAULT_ONOFF"/>
            </require>
            <require api="al" comment="Equalizer effect">
                <enum name="AL_EQUALIZER_MIN_LOW_GAIN"/>
                <enum name="AL_EQUALIZER_MAX_LOW_GAIN"/>
                <enum name="AL_EQUALIZER_DEFAULT_LOW_GAIN"/>
            </require>
            <require api="al">
                <enum name="AL_EQUALIZER_MIN_LOW_CUTOFF"/>
                <enum name="AL_EQUALIZER_MAX_LOW_CUTOFF"/>
                <enum name="AL_EQUALIZER_DEFAULT_LOW_CUTOFF"/>
            </require>
            <require api="al">
                <enum name="AL_EQUALIZER_MIN_MID1_GAIN"/>
                <enum name="AL_EQUALIZER_MAX_MID1_GAIN"/>
                <enum name="AL_EQUALIZER_DEFAULT_MID1_GAIN"/>
            </require>
            <require api="al">
                <enum name="AL_EQUALIZER_MIN_MID1_CENTER"/>
                <enum name="AL_EQUALIZER_MAX_MID1_CENTER"/>
                <enum name="AL_EQUALIZER_DEFAULT_MID1_CENTER"/>
            </require>
            <require api="al">
                <enum name="AL_EQUALIZER_MIN_MID1_WIDTH"/>
                <enum name="AL_EQUALIZER_MAX_MID1_WIDTH"/>
                <enum name="AL_EQUALIZER_DEFAULT_MID1_WIDTH"/>
            </require>
            <require api="al">
                <enum name="AL_EQUALIZER_MIN_MID2_GAIN"/>
                <enum name="AL_EQUALIZER_MAX_MID2_GAIN"/>
                <enum name="AL_EQUALIZER_DEFAULT_MID2_GAIN"/>
            </require>
            <require api="al">
                <enum name="AL_EQUALIZER_MIN_MID2_CENTER"/>
                <enum name="AL_EQUALIZER_MAX_MID2_CENTER"/>
                <enum name="AL_EQUALIZER_DEFAULT_MID2_CENTER"/>
            </require>
            <require api="al">
                <enum name="AL_EQUALIZER_MIN_MID2_WIDTH"/>
                <enum name="AL_EQUALIZER_MAX_MID2_WIDTH"/>
                <enum name="AL_EQUALIZER_DEFAULT_MID2_WIDTH"/>
            </require>
            <require api="al">
                <enum name="AL_EQUALIZER_MIN_HIGH_GAIN"/>
                <enum name="AL_EQUALIZER_MAX_HIGH_GAIN"/>
                <enum name="AL_EQUALIZER_DEFAULT_HIGH_GAIN"/>
            </require>
            <require api="al">
                <enum name="AL_EQUALIZER_MIN_HIGH_CUTOFF"/>
                <enum name="AL_EQUALIZER_MAX_HIGH_CUTOFF"/>
                <enum name="AL_EQUALIZER_DEFAULT_HIGH_CUTOFF"/>
            </require>
            <require api="al" comment="Source parameter value ranges and defaults.">
                <enum name="AL_MIN_AIR_ABSORPTION_FACTOR"/>
                <enum name="AL_MAX_AIR_ABSORPTION_FACTOR"/>
                <enum name="AL_DEFAULT_AIR_ABSORPTION_FACTOR"/>
            </require>
            <require api="al">
                <enum name="AL_MIN_ROOM_ROLLOFF_FACTOR"/>
                <enum name="AL_MAX_ROOM_ROLLOFF_FACTOR"/>
                <enum name="AL_DEFAULT_ROOM_ROLLOFF_FACTOR"/>
            </require>
            <require api="al">
                <enum name="AL_MIN_CONE_OUTER_GAINHF"/>
                <enum name="AL_MAX_CONE_OUTER_GAINHF"/>
                <enum name="AL_DEFAULT_CONE_OUTER_GAINHF"/>
            </require>
            <require api="al">
                <enum name="AL_MIN_DIRECT_FILTER_GAINHF_AUTO"/>
                <enum name="AL_MAX_DIRECT_FILTER_GAINHF_AUTO"/>
                <enum name="AL_DEFAULT_DIRECT_FILTER_GAINHF_AUTO"/>
            </require>
            <require api="al">
                <enum name="AL_MIN_AUXILIARY_SEND_FILTER_GAIN_AUTO"/>
                <enum name="AL_MAX_AUXILIARY_SEND_FILTER_GAIN_AUTO"/>
                <enum name="AL_DEFAULT_AUXILIARY_SEND_FILTER_GAIN_AUTO"/>
            </require>
            <require api="al">
                <enum name="AL_MIN_AUXILIARY_SEND_FILTER_GAINHF_AUTO"/>
                <enum name="AL_MAX_AUXILIARY_SEND_FILTER_GAINHF_AUTO"/>
                <enum name="AL_DEFAULT_AUXILIARY_SEND_FILTER_GAINHF_AUTO"/>
            </require>
            <require api="al" comment="Listener parameter value ranges and defaults">
                <enum name="AL_MIN_METERS_PER_UNIT"/>
                <enum name="AL_MAX_METERS_PER_UNIT"/>
                <enum name="AL_DEFAULT_METERS_PER_UNIT"/>
            </require>
        </extension>
        <extension name="ALC_EXT_disconnect" supported="alc">
            <require>
                <enum name="ALC_CONNECTED"/>
            </require>
        </extension>
        <extension name="ALC_EXT_thread_local_context" supported="alc">
            <require>
                <command name="alcSetThreadContext"/>
                <command name="alcGetThreadContext"/>
            </require>
        </extension>
        <extension name="AL_EXT_source_distance_model" supported="al">
            <require>
                <enum name="AL_SOURCE_DISTANCE_MODEL"/>
            </require>
        </extension>
        <extension name="AL_SOFT_buffer_sub_data" supported="al">
            <require>
                <enum name="AL_BYTE_RW_OFFSETS_SOFT"/>
                <enum name="AL_SAMPLE_RW_OFFSETS_SOFT"/>
                <command name="alBufferSubDataSOFT"/>
            </require>
        </extension>
        <extension name="AL_SOFT_loop_points" supported="al">
            <require>
                <enum name="AL_LOOP_POINTS_SOFT"/>
            </require>
        </extension>
        <extension name="AL_EXT_FOLDBACK" supported="al">
            <require>
                <type name="AL_EXT_FOLDBACK_NAME"/>
                <enum name="AL_FOLDBACK_EVENT_BLOCK"/>
                <enum name="AL_FOLDBACK_EVENT_START"/>
                <enum name="AL_FOLDBACK_EVENT_STOP"/>
                <enum name="AL_FOLDBACK_MODE_MONO"/>
                <enum name="AL_FOLDBACK_MODE_STEREO"/>
                <type name="LPALFOLDBACKCALLBACK"/>
                <command name="alRequestFoldbackStart"/>
                <command name="alRequestFoldbackStop"/>
            </require>
        </extension>
        <extension name="ALC_EXT_DEDICATED" supported="al">
            <require>
                <enum name="AL_DEDICATED_GAIN"/>
                <enum name="AL_EFFECT_DEDICATED_DIALOGUE"/>
                <enum name="AL_EFFECT_DEDICATED_LOW_FREQUENCY_EFFECT"/>
            </require>
        </extension>
        <extension name="ALC_EXT_DEDICATED" supported="al">
            <require comment="Channel configurations">
                <enum name="AL_MONO_SOFT"/>
                <enum name="AL_STEREO_SOFT"/>
                <enum name="AL_REAR_SOFT"/>
                <enum name="AL_QUAD_SOFT"/>
                <enum name="AL_5POINT1_SOFT"/>
                <enum name="AL_6POINT1_SOFT"/>
                <enum name="AL_7POINT1_SOFT"/>
            </require>
            <require comment="Sample types">
                <enum name="AL_BYTE_SOFT"/>
                <enum name="AL_UNSIGNED_BYTE_SOFT"/>
                <enum name="AL_SHORT_SOFT"/>
                <enum name="AL_UNSIGNED_SHORT_SOFT"/>
                <enum name="AL_INT_SOFT"/>
                <enum name="AL_UNSIGNED_INT_SOFT"/>
                <enum name="AL_FLOAT_SOFT"/>
                <enum name="AL_DOUBLE_SOFT"/>
                <enum name="AL_BYTE3_SOFT"/>
                <enum name="AL_UNSIGNED_BYTE3_SOFT"/>
            </require>
            <require comment="Storage formats">
                <enum name="AL_MONO8_SOFT"/>
                <enum name="AL_MONO16_SOFT"/>
                <enum name="AL_MONO32F_SOFT"/>
                <enum name="AL_STEREO8_SOFT"/>
                <enum name="AL_STEREO16_SOFT"/>
                <enum name="AL_STEREO32F_SOFT"/>
                <enum name="AL_QUAD8_SOFT"/>
                <enum name="AL_QUAD16_SOFT"/>
                <enum name="AL_QUAD32F_SOFT"/>
                <enum name="AL_REAR8_SOFT"/>
                <enum name="AL_REAR16_SOFT"/>
                <enum name="AL_REAR32F_SOFT"/>
                <enum name="AL_5POINT1_8_SOFT"/>
                <enum name="AL_5POINT1_16_SOFT"/>
                <enum name="AL_5POINT1_32F_SOFT"/>
                <enum name="AL_6POINT1_8_SOFT"/>
                <enum name="AL_6POINT1_16_SOFT"/>
                <enum name="AL_6POINT1_32F_SOFT"/>
                <enum name="AL_7POINT1_8_SOFT"/>
                <enum name="AL_7POINT1_16_SOFT"/>
                <enum name="AL_7POINT1_32F_SOFT"/>
            </require>
            <require comment="Buffer attributes">
                <enum name="AL_INTERNAL_FORMAT_SOFT"/>
                <enum name="AL_BYTE_LENGTH_SOFT"/>
                <enum name="AL_SAMPLE_LENGTH_SOFT"/>
                <enum name="AL_SEC_LENGTH_SOFT"/>
            </require>
            <require>
                <command name="alBufferSamplesSOFT"/>
                <command name="alBufferSubSamplesSOFT"/>
                <command name="alGetBufferSamplesSOFT"/>
                <command name="alIsBufferFormatSupportedSOFT"/>
            </require>
        </extension>
        <extension name="AL_SOFT_direct_channels" supported="al">
            <require>
                <enum name="AL_DIRECT_CHANNELS_SOFT"/>
            </require>
        </extension>
        <extension name="ALC_SOFT_loopback" supported="alc">
            <require>
                <enum name="ALC_FORMAT_CHANNELS_SOFT"/>
                <enum name="ALC_FORMAT_TYPE_SOFT"/>
            </require>
            <require comment="Sample types">
                <enum name="ALC_BYTE_SOFT"/>
                <enum name="ALC_UNSIGNED_BYTE_SOFT"/>
                <enum name="ALC_SHORT_SOFT"/>
                <enum name="ALC_UNSIGNED_SHORT_SOFT"/>
                <enum name="ALC_INT_SOFT"/>
                <enum name="ALC_UNSIGNED_INT_SOFT"/>
                <enum name="ALC_FLOAT_SOFT"/>
            </require>
            <require comment="Channel configurations">
                <enum name="ALC_MONO_SOFT"/>
                <enum name="ALC_STEREO_SOFT"/>
                <enum name="ALC_QUAD_SOFT"/>
                <enum name="ALC_5POINT1_SOFT"/>
                <enum name="ALC_6POINT1_SOFT"/>
                <enum name="ALC_7POINT1_SOFT"/>
            </require>
            <require>
                <command name="alcLoopbackOpenDeviceSOFT"/>
                <command name="alcIsRenderFormatSupportedSOFT"/>
                <command name="alcRenderSamplesSOFT"/>
            </require>
        </extension>
        <extension name="AL_EXT_STEREO_ANGLES" supported="al">
            <require>
                <enum name="AL_STEREO_ANGLES"/>
            </require>
        </extension>
        <extension name="AL_EXT_SOURCE_RADIUS" supported="al">
            <require>
                <enum name="AL_SOURCE_RADIUS"/>
            </require>
        </extension>
        <extension name="AL_SOFT_source_latency" supported="al">
            <require>
                <enum name="AL_SAMPLE_OFFSET_LATENCY_SOFT"/>
                <enum name="AL_SEC_OFFSET_LATENCY_SOFT"/>
                <type name="ALint64SOFT"/>
                <type name="ALuint64SOFT"/>
                <command name="alSourcedSOFT"/>
                <command name="alSource3dSOFT"/>
                <command name="alSourcedvSOFT"/>
                <command name="alGetSourcedSOFT"/>
                <command name="alGetSource3dSOFT"/>
                <command name="alGetSourcedvSOFT"/>
                <command name="alSourcei64SOFT"/>
                <command name="alSource3i64SOFT"/>
                <command name="alSourcei64vSOFT"/>
                <command name="alGetSourcei64SOFT"/>
                <command name="alGetSource3i64SOFT"/>
                <command name="alGetSourcei64vSOFT"/>
            </require>
        </extension>
        <extension name="ALC_EXT_DEFAULT_FILTER_ORDER" supported="alc">
            <require>
                <enum name="ALC_DEFAULT_FILTER_ORDER"/>
            </require>
        </extension>
        <extension name="AL_SOFT_deferred_updates" supported="al">
            <require>
                <enum name="AL_DEFERRED_UPDATES_SOFT"/>
                <command name="alDeferUpdatesSOFT"/>
                <command name="alProcessUpdatesSOFT"/>
            </require>
        </extension>
        <extension name="AL_SOFT_block_alignment" supported="al">
            <require>
                <enum name="AL_UNPACK_BLOCK_ALIGNMENT_SOFT"/>
                <enum name="AL_PACK_BLOCK_ALIGNMENT_SOFT"/>
            </require>
        </extension>
        <extension name="AL_SOFT_MSADPCM" supported="al">
            <require>
                <enum name="AL_FORMAT_MONO_MSADPCM_SOFT"/>
                <enum name="AL_FORMAT_STEREO_MSADPCM_SOFT"/>
            </require>
        </extension>
        <extension name="AL_SOFT_source_length" supported="al">
            <require>
                <enum name="AL_BYTE_LENGTH_SOFT"/>
                <enum name="AL_SAMPLE_LENGTH_SOFT"/>
                <enum name="AL_SEC_LENGTH_SOFT"/>
            </require>
        </extension>
        <extension name="AL_SOFT_buffer_length_query" supported="al">
            <require>
                <enum name="AL_BYTE_LENGTH_SOFT"/>
                <enum name="AL_SAMPLE_LENGTH_SOFT"/>
                <enum name="AL_SEC_LENGTH_SOFT"/>
            </require>
        </extension>
        <extension name="ALC_SOFT_pause_device" supported="alc">
            <require>
                <command name="alcDevicePauseSOFT"/>
                <command name="alcDeviceResumeSOFT"/>
            </require>
        </extension>
        <extension name="AL_EXT_BFORMAT" supported="al">
            <comment>
                Provides support for B-Format ambisonic buffers (first-order, FuMa scaling
                and layout).

                BFORMAT2D_8: Unsigned 8-bit, 3-channel non-periphonic (WXY).
                BFORMAT2D_16: Signed 16-bit, 3-channel non-periphonic (WXY).
                BFORMAT2D_FLOAT32: 32-bit float, 3-channel non-periphonic (WXY).
                BFORMAT3D_8: Unsigned 8-bit, 4-channel periphonic (WXYZ).
                BFORMAT3D_16: Signed 16-bit, 4-channel periphonic (WXYZ).
                BFORMAT3D_FLOAT32: 32-bit float, 4-channel periphonic (WXYZ).
            </comment>
            <require>
                <enum name="AL_FORMAT_BFORMAT2D_8"/>
                <enum name="AL_FORMAT_BFORMAT2D_16"/>
                <enum name="AL_FORMAT_BFORMAT2D_FLOAT32"/>
                <enum name="AL_FORMAT_BFORMAT3D_8"/>
                <enum name="AL_FORMAT_BFORMAT3D_16"/>
                <enum name="AL_FORMAT_BFORMAT3D_FLOAT32"/>
            </require>
        </extension>
        <extension name="AL_EXT_MULAW_BFORMAT" supported="al">
            <require>
                <enum name="AL_FORMAT_BFORMAT2D_MULAW"/>
                <enum name="AL_FORMAT_BFORMAT3D_MULAW"/>
            </require>
        </extension>
        <extension name="ALC_SOFT_HRTF" supported="alc">
            <require>
                <enum name="ALC_HRTF_SOFT"/>
                <enum name="ALC_DONT_CARE_SOFT"/>
                <enum name="ALC_HRTF_STATUS_SOFT"/>
                <enum name="ALC_HRTF_DISABLED_SOFT"/>
                <enum name="ALC_HRTF_ENABLED_SOFT"/>
                <enum name="ALC_HRTF_DENIED_SOFT"/>
                <enum name="ALC_HRTF_REQUIRED_SOFT"/>
                <enum name="ALC_HRTF_HEADPHONES_DETECTED_SOFT"/>
                <enum name="ALC_HRTF_UNSUPPORTED_FORMAT_SOFT"/>
                <enum name="ALC_NUM_HRTF_SPECIFIERS_SOFT"/>
                <enum name="ALC_HRTF_SPECIFIER_SOFT"/>
                <enum name="ALC_HRTF_ID_SOFT"/>
                <command name="alcGetStringiSOFT"/>
                <command name="alcResetDeviceSOFT"/>
            </require>
        </extension>
        <extension name="AL_SOFT_gain_clamp_ex" supported="al">
            <require>
                <enum name="AL_GAIN_LIMIT_SOFT"/>
            </require>
        </extension>
        <extension name="AL_SOFT_source_resampler" supported="al">
            <require>
                <enum name="AL_NUM_RESAMPLERS_SOFT"/>
                <enum name="AL_DEFAULT_RESAMPLER_SOFT"/>
                <enum name="AL_SOURCE_RESAMPLER_SOFT"/>
                <enum name="AL_RESAMPLER_NAME_SOFT"/>
                <command name="alGetStringiSOFT"/>
            </require>
        </extension>
        <extension name="AL_SOFT_source_spatialize" supported="al">
            <require>
                <enum name="AL_SOURCE_SPATIALIZE_SOFT"/>
                <enum name="AL_AUTO_SOFT"/>
            </require>
        </extension>
        <extension name="ALC_SOFT_output_limiter" supported="alc">
            <require>
                <enum name="ALC_OUTPUT_LIMITER_SOFT"/>
            </require>
        </extension>
        <extension name="ALC_SOFT_device_clock" supported="al|alc">
            <require api="alc">
                <enum name="ALCint64SOFT"/>
                <enum name="ALCuint64SOFT"/>
                <enum name="ALC_DEVICE_CLOCK_SOFT"/>
                <enum name="ALC_DEVICE_LATENCY_SOFT"/>
                <enum name="ALC_DEVICE_CLOCK_LATENCY_SOFT"/>
            </require>
            <require api="al">
                <enum name="AL_SAMPLE_OFFSET_CLOCK_SOFT"/>
                <enum name="AL_SEC_OFFSET_CLOCK_SOFT"/>
            </require>
            <require api="alc">
                <command name="alcGetInteger64vSOFT"/>
            </require>
        </extension>
        <extension name="AL_SOFT_direct_channels_remix" supported="al">
            <require>
                <enum name="AL_DROP_UNMATCHED_SOFT"/>
                <enum name="AL_REMIX_UNMATCHED_SOFT"/>
            </require>
        </extension>
        <extension name="AL_SOFT_bformat_ex" supported="al">
            <require>
                <enum name="AL_AMBISONIC_LAYOUT_SOFT"/>
                <enum name="AL_AMBISONIC_SCALING_SOFT"/>
            </require>
            <require comment="Ambisonic layouts">
                <enum name="AL_FUMA_SOFT"/>
                <enum name="AL_ACN_SOFT"/>
            </require>
            <require comment="Ambisonic scalings (normalization)">
                <enum name="AL_SN3D_SOFT"/>
                <enum name="AL_N3D_SOFT"/>
            </require>
        </extension>
        <extension name="ALC_SOFT_loopback_bformat" supported="alc">
            <require>
                <enum name="ALC_AMBISONIC_LAYOUT_SOFT"/>
                <enum name="ALC_AMBISONIC_SCALING_SOFT"/>
                <enum name="ALC_AMBISONIC_ORDER_SOFT"/>
                <enum name="ALC_MAX_AMBISONIC_ORDER_SOFT"/>
            </require>
            <require>
                <enum name="ALC_BFORMAT3D_SOFT"/>
            </require>
            <require comment="Ambisonic layouts">
                <enum name="ALC_FUMA_SOFT"/>
                <enum name="ALC_ACN_SOFT"/>
            </require>
            <require comment="Ambisonic scalings (normalization)">
                <enum name="ALC_SN3D_SOFT"/>
                <enum name="ALC_N3D_SOFT"/>
            </require>
        </extension>
        <extension name="AL_SOFT_effect_target" supported="al">
            <require>
                <enum name="AL_EFFECTSLOT_TARGET_SOFT"/>
            </require>
        </extension>
        <extension name="AL_SOFT_events" supported="al">
            <require>
                <enum name="AL_EVENT_CALLBACK_FUNCTION_SOFT"/>
                <enum name="AL_EVENT_CALLBACK_USER_PARAM_SOFT"/>
                <enum name="AL_EVENT_TYPE_BUFFER_COMPLETED_SOFT"/>
                <enum name="AL_EVENT_TYPE_SOURCE_STATE_CHANGED_SOFT"/>
                <enum name="AL_EVENT_TYPE_DISCONNECTED_SOFT"/>
                <type name="ALEVENTPROCSOFT"/>
                <command name="alEventControlSOFT"/>
                <command name="alEventCallbackSOFT"/>
                <command name="alGetPointerSOFT"/>
                <command name="alGetPointervSOFT"/>
            </require>
        </extension>
        <extension name="ALC_SOFT_reopen_device" supported="alc">
            <require>
                <command name="alcReopenDeviceSOFT"/>
            </require>
        </extension>
        <extension name="AL_SOFT_callback_buffer" supported="al">
            <require>
                <enum name="AL_BUFFER_CALLBACK_FUNCTION_SOFT"/>
                <enum name="AL_BUFFER_CALLBACK_USER_PARAM_SOFT"/>
                <type name="ALBUFFERCALLBACKTYPESOFT"/>
                <command name="alBufferCallbackSOFT"/>
                <command name="alGetBufferPtrSOFT"/>
                <command name="alGetBuffer3PtrSOFT"/>
                <command name="alGetBufferPtrvSOFT"/>
            </require>
        </extension>
        <extension name="AL_SOFT_UHJ" supported="al">
            <require>
                <enum name="AL_FORMAT_UHJ2CHN8_SOFT"/>
                <enum name="AL_FORMAT_UHJ2CHN16_SOFT"/>
                <enum name="AL_FORMAT_UHJ2CHN_FLOAT32_SOFT"/>
                <enum name="AL_FORMAT_UHJ3CHN8_SOFT"/>
                <enum name="AL_FORMAT_UHJ3CHN16_SOFT"/>
                <enum name="AL_FORMAT_UHJ3CHN_FLOAT32_SOFT"/>
                <enum name="AL_FORMAT_UHJ4CHN8_SOFT"/>
                <enum name="AL_FORMAT_UHJ4CHN16_SOFT"/>
                <enum name="AL_FORMAT_UHJ4CHN_FLOAT32_SOFT"/>
            </require>
            <require>
                <enum name="AL_STEREO_MODE_SOFT"/>
                <enum name="AL_NORMAL_SOFT"/>
                <enum name="AL_SUPER_STEREO_SOFT"/>
                <enum name="AL_SUPER_STEREO_WIDTH_SOFT"/>
            </require>
        </extension>
        <extension name="AL_SOFT_UHJ_ex" supported="al">
            <require>
                <enum name="AL_FORMAT_UHJ2CHN_MULAW_SOFT"/>
                <enum name="AL_FORMAT_UHJ2CHN_ALAW_SOFT"/>
                <enum name="AL_FORMAT_UHJ2CHN_IMA4_SOFT"/>
                <enum name="AL_FORMAT_UHJ2CHN_MSADPCM_SOFT"/>
                <enum name="AL_FORMAT_UHJ3CHN_MULAW_SOFT"/>
                <enum name="AL_FORMAT_UHJ3CHN_ALAW_SOFT"/>
                <enum name="AL_FORMAT_UHJ4CHN_MULAW_SOFT"/>
                <enum name="AL_FORMAT_UHJ4CHN_ALAW_SOFT"/>
            </require>
        </extension>
        <extension name="ALC_SOFT_output_mode" supported="alc">
            <require>
                <enum name="ALC_OUTPUT_MODE_SOFT"/>
                <enum name="ALC_ANY_SOFT"/>
                <enum name="ALC_MONO_SOFT"/>
                <enum name="ALC_STEREO_SOFT"/>
                <enum name="ALC_STEREO_BASIC_SOFT"/>
                <enum name="ALC_STEREO_UHJ_SOFT"/>
                <enum name="ALC_STEREO_HRTF_SOFT"/>
                <enum name="ALC_QUAD_SOFT"/>
                <enum name="ALC_SURROUND_5_1_SOFT"/>
                <enum name="ALC_SURROUND_6_1_SOFT"/>
                <enum name="ALC_SURROUND_7_1_SOFT"/>
            </require>
        </extension>
        <extension name="AL_SOFT_source_start_delay" supported="al">
            <require>
                <command name="alSourcePlayAtTimeSOFT"/>
                <command name="alSourcePlayAtTimevSOFT"/>
            </require>
        </extension>
        <extension name="ALC_EXT_debug" supported="alc">
            <require>
                <enum name="ALC_CONTEXT_FLAGS_EXT"/>
                <enum name="ALC_CONTEXT_DEBUG_BIT_EXT"/>
            </require>
        </extension>
        <extension name="AL_EXT_debug" supported="al">
            <require>
                <enum name="AL_DONT_CARE_EXT"/>
                <enum name="AL_DEBUG_OUTPUT_EXT"/>
                <enum name="AL_DEBUG_CALLBACK_FUNCTION_EXT"/>
                <enum name="AL_DEBUG_CALLBACK_USER_PARAM_EXT"/>
                <enum name="AL_DEBUG_SOURCE_API_EXT"/>
                <enum name="AL_DEBUG_SOURCE_AUDIO_SYSTEM_EXT"/>
                <enum name="AL_DEBUG_SOURCE_THIRD_PARTY_EXT"/>
                <enum name="AL_DEBUG_SOURCE_APPLICATION_EXT"/>
                <enum name="AL_DEBUG_SOURCE_OTHER_EXT"/>
                <enum name="AL_DEBUG_TYPE_ERROR_EXT"/>
                <enum name="AL_DEBUG_TYPE_DEPRECATED_BEHAVIOR_EXT"/>
                <enum name="AL_DEBUG_TYPE_UNDEFINED_BEHAVIOR_EXT"/>
                <enum name="AL_DEBUG_TYPE_PORTABILITY_EXT"/>
                <enum name="AL_DEBUG_TYPE_PERFORMANCE_EXT"/>
                <enum name="AL_DEBUG_TYPE_MARKER_EXT"/>
                <enum name="AL_DEBUG_TYPE_PUSH_GROUP_EXT"/>
                <enum name="AL_DEBUG_TYPE_POP_GROUP_EXT"/>
                <enum name="AL_DEBUG_TYPE_OTHER_EXT"/>
                <enum name="AL_DEBUG_SEVERITY_HIGH_EXT"/>
                <enum name="AL_DEBUG_SEVERITY_MEDIUM_EXT"/>
                <enum name="AL_DEBUG_SEVERITY_LOW_EXT"/>
                <enum name="AL_DEBUG_SEVERITY_NOTIFICATION_EXT"/>
                <enum name="AL_DEBUG_LOGGED_MESSAGES_EXT"/>
                <enum name="AL_DEBUG_NEXT_LOGGED_MESSAGE_LENGTH_EXT"/>
                <enum name="AL_MAX_DEBUG_MESSAGE_LENGTH_EXT"/>
                <enum name="AL_MAX_DEBUG_LOGGED_MESSAGES_EXT"/>
                <enum name="AL_MAX_DEBUG_GROUP_STACK_DEPTH_EXT"/>
                <enum name="AL_MAX_LABEL_LENGTH_EXT"/>
                <enum name="AL_STACK_OVERFLOW_EXT"/>
                <enum name="AL_STACK_UNDERFLOW_EXT"/>
                <enum name="AL_CONTEXT_FLAGS_EXT"/>
                <enum name="AL_BUFFER_EXT"/>
                <enum name="AL_SOURCE_EXT"/>
                <enum name="AL_FILTER_EXT"/>
                <enum name="AL_EFFECT_EXT"/>
                <enum name="AL_AUXILIARY_EFFECT_SLOT_EXT"/>
            </require>
            <require>
                <type name="ALDEBUGPROCEXT"/>
                <command name="alDebugMessageCallbackEXT"/>
                <command name="alDebugMessageInsertEXT"/>
                <command name="alDebugMessageControlEXT"/>
                <command name="alPushDebugGroupEXT"/>
                <command name="alPopDebugGroupEXT"/>
                <command name="alGetDebugMessageLogEXT"/>
                <command name="alObjectLabelEXT"/>
                <command name="alGetObjectLabelEXT"/>
                <command name="alGetPointerEXT"/>
                <command name="alGetPointervEXT"/>
            </require>
        </extension>
        <extension name="ALC_SOFT_system_events" supported="alc">
            <require>
                <enum name="ALC_PLAYBACK_DEVICE_SOFT"/>
                <enum name="ALC_CAPTURE_DEVICE_SOFT"/>
                <enum name="ALC_EVENT_TYPE_DEFAULT_DEVICE_CHANGED_SOFT"/>
                <enum name="ALC_EVENT_TYPE_DEVICE_ADDED_SOFT"/>
                <enum name="ALC_EVENT_TYPE_DEVICE_REMOVED_SOFT"/>
                <enum name="ALC_EVENT_SUPPORTED_SOFT"/>
                <enum name="ALC_EVENT_NOT_SUPPORTED_SOFT"/>
                <type name="ALCEVENTPROCTYPESOFT"/>
                <command name="alcEventIsSupportedSOFT"/>
                <command name="alcEventControlSOFT"/>
                <command name="alcEventCallbackSOFT"/>
            </require>
        </extension>
        <extension name="AL_EXT_direct_context" supported="al|alc">
            <require api="alc">
                <command name="alcGetProcAddress2"/>
            </require>
            <require api="al">
                <command name="alEnableDirect"/>
                <command name="alDisableDirect"/>
                <command name="alIsEnabledDirect"/>
            </require>
            <require api="al">
                <command name="alDopplerFactorDirect"/>
                <command name="alSpeedOfSoundDirect"/>
                <command name="alDistanceModelDirect"/>
            </require>
            <require api="al">
                <command name="alGetStringDirect"/>
                <command name="alGetBooleanvDirect"/>
                <command name="alGetIntegervDirect"/>
                <command name="alGetFloatvDirect"/>
                <command name="alGetDoublevDirect"/>
                <command name="alGetBooleanDirect"/>
                <command name="alGetIntegerDirect"/>
                <command name="alGetFloatDirect"/>
                <command name="alGetDoubleDirect"/>
            </require>
            <require api="al">
                <command name="alGetErrorDirect"/>
                <command name="alIsExtensionPresentDirect"/>
                <command name="alGetProcAddressDirect"/>
                <command name="alGetEnumValueDirect"/>
            </require>
            <require api="al">
                <command name="alListenerfDirect"/>
                <command name="alListener3fDirect"/>
                <command name="alListenerfvDirect"/>
                <command name="alListeneriDirect"/>
                <command name="alListener3iDirect"/>
                <command name="alListenerivDirect"/>
                <command name="alGetListenerfDirect"/>
                <command name="alGetListener3fDirect"/>
                <command name="alGetListenerfvDirect"/>
                <command name="alGetListeneriDirect"/>
                <command name="alGetListener3iDirect"/>
                <command name="alGetListenerivDirect"/>
            </require>
            <require api="al">
                <command name="alGenSourcesDirect"/>
                <command name="alDeleteSourcesDirect"/>
                <command name="alIsSourceDirect"/>
                <command name="alSourcefDirect"/>
                <command name="alSource3fDirect"/>
                <command name="alSourcefvDirect"/>
                <command name="alSourceiDirect"/>
                <command name="alSource3iDirect"/>
                <command name="alSourceivDirect"/>
                <command name="alGetSourcefDirect"/>
                <command name="alGetSource3fDirect"/>
                <command name="alGetSourcefvDirect"/>
                <command name="alGetSourceiDirect"/>
                <command name="alGetSource3iDirect"/>
                <command name="alGetSourceivDirect"/>
                <command name="alSourcePlayDirect"/>
                <command name="alSourceStopDirect"/>
                <command name="alSourceRewindDirect"/>
                <command name="alSourcePauseDirect"/>
                <command name="alSourcePlayvDirect"/>
                <command name="alSourceStopvDirect"/>
                <command name="alSourceRewindvDirect"/>
                <command name="alSourcePausevDirect"/>
                <command name="alSourceQueueBuffersDirect"/>
                <command name="alSourceUnqueueBuffersDirect"/>
            </require>
            <require api="al">
                <command name="alGenBuffersDirect"/>
                <command name="alDeleteBuffersDirect"/>
                <command name="alIsBufferDirect"/>
                <command name="alBufferDataDirect"/>
                <command name="alBufferfDirect"/>
                <command name="alBuffer3fDirect"/>
                <command name="alBufferfvDirect"/>
                <command name="alBufferiDirect"/>
                <command name="alBuffer3iDirect"/>
                <command name="alBufferivDirect"/>
                <command name="alGetBufferfDirect"/>
                <command name="alGetBuffer3fDirect"/>
                <command name="alGetBufferfvDirect"/>
                <command name="alGetBufferiDirect"/>
                <command name="alGetBuffer3iDirect"/>
                <command name="alGetBufferivDirect"/>
            </require>
            <require api="al" depends="ALC_EXT_EFX">
                <command name="alGenEffectsDirect"/>
                <command name="alDeleteEffectsDirect"/>
                <command name="alIsEffectDirect"/>
                <command name="alEffectiDirect"/>
                <command name="alEffectivDirect"/>
                <command name="alEffectfDirect"/>
                <command name="alEffectfvDirect"/>
                <command name="alGetEffectiDirect"/>
                <command name="alGetEffectivDirect"/>
                <command name="alGetEffectfDirect"/>
                <command name="alGetEffectfvDirect"/>
            </require>
            <require api="al" depends="ALC_EXT_EFX">
                <command name="alGenFiltersDirect"/>
                <command name="alDeleteFiltersDirect"/>
                <command name="alIsFilterDirect"/>
                <command name="alFilteriDirect"/>
                <command name="alFilterivDirect"/>
                <command name="alFilterfDirect"/>
                <command name="alFilterfvDirect"/>
                <command name="alGetFilteriDirect"/>
                <command name="alGetFilterivDirect"/>
                <command name="alGetFilterfDirect"/>
                <command name="alGetFilterfvDirect"/>
            </require>
            <require api="al" depends="ALC_EXT_EFX">
                <command name="alGenAuxiliaryEffectSlotsDirect"/>
                <command name="alDeleteAuxiliaryEffectSlotsDirect"/>
                <command name="alIsAuxiliaryEffectSlotDirect"/>
                <command name="alAuxiliaryEffectSlotiDirect"/>
                <command name="alAuxiliaryEffectSlotivDirect"/>
                <command name="alAuxiliaryEffectSlotfDirect"/>
                <command name="alAuxiliaryEffectSlotfvDirect"/>
                <command name="alGetAuxiliaryEffectSlotiDirect"/>
                <command name="alGetAuxiliaryEffectSlotivDirect"/>
                <command name="alGetAuxiliaryEffectSlotfDirect"/>
                <command name="alGetAuxiliaryEffectSlotfvDirect"/>
            </require>
            <require api="al" depends="AL_EXT_STATIC_BUFFER">
                <command name="alBufferDataStaticDirect"/>
            </require>
            <require api="al" depends="AL_EXT_debug">
                <command name="alDebugMessageCallbackDirectEXT"/>
                <command name="alDebugMessageInsertDirectEXT"/>
                <command name="alDebugMessageControlDirectEXT"/>
                <command name="alPushDebugGroupDirectEXT"/>
                <command name="alPopDebugGroupDirectEXT"/>
                <command name="alGetDebugMessageLogDirectEXT"/>
                <command name="alObjectLabelDirectEXT"/>
                <command name="alGetObjectLabelDirectEXT"/>
                <command name="alGetPointerDirectEXT"/>
                <command name="alGetPointervDirectEXT"/>
            </require>
            <require api="al" depends="AL_EXT_FOLDBACK">
                <command name="alRequestFoldbackStartDirect"/>
                <command name="alRequestFoldbackStopDirect"/>
            </require>
            <require api="al" depends="AL_SOFT_buffer_sub_data">
                <command name="alBufferSubDataDirectSOFT"/>
            </require>
            <require api="al" depends="AL_SOFT_source_latency">
                <command name="alSourcedDirectSOFT"/>
                <command name="alSource3dDirectSOFT"/>
                <command name="alSourcedvDirectSOFT"/>
                <command name="alGetSourcedDirectSOFT"/>
                <command name="alGetSource3dDirectSOFT"/>
                <command name="alGetSourcedvDirectSOFT"/>
                <command name="alSourcei64DirectSOFT"/>
                <command name="alSource3i64DirectSOFT"/>
                <command name="alSourcei64vDirectSOFT"/>
                <command name="alGetSourcei64DirectSOFT"/>
                <command name="alGetSource3i64DirectSOFT"/>
                <command name="alGetSourcei64vDirectSOFT"/>
            </require>
            <require api="al" depends="AL_SOFT_deferred_updates">
                <command name="alDeferUpdatesDirectSOFT"/>
                <command name="alProcessUpdatesDirectSOFT"/>
            </require>
            <require api="al" depends="AL_SOFT_source_resampler">
                <command name="alGetStringiDirectSOFT"/>
            </require>
            <require api="al" depends="AL_SOFT_events">
                <command name="alEventControlDirectSOFT"/>
                <command name="alEventCallbackDirectSOFT"/>
                <command name="alGetPointerDirectSOFT"/>
                <command name="alGetPointervDirectSOFT"/>
            </require>
            <require api="al" depends="AL_SOFT_callback_buffer">
                <command name="alBufferCallbackDirectSOFT"/>
                <command name="alGetBufferPtrDirectSOFT"/>
                <command name="alGetBuffer3PtrDirectSOFT"/>
                <command name="alGetBufferPtrvDirectSOFT"/>
            </require>
            <require api="al" depends="AL_SOFT_source_start_delay">
                <command name="alSourcePlayAtTimeDirectSOFT"/>
                <command name="alSourcePlayAtTimevDirectSOFT"/>
            </require>
            <!-- TODO: should be depends="EAX" but EAX headers aren't defined here yet. -->
            <require api="al">
                <type name="_GUID"/>
                <command name="EAXSetDirect"/>
                <command name="EAXGetDirect"/>
                <command name="EAXSetBufferModeDirect"/>
                <command name="EAXGetBufferModeDirect"/>
            </require>
        </extension>
        <extension name="AL_SOFT_bformat_hoa" supported="al">
            <require>
                <enum name="AL_UNPACK_AMBISONIC_ORDER_SOFT"/>
            </require>
        </extension>
    </extensions>
</registry>
